id: c61979f6f2cba5cb3c06
bug_link: https://syzkaller.appspot.com/bug?extid=c61979f6f2cba5cb3c06
title: 'INFO: task hung in ext4_fallocate'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: f456767d3391e9f7d9d25a2e7241d75676dc19da
fix_commit: f18b2b83a727a3db208308057d2c7945f368e625
datetime: '2018-10-02T01:34:44-04:00'
fix_commit_message: 'ext4: fix argument checking in EXT4_IOC_MOVE_EXT


  If the starting block number of either the source or destination file

  exceeds the EOF, EXT4_IOC_MOVE_EXT should return EINVAL.


  Also fixed the helper function mext_check_coverage() so that if the

  logical block is beyond EOF, make it return immediately, instead of

  looping until the block number wraps all the away around.  This takes

  long enough that if there are multiple threads trying to do pound on

  an the same inode doing non-sensical things, it can end up triggering

  the kernel''s soft lockup detector.


  Reported-by: syzbot+c61979f6f2cba5cb3c06@syzkaller.appspotmail.com

  Signed-off-by: Theodore Ts''o <tytso@mit.edu>

  Cc: stable@kernel.org

  '
submodule:
- fs/ext4
hunk_count: 1
covered_count: 0
