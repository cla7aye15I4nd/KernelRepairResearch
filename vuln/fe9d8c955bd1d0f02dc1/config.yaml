id: fe9d8c955bd1d0f02dc1
bug_link: https://syzkaller.appspot.com/bug?extid=fe9d8c955bd1d0f02dc1
title: WARNING in trc_read_check_handler
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: cbe0d8d91415c9692fe88191940d98952b6855d9
fix_commit: 96017bf9039763a2e02dcc6adaa18592cd73a39d
datetime: '2021-09-15T11:37:50-07:00'
fix_commit_message: 'rcu-tasks: Simplify trc_read_check_handler() atomic operations


  Currently, trc_wait_for_one_reader() atomically increments

  the trc_n_readers_need_end counter before sending the IPI

  invoking trc_read_check_handler().  All failure paths out of

  trc_read_check_handler() and also from the smp_call_function_single()

  within trc_wait_for_one_reader() must carefully atomically decrement

  this counter.  This is more complex than it needs to be.


  This commit therefore simplifies things and saves a few lines of

  code by dispensing with the atomic decrements in favor of having

  trc_read_check_handler() do the atomic increment only in the success case.

  In theory, this represents no change in functionality.


  Signed-off-by: Paul E. McKenney <paulmck@kernel.org>

  '
submodule:
- kernel/rcu
hunk_count: 2
covered_count: 1
