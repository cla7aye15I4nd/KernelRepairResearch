id: ec941d6e24f633a59172
bug_link: https://syzkaller.appspot.com/bug?extid=ec941d6e24f633a59172
title: possible deadlock in sock_hash_delete_elem (2)
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 95348e463eabc803341c67d562f9e0a5f0a48fe6
fix_commit: 98e948fb60d41447fd8d2d0c3b8637fc6b6dc26d
datetime: '2024-05-27T19:33:40+02:00'
fix_commit_message: 'bpf: Allow delete from sockmap/sockhash only if update is allowed


  We have seen an influx of syzkaller reports where a BPF program attached to

  a tracepoint triggers a locking rule violation by performing a map_delete

  on a sockmap/sockhash.


  We don''t intend to support this artificial use scenario. Extend the

  existing verifier allowed-program-type check for updating sockmap/sockhash

  to also cover deleting from a map.


  From now on only BPF programs which were previously allowed to update

  sockmap/sockhash can delete from these map types.


  Fixes: ff9105993240 ("bpf, sockmap: Prevent lock inversion deadlock in map delete
  elem")

  Reported-by: Tetsuo Handa <penguin-kernel@i-love.sakura.ne.jp>

  Reported-by: syzbot+ec941d6e24f633a59172@syzkaller.appspotmail.com

  Signed-off-by: Jakub Sitnicki <jakub@cloudflare.com>

  Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>

  Tested-by: syzbot+ec941d6e24f633a59172@syzkaller.appspotmail.com

  Acked-by: John Fastabend <john.fastabend@gmail.com>

  Closes: https://syzkaller.appspot.com/bug?extid=ec941d6e24f633a59172

  Link: https://lore.kernel.org/bpf/20240527-sockmap-verify-deletes-v1-1-944b372f2101@cloudflare.com

  '
submodule:
- kernel/bpf
hunk_count: 4
covered_count: 0
