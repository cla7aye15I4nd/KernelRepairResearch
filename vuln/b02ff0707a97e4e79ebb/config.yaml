id: b02ff0707a97e4e79ebb
bug_link: https://syzkaller.appspot.com/bug?extid=b02ff0707a97e4e79ebb
title: 'KMSAN: uninit-value in can_receive'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 93bdc0eb0b4bb5e7094fd4a95f4a394e4a927e09
fix_commit: e7153bf70c3496bac00e7e4f395bb8d8394ac0ea
datetime: '2020-01-02T15:34:27+01:00'
fix_commit_message: 'can: can_dropped_invalid_skb(): ensure an initialized headroom
  in outgoing CAN sk_buffs


  KMSAN sysbot detected a read access to an untinitialized value in the

  headroom of an outgoing CAN related sk_buff. When using CAN sockets this

  area is filled appropriately - but when using a packet socket this

  initialization is missing.


  The problematic read access occurs in the CAN receive path which can

  only be triggered when the sk_buff is sent through a (virtual) CAN

  interface. So we check in the sending path whether we need to perform

  the missing initializations.


  Fixes: d3b58c47d330d ("can: replace timestamp as unique skb attribute")

  Reported-by: syzbot+b02ff0707a97e4e79ebb@syzkaller.appspotmail.com

  Signed-off-by: Oliver Hartkopp <socketcan@hartkopp.net>

  Tested-by: Oliver Hartkopp <socketcan@hartkopp.net>

  Cc: linux-stable <stable@vger.kernel.org> # >= v4.1

  Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>

  '
submodule:
- include/linux/can
hunk_count: 3
covered_count: 0
