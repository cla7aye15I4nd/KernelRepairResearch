id: 5681e40d297b30f5b513
bug_link: https://syzkaller.appspot.com/bug?extid=5681e40d297b30f5b513
title: 'KMSAN: kernel-infoleak in raw_recvmsg'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: d3e2904f71ea0fe7eaff1d68a2b0363c888ea0fb
fix_commit: b7cdf1dd5d2a2d8200efd98d1893684db48fe134
datetime: '2024-06-21T10:50:15+02:00'
fix_commit_message: "net: can: j1939: Initialize unused data in j1939_send_one()\n\
  \nsyzbot reported kernel-infoleak in raw_recvmsg() [1]. j1939_send_one()\ncreates\
  \ full frame including unused data, but it doesn't initialize\nit. This causes the\
  \ kernel-infoleak issue. Fix this by initializing\nunused data.\n\n[1]\nBUG: KMSAN:\
  \ kernel-infoleak in instrument_copy_to_user include/linux/instrumented.h:114 [inline]\n\
  BUG: KMSAN: kernel-infoleak in copy_to_user_iter lib/iov_iter.c:24 [inline]\nBUG:\
  \ KMSAN: kernel-infoleak in iterate_ubuf include/linux/iov_iter.h:29 [inline]\n\
  BUG: KMSAN: kernel-infoleak in iterate_and_advance2 include/linux/iov_iter.h:245\
  \ [inline]\nBUG: KMSAN: kernel-infoleak in iterate_and_advance include/linux/iov_iter.h:271\
  \ [inline]\nBUG: KMSAN: kernel-infoleak in _copy_to_iter+0x366/0x2520 lib/iov_iter.c:185\n\
  \ instrument_copy_to_user include/linux/instrumented.h:114 [inline]\n copy_to_user_iter\
  \ lib/iov_iter.c:24 [inline]\n iterate_ubuf include/linux/iov_iter.h:29 [inline]\n\
  \ iterate_and_advance2 include/linux/iov_iter.h:245 [inline]\n iterate_and_advance\
  \ include/linux/iov_iter.h:271 [inline]\n _copy_to_iter+0x366/0x2520 lib/iov_iter.c:185\n\
  \ copy_to_iter include/linux/uio.h:196 [inline]\n memcpy_to_msg include/linux/skbuff.h:4113\
  \ [inline]\n raw_recvmsg+0x2b8/0x9e0 net/can/raw.c:1008\n sock_recvmsg_nosec net/socket.c:1046\
  \ [inline]\n sock_recvmsg+0x2c4/0x340 net/socket.c:1068\n ____sys_recvmsg+0x18a/0x620\
  \ net/socket.c:2803\n ___sys_recvmsg+0x223/0x840 net/socket.c:2845\n do_recvmmsg+0x4fc/0xfd0\
  \ net/socket.c:2939\n __sys_recvmmsg net/socket.c:3018 [inline]\n __do_sys_recvmmsg\
  \ net/socket.c:3041 [inline]\n __se_sys_recvmmsg net/socket.c:3034 [inline]\n __x64_sys_recvmmsg+0x397/0x490\
  \ net/socket.c:3034\n x64_sys_call+0xf6c/0x3b50 arch/x86/include/generated/asm/syscalls_64.h:300\n\
  \ do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n do_syscall_64+0xcf/0x1e0\
  \ arch/x86/entry/common.c:83\n entry_SYSCALL_64_after_hwframe+0x77/0x7f\n\nUninit\
  \ was created at:\n slab_post_alloc_hook mm/slub.c:3804 [inline]\n slab_alloc_node\
  \ mm/slub.c:3845 [inline]\n kmem_cache_alloc_node+0x613/0xc50 mm/slub.c:3888\n kmalloc_reserve+0x13d/0x4a0\
  \ net/core/skbuff.c:577\n __alloc_skb+0x35b/0x7a0 net/core/skbuff.c:668\n alloc_skb\
  \ include/linux/skbuff.h:1313 [inline]\n alloc_skb_with_frags+0xc8/0xbf0 net/core/skbuff.c:6504\n\
  \ sock_alloc_send_pskb+0xa81/0xbf0 net/core/sock.c:2795\n sock_alloc_send_skb include/net/sock.h:1842\
  \ [inline]\n j1939_sk_alloc_skb net/can/j1939/socket.c:878 [inline]\n j1939_sk_send_loop\
  \ net/can/j1939/socket.c:1142 [inline]\n j1939_sk_sendmsg+0xc0a/0x2730 net/can/j1939/socket.c:1277\n\
  \ sock_sendmsg_nosec net/socket.c:730 [inline]\n __sock_sendmsg+0x30f/0x380 net/socket.c:745\n\
  \ ____sys_sendmsg+0x877/0xb60 net/socket.c:2584\n ___sys_sendmsg+0x28d/0x3c0 net/socket.c:2638\n\
  \ __sys_sendmsg net/socket.c:2667 [inline]\n __do_sys_sendmsg net/socket.c:2676\
  \ [inline]\n __se_sys_sendmsg net/socket.c:2674 [inline]\n __x64_sys_sendmsg+0x307/0x4a0\
  \ net/socket.c:2674\n x64_sys_call+0xc4b/0x3b50 arch/x86/include/generated/asm/syscalls_64.h:47\n\
  \ do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n do_syscall_64+0xcf/0x1e0\
  \ arch/x86/entry/common.c:83\n entry_SYSCALL_64_after_hwframe+0x77/0x7f\n\nBytes\
  \ 12-15 of 16 are uninitialized\nMemory access of size 16 starts at ffff888120969690\n\
  Data copied to user address 00000000200017c0\n\nCPU: 1 PID: 5050 Comm: syz-executor198\
  \ Not tainted 6.9.0-rc5-syzkaller-00031-g71b1543c83d6 #0\nHardware name: Google\
  \ Google Compute Engine/Google Compute Engine, BIOS Google 03/27/2024\n\nFixes:\
  \ 9d71dd0c7009 (\"can: add support of SAE J1939 protocol\")\nReported-and-tested-by:\
  \ syzbot+5681e40d297b30f5b513@syzkaller.appspotmail.com\nCloses: https://syzkaller.appspot.com/bug?extid=5681e40d297b30f5b513\n\
  Acked-by: Oleksij Rempel <o.rempel@pengutronix.de>\nSigned-off-by: Shigeru Yoshida\
  \ <syoshida@redhat.com>\nLink: https://lore.kernel.org/all/20240517035953.2617090-1-syoshida@redhat.com\n\
  Cc: stable@vger.kernel.org\nSigned-off-by: Marc Kleine-Budde <mkl@pengutronix.de>\n"
submodule:
- net/can
hunk_count: 2
covered_count: 0
