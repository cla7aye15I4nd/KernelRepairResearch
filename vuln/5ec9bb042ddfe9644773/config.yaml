id: 5ec9bb042ddfe9644773
bug_link: https://syzkaller.appspot.com/bug?extid=5ec9bb042ddfe9644773
title: WARNING in __vunmap
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 26dbd66eab8080be51759e48280da04015221e22
fix_commit: 8a04d2fc700f717104bfb95b0f6694e448a4537f
datetime: '2022-09-01T10:22:47+02:00'
fix_commit_message: "xfrm: Update ipcomp_scratches with NULL when freed\n\nCurrently\
  \ if ipcomp_alloc_scratches() fails to allocate memory\nipcomp_scratches holds obsolete\
  \ address. So when we try to free the\npercpu scratches using ipcomp_free_scratches()\
  \ it tries to vfree non\nexistent vm area. Described below:\n\nstatic void * __percpu\
  \ *ipcomp_alloc_scratches(void)\n{\n        ...\n        scratches = alloc_percpu(void\
  \ *);\n        if (!scratches)\n                return NULL;\nipcomp_scratches does\
  \ not know about this allocation failure.\nTherefore holding the old obsolete address.\n\
  \        ...\n}\n\nSo when we free,\n\nstatic void ipcomp_free_scratches(void)\n\
  {\n        ...\n        scratches = ipcomp_scratches;\nAssigning obsolete address\
  \ from ipcomp_scratches\n\n        if (!scratches)\n                return;\n\n\
  \        for_each_possible_cpu(i)\n               vfree(*per_cpu_ptr(scratches,\
  \ i));\nTrying to free non existent page, causing warning: trying to vfree\nexistent\
  \ vm area.\n        ...\n}\n\nFix this breakage by updating ipcomp_scrtches with\
  \ NULL when scratches\nis freed\n\nSuggested-by: Herbert Xu <herbert@gondor.apana.org.au>\n\
  Reported-by: syzbot+5ec9bb042ddfe9644773@syzkaller.appspotmail.com\nTested-by: syzbot+5ec9bb042ddfe9644773@syzkaller.appspotmail.com\n\
  Signed-off-by: Khalid Masum <khalid.masum.92@gmail.com>\nAcked-by: Herbert Xu <herbert@gondor.apana.org.au>\n\
  Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>\n"
submodule:
- net/xfrm
hunk_count: 1
covered_count: 1
