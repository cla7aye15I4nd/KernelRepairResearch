id: f8f3dfa4abc489e768a1
bug_link: https://syzkaller.appspot.com/bug?extid=f8f3dfa4abc489e768a1
title: 'KASAN: use-after-free Read in do_garbage_collect'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 41e8f85a75fc60e1543e4903428a1b481b672a17
fix_commit: d3b7b4afd6b2c344eabf9cc26b8bfa903c164c7c
datetime: '2022-11-28T12:46:33-08:00'
fix_commit_message: "f2fs: fix to do sanity check on i_extra_isize in is_alive()\n\
  \nsyzbot found a f2fs bug:\n\nBUG: KASAN: slab-out-of-bounds in data_blkaddr fs/f2fs/f2fs.h:2891\
  \ [inline]\nBUG: KASAN: slab-out-of-bounds in is_alive fs/f2fs/gc.c:1117 [inline]\n\
  BUG: KASAN: slab-out-of-bounds in gc_data_segment fs/f2fs/gc.c:1520 [inline]\nBUG:\
  \ KASAN: slab-out-of-bounds in do_garbage_collect+0x386a/0x3df0 fs/f2fs/gc.c:1734\n\
  Read of size 4 at addr ffff888076557568 by task kworker/u4:3/52\n\nCPU: 1 PID: 52\
  \ Comm: kworker/u4:3 Not tainted 6.1.0-rc4-syzkaller-00362-gfef7fd48922d #0\nHardware\
  \ name: Google Google Compute Engine/Google Compute Engine, BIOS Google 10/26/2022\n\
  Workqueue: writeback wb_workfn (flush-7:0)\nCall Trace:\n<TASK>\n__dump_stack lib/dump_stack.c:88\
  \ [inline]\ndump_stack_lvl+0xcd/0x134 lib/dump_stack.c:106\nprint_address_description\
  \ mm/kasan/report.c:284 [inline]\nprint_report+0x15e/0x45d mm/kasan/report.c:395\n\
  kasan_report+0xbb/0x1f0 mm/kasan/report.c:495\ndata_blkaddr fs/f2fs/f2fs.h:2891\
  \ [inline]\nis_alive fs/f2fs/gc.c:1117 [inline]\ngc_data_segment fs/f2fs/gc.c:1520\
  \ [inline]\ndo_garbage_collect+0x386a/0x3df0 fs/f2fs/gc.c:1734\nf2fs_gc+0x88c/0x20a0\
  \ fs/f2fs/gc.c:1831\nf2fs_balance_fs+0x544/0x6b0 fs/f2fs/segment.c:410\nf2fs_write_inode+0x57e/0xe20\
  \ fs/f2fs/inode.c:753\nwrite_inode fs/fs-writeback.c:1440 [inline]\n__writeback_single_inode+0xcfc/0x1440\
  \ fs/fs-writeback.c:1652\nwriteback_sb_inodes+0x54d/0xf90 fs/fs-writeback.c:1870\n\
  wb_writeback+0x2c5/0xd70 fs/fs-writeback.c:2044\nwb_do_writeback fs/fs-writeback.c:2187\
  \ [inline]\nwb_workfn+0x2dc/0x12f0 fs/fs-writeback.c:2227\nprocess_one_work+0x9bf/0x1710\
  \ kernel/workqueue.c:2289\nworker_thread+0x665/0x1080 kernel/workqueue.c:2436\n\
  kthread+0x2e4/0x3a0 kernel/kthread.c:376\nret_from_fork+0x1f/0x30 arch/x86/entry/entry_64.S:306\n\
  \nThe root cause is that we forgot to do sanity check on .i_extra_isize\nin below\
  \ path, result in accessing invalid address later, fix it.\n- gc_data_segment\n\
  \ - is_alive\n  - data_blkaddr\n   - offset_in_addr\n\nReported-by: syzbot+f8f3dfa4abc489e768a1@syzkaller.appspotmail.com\n\
  Link: https://lore.kernel.org/linux-f2fs-devel/0000000000003cb3c405ed5c17f9@google.com/T/#u\n\
  Signed-off-by: Chao Yu <chao@kernel.org>\nSigned-off-by: Jaegeuk Kim <jaegeuk@kernel.org>\n"
submodule:
- fs/f2fs
hunk_count: 2
covered_count: 2
