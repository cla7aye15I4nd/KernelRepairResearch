id: 5b658d997a83984507a6
bug_link: https://syzkaller.appspot.com/bug?extid=5b658d997a83984507a6
title: kernel BUG at fs/btrfs/volumes.c:LINE!
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 3fff3975a7155c49b85736786c6bcb1dd9dcec18
fix_commit: 321f69f86a0fc40203b43659c3a39464f15c2ee9
datetime: '2020-01-20T16:40:53+01:00'
fix_commit_message: 'btrfs: reset device back to allocation state when removing


  When closing a device, btrfs_close_one_device() first allocates a new

  device, copies the device to close''s name, replaces it in the dev_list

  with the copy and then finally frees it.


  This involves two memory allocation, which can potentially fail. As this

  code path is tricky to unwind, the allocation failures where handled by

  BUG_ON()s.


  But this copying isn''t strictly needed, all that is needed is resetting

  the device in question to it''s state it had after the allocation.


  Signed-off-by: Johannes Thumshirn <jthumshirn@suse.de>

  Reviewed-by: David Sterba <dsterba@suse.com>

  Signed-off-by: David Sterba <dsterba@suse.com>

  '
submodule:
- fs/btrfs
hunk_count: 2
covered_count: 2
