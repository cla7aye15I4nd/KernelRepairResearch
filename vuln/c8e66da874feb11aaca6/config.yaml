id: c8e66da874feb11aaca6
bug_link: https://syzkaller.appspot.com/bug?extid=c8e66da874feb11aaca6
title: 'KASAN: out-of-bounds Read in ip6_xmit'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 2f987a76a97773beafbc615b9c4d8fe79129a7f4
fix_commit: b954f94023dcc61388c8384f0f14eb8e42c863c5
datetime: '2018-03-12T15:11:09-04:00'
fix_commit_message: "l2tp: fix races with ipv4-mapped ipv6 addresses\n\nThe l2tp_tunnel_create()\
  \ function checks for v4mapped ipv6\nsockets and cache that flag, so that l2tp core\
  \ code can\nreusing it at xmit time.\n\nIf the socket is provided by the userspace,\
  \ the connection\nstatus of the tunnel sockets can change between the tunnel\ncreation\
  \ and the xmit call, so that syzbot is able to\ntrigger the following splat:\n\n\
  BUG: KASAN: use-after-free in ip6_dst_idev include/net/ip6_fib.h:192\n[inline]\n\
  BUG: KASAN: use-after-free in ip6_xmit+0x1f76/0x2260\nnet/ipv6/ip6_output.c:264\n\
  Read of size 8 at addr ffff8801bd949318 by task syz-executor4/23448\n\nCPU: 0 PID:\
  \ 23448 Comm: syz-executor4 Not tainted 4.16.0-rc4+ #65\nHardware name: Google Google\
  \ Compute Engine/Google Compute Engine, BIOS\nGoogle 01/01/2011\nCall Trace:\n \
  \ __dump_stack lib/dump_stack.c:17 [inline]\n  dump_stack+0x194/0x24d lib/dump_stack.c:53\n\
  \  print_address_description+0x73/0x250 mm/kasan/report.c:256\n  kasan_report_error\
  \ mm/kasan/report.c:354 [inline]\n  kasan_report+0x23c/0x360 mm/kasan/report.c:412\n\
  \  __asan_report_load8_noabort+0x14/0x20 mm/kasan/report.c:433\n  ip6_dst_idev include/net/ip6_fib.h:192\
  \ [inline]\n  ip6_xmit+0x1f76/0x2260 net/ipv6/ip6_output.c:264\n  inet6_csk_xmit+0x2fc/0x580\
  \ net/ipv6/inet6_connection_sock.c:139\n  l2tp_xmit_core net/l2tp/l2tp_core.c:1053\
  \ [inline]\n  l2tp_xmit_skb+0x105f/0x1410 net/l2tp/l2tp_core.c:1148\n  pppol2tp_sendmsg+0x470/0x670\
  \ net/l2tp/l2tp_ppp.c:341\n  sock_sendmsg_nosec net/socket.c:630 [inline]\n  sock_sendmsg+0xca/0x110\
  \ net/socket.c:640\n  ___sys_sendmsg+0x767/0x8b0 net/socket.c:2046\n  __sys_sendmsg+0xe5/0x210\
  \ net/socket.c:2080\n  SYSC_sendmsg net/socket.c:2091 [inline]\n  SyS_sendmsg+0x2d/0x50\
  \ net/socket.c:2087\n  do_syscall_64+0x281/0x940 arch/x86/entry/common.c:287\n \
  \ entry_SYSCALL_64_after_hwframe+0x42/0xb7\nRIP: 0033:0x453e69\nRSP: 002b:00007f819593cc68\
  \ EFLAGS: 00000246 ORIG_RAX: 000000000000002e\nRAX: ffffffffffffffda RBX: 00007f819593d6d4\
  \ RCX: 0000000000453e69\nRDX: 0000000000000081 RSI: 000000002037ffc8 RDI: 0000000000000004\n\
  RBP: 000000000072bea0 R08: 0000000000000000 R09: 0000000000000000\nR10: 0000000000000000\
  \ R11: 0000000000000246 R12: 00000000ffffffff\nR13: 00000000000004c3 R14: 00000000006f72e8\
  \ R15: 0000000000000000\n\nThis change addresses the issues:\n* explicitly checking\
  \ for TCP_ESTABLISHED for user space provided sockets\n* dropping the v4mapped flag\
  \ usage - it can become outdated - and\n  explicitly invoking ipv6_addr_v4mapped()\
  \ instead\n\nThe issue is apparently there since ancient times.\n\nv1 -> v2: (many\
  \ thanks to Guillaume)\n - with csum issue introduced in v1\n - replace pr_err with\
  \ pr_debug\n - fix build issue with IPV6 disabled\n - move l2tp_sk_is_v4mapped in\
  \ l2tp_core.c\n\nv2 -> v3:\n - don't update inet_daddr for v4mapped address, unneeded\n\
  \ - drop rendundant check at creation time\n\nReported-and-tested-by: syzbot+92fa328176eb07e4ac1a@syzkaller.appspotmail.com\n\
  Fixes: 3557baabf280 (\"[L2TP]: PPP over L2TP driver core\")\nSigned-off-by: Paolo\
  \ Abeni <pabeni@redhat.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>\n"
submodule:
- net/l2tp
hunk_count: 6
covered_count: 4
