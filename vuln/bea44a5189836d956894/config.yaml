id: bea44a5189836d956894
bug_link: https://syzkaller.appspot.com/bug?extid=bea44a5189836d956894
title: 'INFO: task hung in fuse_launder_page'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 5d5b74aa9c766f0dd37d5cc1a2a7a94586130501
fix_commit: 76224355db7570cbe6b6f75c8929a1558828dd55
datetime: '2021-08-17T21:05:16+02:00'
fix_commit_message: 'fuse: truncate pagecache on atomic_o_trunc


  fuse_finish_open() will be called with FUSE_NOWRITE in case of atomic

  O_TRUNC.  This can deadlock with fuse_wait_on_page_writeback() in

  fuse_launder_page() triggered by invalidate_inode_pages2().


  Fix by replacing invalidate_inode_pages2() in fuse_finish_open() with a

  truncate_pagecache() call.  This makes sense regardless of FOPEN_KEEP_CACHE

  or fc->writeback cache, so do it unconditionally.


  Reported-by: Xie Yongji <xieyongji@bytedance.com>

  Reported-and-tested-by: syzbot+bea44a5189836d956894@syzkaller.appspotmail.com

  Fixes: e4648309b85a ("fuse: truncate pending writes on O_TRUNC")

  Cc: <stable@vger.kernel.org>

  Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>

  '
submodule:
- fs/fuse
hunk_count: 2
covered_count: 2
