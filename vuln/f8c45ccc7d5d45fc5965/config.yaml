id: f8c45ccc7d5d45fc5965
bug_link: https://syzkaller.appspot.com/bug?extid=f8c45ccc7d5d45fc5965
title: general protection fault in list_lru_add
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: f82da161ea75dc4db21b2499e4b1facd36dab275
fix_commit: ae085d7f9365de7da27ab5c0d16b12d51ea7fca9
datetime: '2022-03-27T18:47:00-07:00'
fix_commit_message: 'mm: kfence: fix missing objcg housekeeping for SLAB


  The objcg is not cleared and put for kfence object when it is freed,

  which could lead to memory leak for struct obj_cgroup and wrong

  statistics of NR_SLAB_RECLAIMABLE_B or NR_SLAB_UNRECLAIMABLE_B.


  Since the last freed object''s objcg is not cleared,

  mem_cgroup_from_obj() could return the wrong memcg when this kfence

  object, which is not charged to any objcgs, is reallocated to other

  users.


  A real word issue [1] is caused by this bug.


  Link: https://lore.kernel.org/all/000000000000cabcb505dae9e577@google.com/ [1]

  Reported-by: syzbot+f8c45ccc7d5d45fc5965@syzkaller.appspotmail.com

  Fixes: d3fb45f370d9 ("mm, kfence: insert KFENCE hooks for SLAB")

  Signed-off-by: Muchun Song <songmuchun@bytedance.com>

  Cc: Dmitry Vyukov <dvyukov@google.com>

  Cc: Marco Elver <elver@google.com>

  Cc: Andrew Morton <akpm@linux-foundation.org>

  Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

  '
submodule:
- mm
hunk_count: 1
covered_count: 0
