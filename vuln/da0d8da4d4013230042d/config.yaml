id: da0d8da4d4013230042d
bug_link: https://syzkaller.appspot.com/bug?extid=da0d8da4d4013230042d
title: 'KASAN: use-after-free Read in pipe_wait'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: ff2672874be0ee426b0555cc7c5e918414fa88a5
fix_commit: 66e58e0ef80a56a1d7857b6ce121141563cdd93e
datetime: '2018-06-07T20:07:28-04:00'
fix_commit_message: 'bpfilter: fix race in pipe access


  syzbot reported the following crash

  [  338.293946] bpfilter: read fail -512

  [  338.304515] kasan: GPF could be caused by NULL-ptr deref or user memory access

  [  338.311863] general protection fault: 0000 [#1] SMP KASAN

  [  338.344360] RIP: 0010:__vfs_write+0x4a6/0x960

  [  338.426363] Call Trace:

  [  338.456967]  __kernel_write+0x10c/0x380

  [  338.460928]  __bpfilter_process_sockopt+0x1d8/0x35b

  [  338.487103]  bpfilter_mbox_request+0x4d/0xb0

  [  338.491492]  bpfilter_ip_get_sockopt+0x6b/0x90


  This can happen when multiple cpus trying to talk to user mode process

  via bpfilter_mbox_request(). One cpu grabs the mutex while another goes to

  sleep on the same mutex. Then former cpu sees that umh pipe is down and

  shuts down the pipes. Later cpu finally acquires the mutex and crashes

  on freed pipe.

  Fix the race by using info.pid as an indicator that umh and pipes are healthy

  and check it after acquiring the mutex.


  Fixes: d2ba09c17a06 ("net: add skeleton of bpfilter kernel module")

  Reported-by: syzbot+7ade6c94abb2774c0fee@syzkaller.appspotmail.com

  Signed-off-by: Alexei Starovoitov <ast@kernel.org>

  Signed-off-by: David S. Miller <davem@davemloft.net>

  '
submodule:
- net/bpfilter
hunk_count: 3
covered_count: 3
