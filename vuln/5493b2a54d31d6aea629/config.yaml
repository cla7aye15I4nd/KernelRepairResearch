id: 5493b2a54d31d6aea629
bug_link: https://syzkaller.appspot.com/bug?extid=5493b2a54d31d6aea629
title: WARNING in cgroup_apply_control_enable
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 75ea91cd3eab8214eb8cd7f61ac23f41884d29ec
fix_commit: 3bc0bb36fa30e95ca829e9cf480e1ef7f7638333
datetime: '2020-01-15T08:04:29-08:00'
fix_commit_message: 'cgroup: Prevent double killing of css when enabling threaded
  cgroup


  The test_cgcore_no_internal_process_constraint_on_threads selftest when

  running with subsystem controlling noise triggers two warnings:


  > [  597.443115] WARNING: CPU: 1 PID: 28167 at kernel/cgroup/cgroup.c:3131 cgroup_apply_control_enable+0xe0/0x3f0

  > [  597.443413] WARNING: CPU: 1 PID: 28167 at kernel/cgroup/cgroup.c:3177 cgroup_apply_control_disable+0xa6/0x160


  Both stem from a call to cgroup_type_write. The first warning was also

  triggered by syzkaller.


  When we''re switching cgroup to threaded mode shortly after a subsystem

  was disabled on it, we can see the respective subsystem css dying there.


  The warning in cgroup_apply_control_enable is harmless in this case

  since we''re not adding new subsys anyway.

  The warning in cgroup_apply_control_disable indicates an attempt to kill

  css of recently disabled subsystem repeatedly.


  The commit prevents these situations by making cgroup_type_write wait

  for all dying csses to go away before re-applying subtree controls.

  When at it, the locations of WARN_ON_ONCE calls are moved so that

  warning is triggered only when we are about to misuse the dying css.


  Reported-by: syzbot+5493b2a54d31d6aea629@syzkaller.appspotmail.com

  Reported-by: Christian Brauner <christian.brauner@ubuntu.com>

  Signed-off-by: Michal Koutn√Ω <mkoutny@suse.com>

  Signed-off-by: Tejun Heo <tj@kernel.org>

  '
submodule:
- kernel/cgroup
hunk_count: 4
covered_count: 2
