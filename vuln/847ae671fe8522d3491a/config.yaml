id: 847ae671fe8522d3491a
bug_link: https://syzkaller.appspot.com/bug?extid=847ae671fe8522d3491a
title: general protection fault in ieee80211_key_free
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: d91dc434f2baa592e9793597421231174d57bbbf
fix_commit: 3dc289f8f139997f4e9d3cfccf8738f20d23e47b
datetime: '2020-10-08T12:37:25+02:00'
fix_commit_message: 'net: wireless: nl80211: fix out-of-bounds access in nl80211_del_key()


  In nl80211_parse_key(), key.idx is first initialized as -1.

  If this value of key.idx remains unmodified and gets returned, and

  nl80211_key_allowed() also returns 0, then rdev_del_key() gets called

  with key.idx = -1.

  This causes an out-of-bounds array access.


  Handle this issue by checking if the value of key.idx after

  nl80211_parse_key() is called and return -EINVAL if key.idx < 0.


  Cc: stable@vger.kernel.org

  Reported-by: syzbot+b1bb342d1d097516cbda@syzkaller.appspotmail.com

  Tested-by: syzbot+b1bb342d1d097516cbda@syzkaller.appspotmail.com

  Signed-off-by: Anant Thazhemadam <anant.thazhemadam@gmail.com>

  Link: https://lore.kernel.org/r/20201007035401.9522-1-anant.thazhemadam@gmail.com

  Signed-off-by: Johannes Berg <johannes.berg@intel.com>

  '
submodule:
- net/wireless
hunk_count: 1
covered_count: 1
