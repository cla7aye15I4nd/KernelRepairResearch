id: 1dd53f7a89b299d59eaf
bug_link: https://syzkaller.appspot.com/bug?extid=1dd53f7a89b299d59eaf
title: possible deadlock in mptcp_close
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: d88fd1b546ff19c8040cfaea76bf16aed1c5a0bb
fix_commit: 49054556289e8787501630b7c7a9d407da02e296
datetime: '2021-09-30T13:06:47+01:00'
fix_commit_message: "net: introduce and use lock_sock_fast_nested()\n\nSyzkaller reported\
  \ a false positive deadlock involving\nthe nl socket lock and the subflow socket\
  \ lock:\n\nMPTCP: kernel_bind error, err=-98\n============================================\n\
  WARNING: possible recursive locking detected\n5.15.0-rc1-syzkaller #0 Not tainted\n\
  --------------------------------------------\nsyz-executor998/6520 is trying to\
  \ acquire lock:\nffff8880795718a0 (k-sk_lock-AF_INET){+.+.}-{0:0}, at: mptcp_close+0x267/0x7b0\
  \ net/mptcp/protocol.c:2738\n\nbut task is already holding lock:\nffff8880787c8c60\
  \ (k-sk_lock-AF_INET){+.+.}-{0:0}, at: lock_sock include/net/sock.h:1612 [inline]\n\
  ffff8880787c8c60 (k-sk_lock-AF_INET){+.+.}-{0:0}, at: mptcp_close+0x23/0x7b0 net/mptcp/protocol.c:2720\n\
  \nother info that might help us debug this:\n Possible unsafe locking scenario:\n\
  \n       CPU0\n       ----\n  lock(k-sk_lock-AF_INET);\n  lock(k-sk_lock-AF_INET);\n\
  \n *** DEADLOCK ***\n\n May be due to missing lock nesting notation\n\n3 locks held\
  \ by syz-executor998/6520:\n #0: ffffffff8d176c50 (cb_lock){++++}-{3:3}, at: genl_rcv+0x15/0x40\
  \ net/netlink/genetlink.c:802\n #1: ffffffff8d176d08 (genl_mutex){+.+.}-{3:3}, at:\
  \ genl_lock net/netlink/genetlink.c:33 [inline]\n #1: ffffffff8d176d08 (genl_mutex){+.+.}-{3:3},\
  \ at: genl_rcv_msg+0x3e0/0x580 net/netlink/genetlink.c:790\n #2: ffff8880787c8c60\
  \ (k-sk_lock-AF_INET){+.+.}-{0:0}, at: lock_sock include/net/sock.h:1612 [inline]\n\
  \ #2: ffff8880787c8c60 (k-sk_lock-AF_INET){+.+.}-{0:0}, at: mptcp_close+0x23/0x7b0\
  \ net/mptcp/protocol.c:2720\n\nstack backtrace:\nCPU: 1 PID: 6520 Comm: syz-executor998\
  \ Not tainted 5.15.0-rc1-syzkaller #0\nHardware name: Google Google Compute Engine/Google\
  \ Compute Engine, BIOS Google 01/01/2011\nCall Trace:\n __dump_stack lib/dump_stack.c:88\
  \ [inline]\n dump_stack_lvl+0xcd/0x134 lib/dump_stack.c:106\n print_deadlock_bug\
  \ kernel/locking/lockdep.c:2944 [inline]\n check_deadlock kernel/locking/lockdep.c:2987\
  \ [inline]\n validate_chain kernel/locking/lockdep.c:3776 [inline]\n __lock_acquire.cold+0x149/0x3ab\
  \ kernel/locking/lockdep.c:5015\n lock_acquire kernel/locking/lockdep.c:5625 [inline]\n\
  \ lock_acquire+0x1ab/0x510 kernel/locking/lockdep.c:5590\n lock_sock_fast+0x36/0x100\
  \ net/core/sock.c:3229\n mptcp_close+0x267/0x7b0 net/mptcp/protocol.c:2738\n inet_release+0x12e/0x280\
  \ net/ipv4/af_inet.c:431\n __sock_release net/socket.c:649 [inline]\n sock_release+0x87/0x1b0\
  \ net/socket.c:677\n mptcp_pm_nl_create_listen_socket+0x238/0x2c0 net/mptcp/pm_netlink.c:900\n\
  \ mptcp_nl_cmd_add_addr+0x359/0x930 net/mptcp/pm_netlink.c:1170\n genl_family_rcv_msg_doit+0x228/0x320\
  \ net/netlink/genetlink.c:731\n genl_family_rcv_msg net/netlink/genetlink.c:775\
  \ [inline]\n genl_rcv_msg+0x328/0x580 net/netlink/genetlink.c:792\n netlink_rcv_skb+0x153/0x420\
  \ net/netlink/af_netlink.c:2504\n genl_rcv+0x24/0x40 net/netlink/genetlink.c:803\n\
  \ netlink_unicast_kernel net/netlink/af_netlink.c:1314 [inline]\n netlink_unicast+0x533/0x7d0\
  \ net/netlink/af_netlink.c:1340\n netlink_sendmsg+0x86d/0xdb0 net/netlink/af_netlink.c:1929\n\
  \ sock_sendmsg_nosec net/socket.c:704 [inline]\n sock_sendmsg+0xcf/0x120 net/socket.c:724\n\
  \ sock_no_sendpage+0x101/0x150 net/core/sock.c:2980\n kernel_sendpage.part.0+0x1a0/0x340\
  \ net/socket.c:3504\n kernel_sendpage net/socket.c:3501 [inline]\n sock_sendpage+0xe5/0x140\
  \ net/socket.c:1003\n pipe_to_sendpage+0x2ad/0x380 fs/splice.c:364\n splice_from_pipe_feed\
  \ fs/splice.c:418 [inline]\n __splice_from_pipe+0x43e/0x8a0 fs/splice.c:562\n splice_from_pipe\
  \ fs/splice.c:597 [inline]\n generic_splice_sendpage+0xd4/0x140 fs/splice.c:746\n\
  \ do_splice_from fs/splice.c:767 [inline]\n direct_splice_actor+0x110/0x180 fs/splice.c:936\n\
  \ splice_direct_to_actor+0x34b/0x8c0 fs/splice.c:891\n do_splice_direct+0x1b3/0x280\
  \ fs/splice.c:979\n do_sendfile+0xae9/0x1240 fs/read_write.c:1249\n __do_sys_sendfile64\
  \ fs/read_write.c:1314 [inline]\n __se_sys_sendfile64 fs/read_write.c:1300 [inline]\n\
  \ __x64_sys_sendfile64+0x1cc/0x210 fs/read_write.c:1300\n do_syscall_x64 arch/x86/entry/common.c:50\
  \ [inline]\n do_syscall_64+0x35/0xb0 arch/x86/entry/common.c:80\n entry_SYSCALL_64_after_hwframe+0x44/0xae\n\
  RIP: 0033:0x7f215cb69969\nCode: 28 00 00 00 75 05 48 83 c4 28 c3 e8 e1 14 00 00\
  \ 90 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05\
  \ <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 c0 ff ff ff f7 d8 64 89 01 48\nRSP: 002b:00007ffc96bb3868\
  \ EFLAGS: 00000246 ORIG_RAX: 0000000000000028\nRAX: ffffffffffffffda RBX: 00007f215cbad072\
  \ RCX: 00007f215cb69969\nRDX: 0000000000000000 RSI: 0000000000000004 RDI: 0000000000000005\n\
  RBP: 0000000000000000 R08: 00007ffc96bb3a08 R09: 00007ffc96bb3a08\nR10: 0000000100000002\
  \ R11: 0000000000000246 R12: 00007ffc96bb387c\nR13: 431bde82d7b634db R14: 0000000000000000\
  \ R15: 0000000000000000\n\nthe problem originates from uncorrect lock annotation\
  \ in the mptcp\ncode and is only visible since commit 2dcb96bacce3 (\"net: core:\
  \ Correct\nthe sock::sk_lock.owned lockdep annotations\"), but is present since\n\
  the port-based endpoint support initial implementation.\n\nThis patch addresses\
  \ the issue introducing a nested variant of\nlock_sock_fast() and using it in the\
  \ relevant code path.\n\nFixes: 1729cf186d8a (\"mptcp: create the listening socket\
  \ for new port\")\nFixes: 2dcb96bacce3 (\"net: core: Correct the sock::sk_lock.owned\
  \ lockdep annotations\")\nSuggested-by: Thomas Gleixner <tglx@linutronix.de>\nReported-and-tested-by:\
  \ syzbot+1dd53f7a89b299d59eaf@syzkaller.appspotmail.com\nSigned-off-by: Paolo Abeni\
  \ <pabeni@redhat.com>\nReviewed-by: Thomas Gleixner <tglx@linutronix.de>\nSigned-off-by:\
  \ David S. Miller <davem@davemloft.net>\n"
submodule:
- include/net
- net/core
- net/mptcp
hunk_count: 4
covered_count: 4
