id: 0eac6f0bbd558fd866d7
bug_link: https://syzkaller.appspot.com/bug?extid=0eac6f0bbd558fd866d7
title: 'KMSAN: uninit-value in f2fs_lookup'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 17f930e0a649e158a567504df7bb01c90a8514c1
fix_commit: 6d7ab88a98c1b7a47c228f8ffb4f44d631eaf284
datetime: '2020-09-29T02:12:41-07:00'
fix_commit_message: "f2fs: fix uninit-value in f2fs_lookup\n\nAs syzbot reported:\n\
  \nCall Trace:\n __dump_stack lib/dump_stack.c:77 [inline]\n dump_stack+0x21c/0x280\
  \ lib/dump_stack.c:118\n kmsan_report+0xf7/0x1e0 mm/kmsan/kmsan_report.c:122\n __msan_warning+0x58/0xa0\
  \ mm/kmsan/kmsan_instr.c:219\n f2fs_lookup+0xe05/0x1a80 fs/f2fs/namei.c:503\n lookup_open\
  \ fs/namei.c:3082 [inline]\n open_last_lookups fs/namei.c:3177 [inline]\n path_openat+0x2729/0x6a90\
  \ fs/namei.c:3365\n do_filp_open+0x2b8/0x710 fs/namei.c:3395\n do_sys_openat2+0xa88/0x1140\
  \ fs/open.c:1168\n do_sys_open fs/open.c:1184 [inline]\n __do_compat_sys_openat\
  \ fs/open.c:1242 [inline]\n __se_compat_sys_openat+0x2a4/0x310 fs/open.c:1240\n\
  \ __ia32_compat_sys_openat+0x56/0x70 fs/open.c:1240\n do_syscall_32_irqs_on arch/x86/entry/common.c:80\
  \ [inline]\n __do_fast_syscall_32+0x129/0x180 arch/x86/entry/common.c:139\n do_fast_syscall_32+0x6a/0xc0\
  \ arch/x86/entry/common.c:162\n do_SYSENTER_32+0x73/0x90 arch/x86/entry/common.c:205\n\
  \ entry_SYSENTER_compat_after_hwframe+0x4d/0x5c\n\nIn f2fs_lookup(), @res_page could\
  \ be used before being initialized,\nbecause in __f2fs_find_entry(), once F2FS_I(dir)->i_current_depth\
  \ was\nbeen fuzzed to zero, then @res_page will never be initialized, causing\n\
  this kmsan warning, relocating @res_page initialization place to fix\nthis bug.\n\
  \nReported-by: syzbot+0eac6f0bbd558fd866d7@syzkaller.appspotmail.com\nSigned-off-by:\
  \ Chao Yu <yuchao0@huawei.com>\nSigned-off-by: Jaegeuk Kim <jaegeuk@kernel.org>\n"
submodule:
- fs/f2fs
hunk_count: 2
covered_count: 0
