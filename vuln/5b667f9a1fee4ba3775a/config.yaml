id: 5b667f9a1fee4ba3775a
bug_link: https://syzkaller.appspot.com/bug?extid=5b667f9a1fee4ba3775a
title: general protection fault in p9_client_walk
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: a22a29655c42d0263a7a84d5d808bfd55f20c53a
fix_commit: 3f61ac7c65bdb26accb52f9db66313597e759821
datetime: '2025-03-17T07:03:11+09:00'
fix_commit_message: "fs/9p: fix NULL pointer dereference on mkdir\n\nWhen a 9p tree\
  \ was mounted with option 'posixacl', parent directory had a\ndefault ACL set for\
  \ its subdirectories, e.g.:\n\n  setfacl -m default:group:simpsons:rwx parentdir\n\
  \nthen creating a subdirectory crashed 9p client, as v9fs_fid_add() call in\nfunction\
  \ v9fs_vfs_mkdir_dotl() sets the passed 'fid' pointer to NULL\n(since dafbe689736)\
  \ even though the subsequent v9fs_set_create_acl() call\nexpects a valid non-NULL\
  \ 'fid' pointer:\n\n  [   37.273191] BUG: kernel NULL pointer dereference, address:\
  \ 0000000000000000\n  ...\n  [   37.322338] Call Trace:\n  [   37.323043]  <TASK>\n\
  \  [   37.323621] ? __die (arch/x86/kernel/dumpstack.c:421 arch/x86/kernel/dumpstack.c:434)\n\
  \  [   37.324448] ? page_fault_oops (arch/x86/mm/fault.c:714)\n  [   37.325532]\
  \ ? search_module_extables (kernel/module/main.c:3733)\n  [   37.326742] ? p9_client_walk\
  \ (net/9p/client.c:1165) 9pnet\n  [   37.328006] ? search_bpf_extables (kernel/bpf/core.c:804)\n\
  \  [   37.329142] ? exc_page_fault (./arch/x86/include/asm/paravirt.h:686 arch/x86/mm/fault.c:1488\
  \ arch/x86/mm/fault.c:1538)\n  [   37.330196] ? asm_exc_page_fault (./arch/x86/include/asm/idtentry.h:574)\n\
  \  [   37.331330] ? p9_client_walk (net/9p/client.c:1165) 9pnet\n  [   37.332562]\
  \ ? v9fs_fid_xattr_get (fs/9p/xattr.c:30) 9p\n  [   37.333824] v9fs_fid_xattr_set\
  \ (fs/9p/fid.h:23 fs/9p/xattr.c:121) 9p\n  [   37.335077] v9fs_set_acl (fs/9p/acl.c:276)\
  \ 9p\n  [   37.336112] v9fs_set_create_acl (fs/9p/acl.c:307) 9p\n  [   37.337326]\
  \ v9fs_vfs_mkdir_dotl (fs/9p/vfs_inode_dotl.c:411) 9p\n  [   37.338590] vfs_mkdir\
  \ (fs/namei.c:4313)\n  [   37.339535] do_mkdirat (fs/namei.c:4336)\n  [   37.340465]\
  \ __x64_sys_mkdir (fs/namei.c:4354)\n  [   37.341455] do_syscall_64 (arch/x86/entry/common.c:52\
  \ arch/x86/entry/common.c:83)\n  [   37.342447] entry_SYSCALL_64_after_hwframe (arch/x86/entry/entry_64.S:130)\n\
  \nFix this by simply swapping the sequence of these two calls in\nv9fs_vfs_mkdir_dotl(),\
  \ i.e. calling v9fs_set_create_acl() before\nv9fs_fid_add().\n\nFixes: dafbe689736f\
  \ (\"9p fid refcount: cleanup p9_fid_put calls\")\nReported-by: syzbot+5b667f9a1fee4ba3775a@syzkaller.appspotmail.com\n\
  Signed-off-by: Christian Schoenebeck <linux_oss@crudebyte.com>\nMessage-ID: <E1tsiI6-002iMG-Kh@kylie.crudebyte.com>\n\
  Signed-off-by: Dominique Martinet <asmadeus@codewreck.org>\n"
submodule:
- fs/9p
hunk_count: 1
covered_count: 1
