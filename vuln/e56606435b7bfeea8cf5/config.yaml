id: e56606435b7bfeea8cf5
bug_link: https://syzkaller.appspot.com/bug?extid=e56606435b7bfeea8cf5
title: 'WARNING: bad unlock balance in mptcp_poll'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 3fe260e00cd0bf0be853c48fcc1e19853df615bb
fix_commit: e154659ba39a1c2be576aaa0a5bda8088d707950
datetime: '2020-04-12T21:04:08-07:00'
fix_commit_message: "mptcp: fix double-unlock in mptcp_poll\n\nmptcp_connect/28740\
  \ is trying to release lock (sk_lock-AF_INET) at:\n[<ffffffff82c15869>] mptcp_poll+0xb9/0x550\n\
  but there are no more locks to release!\nCall Trace:\n lock_release+0x50f/0x750\n\
  \ release_sock+0x171/0x1b0\n mptcp_poll+0xb9/0x550\n sock_poll+0x157/0x470\n ? get_net_ns+0xb0/0xb0\n\
  \ do_sys_poll+0x63c/0xdd0\n\nProblem is that __mptcp_tcp_fallback() releases the\
  \ mptcp socket lock,\nbut after recent change it doesn't do this in all of its return\
  \ paths.\n\nTo fix this, remove the unlock from __mptcp_tcp_fallback() and\nalways\
  \ do the unlock in the caller.\n\nAlso add a small comment as to why we have this\n\
  __mptcp_needs_tcp_fallback().\n\nFixes: 0b4f33def7bbde (\"mptcp: fix tcp fallback\
  \ crash\")\nReported-by: syzbot+e56606435b7bfeea8cf5@syzkaller.appspotmail.com\n\
  Signed-off-by: Florian Westphal <fw@strlen.de>\nSigned-off-by: David S. Miller <davem@davemloft.net>\n"
submodule:
- net/mptcp
hunk_count: 6
covered_count: 0
