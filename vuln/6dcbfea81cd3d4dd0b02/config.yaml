id: 6dcbfea81cd3d4dd0b02
bug_link: https://syzkaller.appspot.com/bug?extid=6dcbfea81cd3d4dd0b02
title: 'KMSAN: uninit-value in __crc32c_le_base'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 9e99bfefdbce2e23ef37487a3bcb4adf90a791d1
fix_commit: b6f3320b1d5267e7b583a6d0c88dda518101740c
datetime: '2019-12-09T10:16:39-08:00'
fix_commit_message: "sctp: fully initialize v4 addr in some functions\n\nSyzbot found\
  \ a crash:\n\n  BUG: KMSAN: uninit-value in crc32_body lib/crc32.c:112 [inline]\n\
  \  BUG: KMSAN: uninit-value in crc32_le_generic lib/crc32.c:179 [inline]\n  BUG:\
  \ KMSAN: uninit-value in __crc32c_le_base+0x4fa/0xd30 lib/crc32.c:202\n  Call Trace:\n\
  \    crc32_body lib/crc32.c:112 [inline]\n    crc32_le_generic lib/crc32.c:179 [inline]\n\
  \    __crc32c_le_base+0x4fa/0xd30 lib/crc32.c:202\n    chksum_update+0xb2/0x110\
  \ crypto/crc32c_generic.c:90\n    crypto_shash_update+0x4c5/0x530 crypto/shash.c:107\n\
  \    crc32c+0x150/0x220 lib/libcrc32c.c:47\n    sctp_csum_update+0x89/0xa0 include/net/sctp/checksum.h:36\n\
  \    __skb_checksum+0x1297/0x12a0 net/core/skbuff.c:2640\n    sctp_compute_cksum\
  \ include/net/sctp/checksum.h:59 [inline]\n    sctp_packet_pack net/sctp/output.c:528\
  \ [inline]\n    sctp_packet_transmit+0x40fb/0x4250 net/sctp/output.c:597\n    sctp_outq_flush_transports\
  \ net/sctp/outqueue.c:1146 [inline]\n    sctp_outq_flush+0x1823/0x5d80 net/sctp/outqueue.c:1194\n\
  \    sctp_outq_uncork+0xd0/0xf0 net/sctp/outqueue.c:757\n    sctp_cmd_interpreter\
  \ net/sctp/sm_sideeffect.c:1781 [inline]\n    sctp_side_effects net/sctp/sm_sideeffect.c:1184\
  \ [inline]\n    sctp_do_sm+0x8fe1/0x9720 net/sctp/sm_sideeffect.c:1155\n    sctp_primitive_REQUESTHEARTBEAT+0x175/0x1a0\
  \ net/sctp/primitive.c:185\n    sctp_apply_peer_addr_params+0x212/0x1d40 net/sctp/socket.c:2433\n\
  \    sctp_setsockopt_peer_addr_params net/sctp/socket.c:2686 [inline]\n    sctp_setsockopt+0x189bb/0x19090\
  \ net/sctp/socket.c:4672\n\nThe issue was caused by transport->ipaddr set with uninit\
  \ addr param, which\nwas passed by:\n\n  sctp_transport_init net/sctp/transport.c:47\
  \ [inline]\n  sctp_transport_new+0x248/0xa00 net/sctp/transport.c:100\n  sctp_assoc_add_peer+0x5ba/0x2030\
  \ net/sctp/associola.c:611\n  sctp_process_param net/sctp/sm_make_chunk.c:2524 [inline]\n\
  \nwhere 'addr' is set by sctp_v4_from_addr_param(), and it doesn't initialize\n\
  the padding of addr->v4.\n\nLater when calling sctp_make_heartbeat(), hbinfo.daddr(=transport->ipaddr)\n\
  will become the part of skb, and the issue occurs.\n\nThis patch is to fix it by\
  \ initializing the padding of addr->v4 in\nsctp_v4_from_addr_param(), as well as\
  \ other functions that do the similar\nthing, and these functions shouldn't trust\
  \ that the caller initializes the\nmemory, as Marcelo suggested.\n\nReported-by:\
  \ syzbot+6dcbfea81cd3d4dd0b02@syzkaller.appspotmail.com\nSigned-off-by: Xin Long\
  \ <lucien.xin@gmail.com>\nAcked-by: Neil Horman <nhorman@tuxdriver.com>\nSigned-off-by:\
  \ David S. Miller <davem@davemloft.net>\n"
submodule:
- net/sctp
hunk_count: 5
covered_count: 0
