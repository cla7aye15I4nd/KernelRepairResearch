id: b0a35a5c1f7e846d3b09
bug_link: https://syzkaller.appspot.com/bug?extid=b0a35a5c1f7e846d3b09
title: kernel BUG in nilfs_btnode_create_block
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 8b817fded42d8fe3a0eb47b1149d907851a3c942
fix_commit: 2f012f2baca140c488e43d27a374029c1e59098d
datetime: '2023-06-12T11:31:49-07:00'
fix_commit_message: 'nilfs2: fix incomplete buffer cleanup in nilfs_btnode_abort_change_key()


  A syzbot fault injection test reported that nilfs_btnode_create_block, a

  helper function that allocates a new node block for b-trees, causes a

  kernel BUG for disk images where the file system block size is smaller

  than the page size.


  This was due to unexpected flags on the newly allocated buffer head, and

  it turned out to be because the buffer flags were not cleared by

  nilfs_btnode_abort_change_key() after an error occurred during a b-tree

  update operation and the buffer was later reused in that state.


  Fix this issue by using nilfs_btnode_delete() to abandon the unused

  preallocated buffer in nilfs_btnode_abort_change_key().


  Link: https://lkml.kernel.org/r/20230513102428.10223-1-konishi.ryusuke@gmail.com

  Signed-off-by: Ryusuke Konishi <konishi.ryusuke@gmail.com>

  Reported-by: syzbot+b0a35a5c1f7e846d3b09@syzkaller.appspotmail.com

  Closes: https://lkml.kernel.org/r/000000000000d1d6c205ebc4d512@google.com

  Tested-by: Ryusuke Konishi <konishi.ryusuke@gmail.com>

  Cc: <stable@vger.kernel.org>

  Signed-off-by: Andrew Morton <akpm@linux-foundation.org>

  '
submodule:
- fs/nilfs2
hunk_count: 1
covered_count: 0
