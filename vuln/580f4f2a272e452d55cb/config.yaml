id: 580f4f2a272e452d55cb
bug_link: https://syzkaller.appspot.com/bug?extid=580f4f2a272e452d55cb
title: 'KMSAN: uninit-value in bpf_iter_prog_supported'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 90a82b1fa40d0cee33d1c9306dc54412442d1e57
fix_commit: 17d8beda277a36203585943e70c7909b60775fd5
datetime: '2021-02-12T13:33:50-08:00'
fix_commit_message: 'bpf: Fix an unitialized value in bpf_iter


  Commit 15d83c4d7cef ("bpf: Allow loading of a bpf_iter program")

  cached btf_id in struct bpf_iter_target_info so later on

  if it can be checked cheaply compared to checking registered names.


  syzbot found a bug that uninitialized value may occur to

  bpf_iter_target_info->btf_id. This is because we allocated

  bpf_iter_target_info structure with kmalloc and never initialized

  field btf_id afterwards. This uninitialized btf_id is typically

  compared to a u32 bpf program func proto btf_id, and the chance

  of being equal is extremely slim.


  This patch fixed the issue by using kzalloc which will also

  prevent future likely instances due to adding new fields.


  Fixes: 15d83c4d7cef ("bpf: Allow loading of a bpf_iter program")

  Reported-by: syzbot+580f4f2a272e452d55cb@syzkaller.appspotmail.com

  Signed-off-by: Yonghong Song <yhs@fb.com>

  Signed-off-by: Alexei Starovoitov <ast@kernel.org>

  Link: https://lore.kernel.org/bpf/20210212005926.2875002-1-yhs@fb.com

  '
submodule:
- kernel/bpf
hunk_count: 1
covered_count: 1
