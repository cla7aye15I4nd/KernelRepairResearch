id: 20d7e439f76bbbd863a7
bug_link: https://syzkaller.appspot.com/bug?extid=20d7e439f76bbbd863a7
title: WARNING in rcu_sync_dtor
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: e791d00bd06cb2d3a10afa43e57f6364931d0ada
fix_commit: 930c6ab93492c4b15436524e704950b364b2930c
datetime: '2024-09-11T03:36:43+00:00'
fix_commit_message: "f2fs: fix to don't set SB_RDONLY in f2fs_handle_critical_error()\n\
  \nsyzbot reports a f2fs bug as below:\n\n------------[ cut here ]------------\n\
  WARNING: CPU: 1 PID: 58 at kernel/rcu/sync.c:177 rcu_sync_dtor+0xcd/0x180 kernel/rcu/sync.c:177\n\
  CPU: 1 UID: 0 PID: 58 Comm: kworker/1:2 Not tainted 6.10.0-syzkaller-12562-g1722389b0d86\
  \ #0\nWorkqueue: events destroy_super_work\nRIP: 0010:rcu_sync_dtor+0xcd/0x180 kernel/rcu/sync.c:177\n\
  Call Trace:\n percpu_free_rwsem+0x41/0x80 kernel/locking/percpu-rwsem.c:42\n destroy_super_work+0xec/0x130\
  \ fs/super.c:282\n process_one_work kernel/workqueue.c:3231 [inline]\n process_scheduled_works+0xa2c/0x1830\
  \ kernel/workqueue.c:3312\n worker_thread+0x86d/0xd40 kernel/workqueue.c:3390\n\
  \ kthread+0x2f0/0x390 kernel/kthread.c:389\n ret_from_fork+0x4b/0x80 arch/x86/kernel/process.c:147\n\
  \ ret_from_fork_asm+0x1a/0x30 arch/x86/entry/entry_64.S:244\n\nAs Christian Brauner\
  \ pointed out [1]: the root cause is f2fs sets\nSB_RDONLY flag in internal function,\
  \ rather than setting the flag\ncovered w/ sb->s_umount semaphore via remount procedure,\
  \ then below\nrace condition causes this bug:\n\n- freeze_super()\n - sb_wait_write(sb,\
  \ SB_FREEZE_WRITE)\n - sb_wait_write(sb, SB_FREEZE_PAGEFAULT)\n - sb_wait_write(sb,\
  \ SB_FREEZE_FS)\n\t\t\t\t\t- f2fs_handle_critical_error\n\t\t\t\t\t - sb->s_flags\
  \ |= SB_RDONLY\n- thaw_super\n - thaw_super_locked\n  - sb_rdonly() is true, so\
  \ it skips\n    sb_freeze_unlock(sb, SB_FREEZE_FS)\n  - deactivate_locked_super\n\
  \nSince f2fs has almost the same logic as ext4 [2] when handling critical\nerror\
  \ in filesystem if it mounts w/ errors=remount-ro option:\n- set CP_ERROR_FLAG flag\
  \ which indicates filesystem is stopped\n- record errors to superblock\n- set SB_RDONLY\
  \ falg\nOnce we set CP_ERROR_FLAG flag, all writable interfaces can detect the\n\
  flag and stop any further updates on filesystem. So, it is safe to not\nset SB_RDONLY\
  \ flag, let's remove the logic and keep in line w/ ext4 [3].\n\n[1] https://lore.kernel.org/all/20240729-himbeeren-funknetz-96e62f9c7aee@brauner\n\
  [2] https://lore.kernel.org/all/20240729132721.hxih6ehigadqf7wx@quack3\n[3] https://lore.kernel.org/linux-ext4/20240805201241.27286-1-jack@suse.cz\n\
  \nFixes: b62e71be2110 (\"f2fs: support errors=remount-ro|continue|panic mountoption\"\
  )\nReported-by: syzbot+20d7e439f76bbbd863a7@syzkaller.appspotmail.com\nCloses: https://lore.kernel.org/all/000000000000b90a8e061e21d12f@google.com/\n\
  Cc: Jan Kara <jack@suse.cz>\nCc: Christian Brauner <brauner@kernel.org>\nSigned-off-by:\
  \ Chao Yu <chao@kernel.org>\nReviewed-by: Christian Brauner <brauner@kernel.org>\n\
  Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>\n"
submodule:
- fs/f2fs
hunk_count: 1
covered_count: 0
