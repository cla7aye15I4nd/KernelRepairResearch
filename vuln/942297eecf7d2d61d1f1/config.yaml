id: 942297eecf7d2d61d1f1
bug_link: https://syzkaller.appspot.com/bug?extid=942297eecf7d2d61d1f1
title: 'KASAN: slab-use-after-free Read in rose_timer_expiry (3)'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: d860d1faa6b2ce3becfdb8b0c2b048ad31800061
fix_commit: da9c9c877597170b929a6121a68dcd3dd9a80f45
datetime: '2025-08-27T07:43:09-07:00'
fix_commit_message: 'net: rose: include node references in rose_neigh refcount


  Current implementation maintains two separate reference counting

  mechanisms: the ''count'' field in struct rose_neigh tracks references from

  rose_node structures, while the ''use'' field (now refcount_t) tracks

  references from rose_sock.


  This patch merges these two reference counting systems using ''use'' field

  for proper reference management. Specifically, this patch adds incrementing

  and decrementing of rose_neigh->use when rose_neigh->count is incremented

  or decremented.


  This patch also modifies rose_rt_free(), rose_rt_device_down() and

  rose_clear_route() to properly release references to rose_neigh objects

  before freeing a rose_node through rose_remove_node().


  These changes ensure rose_neigh structures are properly freed only when

  all references, including those from rose_node structures, are released.

  As a result, this resolves a slab-use-after-free issue reported by Syzbot.


  Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")

  Reported-by: syzbot+942297eecf7d2d61d1f1@syzkaller.appspotmail.com

  Closes: https://syzkaller.appspot.com/bug?extid=942297eecf7d2d61d1f1

  Signed-off-by: Takamitsu Iwai <takamitz@amazon.co.jp>

  Reviewed-by: Kuniyuki Iwashima <kuniyu@google.com>

  Link: https://patch.msgid.link/20250823085857.47674-4-takamitz@amazon.co.jp

  Signed-off-by: Jakub Kicinski <kuba@kernel.org>

  '
submodule:
- net/rose
hunk_count: 11
covered_count: 0
