id: d9fbc5c299aa8a95ac07572b4f6e191c0f4efff6
bug_link: https://syzkaller.appspot.com/bug?extid=d9fbc5c299aa8a95ac07572b4f6e191c0f4efff6
title: WARNING in kvm_arch_vcpu_ioctl_run (2)
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: e70b57a6ce4e8b92a56a615ae79bdb2bd66035e7
fix_commit: c37c28730bb031cc8a44a130c2555c0f3efbe2d0
datetime: '2017-11-27T17:37:46+01:00'
fix_commit_message: "KVM: VMX: Fix rflags cache during vCPU reset\n\nReported by syzkaller:\n\
  \n   *** Guest State ***\n   CR0: actual=0x0000000080010031, shadow=0x0000000060000010,\
  \ gh_mask=fffffffffffffff7\n   CR4: actual=0x0000000000002061, shadow=0x0000000000000000,\
  \ gh_mask=ffffffffffffe8f1\n   CR3 = 0x000000002081e000\n   RSP = 0x000000000000fffa\
  \  RIP = 0x0000000000000000\n   RFLAGS=0x00023000         DR7 = 0x00000000000000\n\
  \          ^^^^^^^^^^\n   ------------[ cut here ]------------\n   WARNING: CPU:\
  \ 6 PID: 24431 at /home/kernel/linux/arch/x86/kvm//x86.c:7302 kvm_arch_vcpu_ioctl_run+0x651/0x2ea0\
  \ [kvm]\n   CPU: 6 PID: 24431 Comm: reprotest Tainted: G        W  OE   4.14.0+\
  \ #26\n   RIP: 0010:kvm_arch_vcpu_ioctl_run+0x651/0x2ea0 [kvm]\n   RSP: 0018:ffff880291d179e0\
  \ EFLAGS: 00010202\n   Call Trace:\n    kvm_vcpu_ioctl+0x479/0x880 [kvm]\n    do_vfs_ioctl+0x142/0x9a0\n\
  \    SyS_ioctl+0x74/0x80\n    entry_SYSCALL_64_fastpath+0x23/0x9a\n\nThe failed\
  \ vmentry is triggered by the following beautified testcase:\n\n    #include <unistd.h>\n\
  \    #include <sys/syscall.h>\n    #include <string.h>\n    #include <stdint.h>\n\
  \    #include <linux/kvm.h>\n    #include <fcntl.h>\n    #include <sys/ioctl.h>\n\
  \n    long r[5];\n    int main()\n    {\n        struct kvm_debugregs dr = { 0 };\n\
  \n        r[2] = open(\"/dev/kvm\", O_RDONLY);\n        r[3] = ioctl(r[2], KVM_CREATE_VM,\
  \ 0);\n        r[4] = ioctl(r[3], KVM_CREATE_VCPU, 7);\n        struct kvm_guest_debug\
  \ debug = {\n                .control = 0xf0403,\n                .arch = {\n  \
  \                      .debugreg[6] = 0x2,\n                        .debugreg[7]\
  \ = 0x2\n                }\n        };\n        ioctl(r[4], KVM_SET_GUEST_DEBUG,\
  \ &debug);\n        ioctl(r[4], KVM_RUN, 0);\n    }\n\nwhich testcase tries to setup\
  \ the processor specific debug\nregisters and configure vCPU for handling guest\
  \ debug events through\nKVM_SET_GUEST_DEBUG.  The KVM_SET_GUEST_DEBUG ioctl will\
  \ get and set\nrflags in order to set TF bit if single step is needed. All regs'\
  \ caches\nare reset to avail and GUEST_RFLAGS vmcs field is reset to 0x2 during\
  \ vCPU\nreset. However, the cache of rflags is not reset during vCPU reset. The\n\
  function vmx_get_rflags() returns an unreset rflags cache value since\nthe cache\
  \ is marked avail, it is 0 after boot. Vmentry fails if the\nrflags reserved bit\
  \ 1 is 0.\n\nThis patch fixes it by resetting both the GUEST_RFLAGS vmcs field and\n\
  its cache to 0x2 during vCPU reset.\n\nReported-by: Dmitry Vyukov <dvyukov@google.com>\n\
  Tested-by: Dmitry Vyukov <dvyukov@google.com>\nReviewed-by: David Hildenbrand <david@redhat.com>\n\
  Cc: Paolo Bonzini <pbonzini@redhat.com>\nCc: Radim Krčmář <rkrcmar@redhat.com>\n\
  Cc: Nadav Amit <nadav.amit@gmail.com>\nCc: Dmitry Vyukov <dvyukov@google.com>\n\
  Signed-off-by: Wanpeng Li <wanpeng.li@hotmail.com>\nSigned-off-by: Paolo Bonzini\
  \ <pbonzini@redhat.com>\n"
submodule:
- arch/x86/kvm
hunk_count: 1
covered_count: 0
