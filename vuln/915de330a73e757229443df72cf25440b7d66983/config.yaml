id: 915de330a73e757229443df72cf25440b7d66983
bug_link: https://syzkaller.appspot.com/bug?extid=915de330a73e757229443df72cf25440b7d66983
title: WARNING in tcp_update_reordering
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 7ec318feeed10a64c0359ec4d10889cb4defa39a
fix_commit: 0eb96bf754d7fa6635aa0b0f6650c74b8a6b1cc9
datetime: '2017-11-10T18:09:19+09:00'
fix_commit_message: 'tcp: fix tcp_fastretrans_alert warning


  This patch fixes the cause of an WARNING indicatng TCP has pending

  retransmission in Open state in tcp_fastretrans_alert().


  The root cause is a bad interaction between path mtu probing,

  if enabled, and the RACK loss detection. Upong receiving a SACK

  above the sequence of the MTU probing packet, RACK could mark the

  probe packet lost in tcp_fastretrans_alert(), prior to calling

  tcp_simple_retransmit().


  tcp_simple_retransmit() only enters Loss state if it newly marks

  the probe packet lost. If the probe packet is already identified as

  lost by RACK, the sender remains in Open state with some packets

  marked lost and retransmitted. Then the next SACK would trigger

  the warning. The likely scenario is that the probe packet was

  lost due to its size or network congestion. The actual impact of

  this warning is small by potentially entering fast recovery an

  ACK later.


  The simple fix is always entering recovery (Loss) state if some

  packet is marked lost during path MTU probing.


  Fixes: a0370b3f3f2c ("tcp: enable RACK loss detection to trigger recovery")

  Reported-by: Oleksandr Natalenko <oleksandr@natalenko.name>

  Reported-by: Alexei Starovoitov <alexei.starovoitov@gmail.com>

  Reported-by: Roman Gushchin <guro@fb.com>

  Signed-off-by: Yuchung Cheng <ycheng@google.com>

  Reviewed-by: Eric Dumazet <edumazet@google.com>

  Acked-by: Neal Cardwell <ncardwell@google.com>

  Signed-off-by: David S. Miller <davem@davemloft.net>

  '
submodule:
- net/ipv4
hunk_count: 2
covered_count: 0
