id: 367889b9c9e279219175
bug_link: https://syzkaller.appspot.com/bug?extid=367889b9c9e279219175
title: possible deadlock in ppp_dev_uninit
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 66940f35d5a81d5969bb5543171c70a434fc5110
fix_commit: 0171c41835591e9aa2e384b703ef9a6ae367c610
datetime: '2018-01-15T13:22:03-05:00'
fix_commit_message: 'ppp: unlock all_ppp_mutex before registering device


  ppp_dev_uninit(), which is the .ndo_uninit() handler of PPP devices,

  needs to lock pn->all_ppp_mutex. Therefore we mustn''t call

  register_netdevice() with pn->all_ppp_mutex already locked, or we''d

  deadlock in case register_netdevice() fails and calls .ndo_uninit().


  Fortunately, we can unlock pn->all_ppp_mutex before calling

  register_netdevice(). This lock protects pn->units_idr, which isn''t

  used in the device registration process.


  However, keeping pn->all_ppp_mutex locked during device registration

  did ensure that no device in transient state would be published in

  pn->units_idr. In practice, unlocking it before calling

  register_netdevice() doesn''t change this property: ppp_unit_register()

  is called with ''ppp_mutex'' locked and all searches done in

  pn->units_idr hold this lock too.


  Fixes: 8cb775bc0a34 ("ppp: fix device unregistration upon netns deletion")

  Reported-and-tested-by: syzbot+367889b9c9e279219175@syzkaller.appspotmail.com

  Signed-off-by: Guillaume Nault <g.nault@alphalink.fr>

  Signed-off-by: David S. Miller <davem@davemloft.net>

  '
submodule:
- drivers/net/ppp
hunk_count: 1
covered_count: 1
