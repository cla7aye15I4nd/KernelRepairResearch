id: a6d6b8fffa294705dbd8
bug_link: https://syzkaller.appspot.com/bug?extid=a6d6b8fffa294705dbd8
title: 'KMSAN: uninit-value in __crc32c_le_base (3)'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: c0e37f07d2bd3c1ee3fb5a650da7d8673557ed16
fix_commit: 0573676fdde7ce3829ee6a42a8e5a56355234712
datetime: '2023-12-15T09:33:29+05:30'
fix_commit_message: "xfs: initialise di_crc in xfs_log_dinode\n\nAlexander Potapenko\
  \ report that KMSAN was issuing these warnings:\n\nkmalloc-ed xlog buffer of size\
  \ 512 : ffff88802fc26200\nkmalloc-ed xlog buffer of size 368 : ffff88802fc24a00\n\
  kmalloc-ed xlog buffer of size 648 : ffff88802b631000\nkmalloc-ed xlog buffer of\
  \ size 648 : ffff88802b632800\nkmalloc-ed xlog buffer of size 648 : ffff88802b631c00\n\
  xlog_write_iovec: copying 12 bytes from ffff888017ddbbd8 to ffff88802c300400\nxlog_write_iovec:\
  \ copying 28 bytes from ffff888017ddbbe4 to ffff88802c30040c\nxlog_write_iovec:\
  \ copying 68 bytes from ffff88802fc26274 to ffff88802c300428\nxlog_write_iovec:\
  \ copying 188 bytes from ffff88802fc262bc to ffff88802c30046c\n=====================================================\n\
  BUG: KMSAN: uninit-value in xlog_write_iovec fs/xfs/xfs_log.c:2227\nBUG: KMSAN:\
  \ uninit-value in xlog_write_full fs/xfs/xfs_log.c:2263\nBUG: KMSAN: uninit-value\
  \ in xlog_write+0x1fac/0x2600 fs/xfs/xfs_log.c:2532\n xlog_write_iovec fs/xfs/xfs_log.c:2227\n\
  \ xlog_write_full fs/xfs/xfs_log.c:2263\n xlog_write+0x1fac/0x2600 fs/xfs/xfs_log.c:2532\n\
  \ xlog_cil_write_chain fs/xfs/xfs_log_cil.c:918\n xlog_cil_push_work+0x30f2/0x44e0\
  \ fs/xfs/xfs_log_cil.c:1263\n process_one_work kernel/workqueue.c:2630\n process_scheduled_works+0x1188/0x1e30\
  \ kernel/workqueue.c:2703\n worker_thread+0xee5/0x14f0 kernel/workqueue.c:2784\n\
  \ kthread+0x391/0x500 kernel/kthread.c:388\n ret_from_fork+0x66/0x80 arch/x86/kernel/process.c:147\n\
  \ ret_from_fork_asm+0x11/0x20 arch/x86/entry/entry_64.S:242\n\nUninit was created\
  \ at:\n slab_post_alloc_hook+0x101/0xac0 mm/slab.h:768\n slab_alloc_node mm/slub.c:3482\n\
  \ __kmem_cache_alloc_node+0x612/0xae0 mm/slub.c:3521\n __do_kmalloc_node mm/slab_common.c:1006\n\
  \ __kmalloc+0x11a/0x410 mm/slab_common.c:1020\n kmalloc ./include/linux/slab.h:604\n\
  \ xlog_kvmalloc fs/xfs/xfs_log_priv.h:704\n xlog_cil_alloc_shadow_bufs fs/xfs/xfs_log_cil.c:343\n\
  \ xlog_cil_commit+0x487/0x4dc0 fs/xfs/xfs_log_cil.c:1574\n __xfs_trans_commit+0x8df/0x1930\
  \ fs/xfs/xfs_trans.c:1017\n xfs_trans_commit+0x30/0x40 fs/xfs/xfs_trans.c:1061\n\
  \ xfs_create+0x15af/0x2150 fs/xfs/xfs_inode.c:1076\n xfs_generic_create+0x4cd/0x1550\
  \ fs/xfs/xfs_iops.c:199\n xfs_vn_create+0x4a/0x60 fs/xfs/xfs_iops.c:275\n lookup_open\
  \ fs/namei.c:3477\n open_last_lookups fs/namei.c:3546\n path_openat+0x29ac/0x6180\
  \ fs/namei.c:3776\n do_filp_open+0x24d/0x680 fs/namei.c:3809\n do_sys_openat2+0x1bc/0x330\
  \ fs/open.c:1440\n do_sys_open fs/open.c:1455\n __do_sys_openat fs/open.c:1471\n\
  \ __se_sys_openat fs/open.c:1466\n __x64_sys_openat+0x253/0x330 fs/open.c:1466\n\
  \ do_syscall_x64 arch/x86/entry/common.c:51\n do_syscall_64+0x4f/0x140 arch/x86/entry/common.c:82\n\
  \ entry_SYSCALL_64_after_hwframe+0x63/0x6b arch/x86/entry/entry_64.S:120\n\nBytes\
  \ 112-115 of 188 are uninitialized\nMemory access of size 188 starts at ffff88802fc262bc\n\
  \nThis is caused by the struct xfs_log_dinode not having the di_crc\nfield initialised.\
  \ Log recovery never uses this field (it is only\npresent these days for on-disk\
  \ format compatibility reasons) and so\nit's value is never checked so nothing in\
  \ XFS has caught this.\n\nFurther, none of the uninitialised memory access warning\
  \ tools have\ncaught this (despite catching other uninit memory accesses in the\n\
  struct xfs_log_dinode back in 2017!) until recently. Alexander\nannotated the XFS\
  \ code to get the dump of the actual bytes that were\ndetected as uninitialised,\
  \ and from that report it took me about 30s\nto realise what the issue was.\n\n\
  The issue was introduced back in 2016 and every inode that is logged\nfails to initialise\
  \ this field. This is no actual bad behaviour\ncaused by this issue - I find it\
  \ hard to even classify it as a\nbug...\n\nReported-and-tested-by: Alexander Potapenko\
  \ <glider@google.com>\nFixes: f8d55aa0523a (\"xfs: introduce inode log format object\"\
  )\nSigned-off-by: Dave Chinner <dchinner@redhat.com>\nReviewed-by: \"Darrick J.\
  \ Wong\" <djwong@kernel.org>\nSigned-off-by: Chandan Babu R <chandanbabu@kernel.org>\n"
submodule:
- fs/xfs
hunk_count: 1
covered_count: 0
