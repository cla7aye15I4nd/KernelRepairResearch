id: 3610d489778b57cc8031
bug_link: https://syzkaller.appspot.com/bug?extid=3610d489778b57cc8031
title: general protection fault in inet_unhash
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: c6e08d6251f342090a9b9abccbf26b19bcb54d17
fix_commit: 02c71b144c811bcdd865e0a1226d0407d11357e8
datetime: '2020-05-30T21:55:16-07:00'
fix_commit_message: "l2tp: do not use inet_hash()/inet_unhash()\n\nsyzbot recently\
  \ found a way to crash the kernel [1]\n\nIssue here is that inet_hash() & inet_unhash()\
  \ are currently\nonly meant to be used by TCP & DCCP, since only these protocols\n\
  provide the needed hashinfo pointer.\n\nL2TP uses a single list (instead of a hash\
  \ table)\n\nThis old bug became an issue after commit 610236587600\n(\"bpf: Add\
  \ new cgroup attach type to enable sock modifications\")\nsince after this commit,\
  \ sk_common_release() can be called\nwhile the L2TP socket is still considered 'hashed'.\n\
  \ngeneral protection fault, probably for non-canonical address 0xdffffc0000000001:\
  \ 0000 [#1] PREEMPT SMP KASAN\nKASAN: null-ptr-deref in range [0x0000000000000008-0x000000000000000f]\n\
  CPU: 0 PID: 7063 Comm: syz-executor654 Not tainted 5.7.0-rc6-syzkaller #0\nHardware\
  \ name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011\n\
  RIP: 0010:inet_unhash+0x11f/0x770 net/ipv4/inet_hashtables.c:600\nCode: 03 0f b6\
  \ 04 02 84 c0 74 08 3c 03 0f 8e dd 04 00 00 48 8d 7d 08 44 8b 73 08 48 b8 00 00\
  \ 00 00 00 fc ff df 48 89 fa 48 c1 ea 03 <80> 3c 02 00 0f 85 55 05 00 00 48 8d 7d\
  \ 14 4c 8b 6d 08 48 b8 00 00\nRSP: 0018:ffffc90001777d30 EFLAGS: 00010202\nRAX:\
  \ dffffc0000000000 RBX: ffff88809a6df940 RCX: ffffffff8697c242\nRDX: 0000000000000001\
  \ RSI: ffffffff8697c251 RDI: 0000000000000008\nRBP: 0000000000000000 R08: ffff88809f3ae1c0\
  \ R09: fffffbfff1514cc1\nR10: ffffffff8a8a6607 R11: fffffbfff1514cc0 R12: ffff88809a6df9b0\n\
  R13: 0000000000000007 R14: 0000000000000000 R15: ffffffff873a4d00\nFS:  0000000001d2b880(0000)\
  \ GS:ffff8880ae600000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000\
  \ CR0: 0000000080050033\nCR2: 00000000006cd090 CR3: 000000009403a000 CR4: 00000000001406f0\n\
  DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000\
  \ DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n sk_common_release+0xba/0x370\
  \ net/core/sock.c:3210\n inet_create net/ipv4/af_inet.c:390 [inline]\n inet_create+0x966/0xe00\
  \ net/ipv4/af_inet.c:248\n __sock_create+0x3cb/0x730 net/socket.c:1428\n sock_create\
  \ net/socket.c:1479 [inline]\n __sys_socket+0xef/0x200 net/socket.c:1521\n __do_sys_socket\
  \ net/socket.c:1530 [inline]\n __se_sys_socket net/socket.c:1528 [inline]\n __x64_sys_socket+0x6f/0xb0\
  \ net/socket.c:1528\n do_syscall_64+0xf6/0x7d0 arch/x86/entry/common.c:295\n entry_SYSCALL_64_after_hwframe+0x49/0xb3\n\
  RIP: 0033:0x441e29\nCode: e8 fc b3 02 00 48 83 c4 18 c3 0f 1f 80 00 00 00 00 48\
  \ 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d\
  \ 01 f0 ff ff 0f 83 eb 08 fc ff c3 66 2e 0f 1f 84 00 00 00 00\nRSP: 002b:00007ffdce184148\
  \ EFLAGS: 00000246 ORIG_RAX: 0000000000000029\nRAX: ffffffffffffffda RBX: 0000000000000003\
  \ RCX: 0000000000441e29\nRDX: 0000000000000073 RSI: 0000000000000002 RDI: 0000000000000002\n\
  RBP: 0000000000000000 R08: 0000000000000000 R09: 0000000000000000\nR10: 0000000000000000\
  \ R11: 0000000000000246 R12: 0000000000000000\nR13: 0000000000402c30 R14: 0000000000000000\
  \ R15: 0000000000000000\nModules linked in:\n---[ end trace 23b6578228ce553e ]---\n\
  RIP: 0010:inet_unhash+0x11f/0x770 net/ipv4/inet_hashtables.c:600\nCode: 03 0f b6\
  \ 04 02 84 c0 74 08 3c 03 0f 8e dd 04 00 00 48 8d 7d 08 44 8b 73 08 48 b8 00 00\
  \ 00 00 00 fc ff df 48 89 fa 48 c1 ea 03 <80> 3c 02 00 0f 85 55 05 00 00 48 8d 7d\
  \ 14 4c 8b 6d 08 48 b8 00 00\nRSP: 0018:ffffc90001777d30 EFLAGS: 00010202\nRAX:\
  \ dffffc0000000000 RBX: ffff88809a6df940 RCX: ffffffff8697c242\nRDX: 0000000000000001\
  \ RSI: ffffffff8697c251 RDI: 0000000000000008\nRBP: 0000000000000000 R08: ffff88809f3ae1c0\
  \ R09: fffffbfff1514cc1\nR10: ffffffff8a8a6607 R11: fffffbfff1514cc0 R12: ffff88809a6df9b0\n\
  R13: 0000000000000007 R14: 0000000000000000 R15: ffffffff873a4d00\nFS:  0000000001d2b880(0000)\
  \ GS:ffff8880ae600000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000\
  \ CR0: 0000000080050033\nCR2: 00000000006cd090 CR3: 000000009403a000 CR4: 00000000001406f0\n\
  DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000\
  \ DR6: 00000000fffe0ff0 DR7: 0000000000000400\n\nFixes: 0d76751fad77 (\"l2tp: Add\
  \ L2TPv3 IP encapsulation (no UDP) support\")\nSigned-off-by: Eric Dumazet <edumazet@google.com>\n\
  Cc: James Chapman <jchapman@katalix.com>\nCc: Andrii Nakryiko <andriin@fb.com>\n\
  Reported-by: syzbot+3610d489778b57cc8031@syzkaller.appspotmail.com\n"
submodule:
- net/l2tp
hunk_count: 6
covered_count: 0
