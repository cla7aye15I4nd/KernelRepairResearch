id: 72af3105289dcb4c055b
bug_link: https://syzkaller.appspot.com/bug?extid=72af3105289dcb4c055b
title: WARNING in do_proc_control/usb_submit_urb
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: e73f0f0ee7541171d89f2e2491130c7771ba58d3
fix_commit: b0863f1927323110e3d0d69f6adb6a91018a9a3c
datetime: '2021-07-12T20:59:40+02:00'
fix_commit_message: 'USB: core: Fix incorrect pipe calculation in do_proc_control()


  When the user submits a control URB via usbfs, the user supplies the

  bRequestType value and the kernel uses it to compute the pipe value.

  However, do_proc_control() performs this computation incorrectly in

  the case where the bRequestType direction bit is set to USB_DIR_IN and

  the URB''s transfer length is 0: The pipe''s direction is also set to IN

  but it should be OUT, which is the direction the actual transfer will

  use regardless of bRequestType.


  Commit 5cc59c418fde ("USB: core: WARN if pipe direction != setup

  packet direction") added a check to compare the direction bit in the

  pipe value to a control URB''s actual direction and to WARN if they are

  different.  This can be triggered by the incorrect computation

  mentioned above, as found by syzbot.


  This patch fixes the computation, thus avoiding the WARNing.


  Reported-and-tested-by: syzbot+72af3105289dcb4c055b@syzkaller.appspotmail.com

  Signed-off-by: Alan Stern <stern@rowland.harvard.edu>

  Link: https://lore.kernel.org/r/20210712185436.GB326369@rowland.harvard.edu

  Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

  '
submodule:
- drivers/usb/core
hunk_count: 1
covered_count: 1
