id: 29fc8991b0ecb186cf40
bug_link: https://syzkaller.appspot.com/bug?extid=29fc8991b0ecb186cf40
title: 'KMSAN: uninit-value in ppp_sync_send (2)'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 0bb2f7a1ad1f11d861f58e5ee5051c8974ff9569
fix_commit: aabc6596ffb377c4c9c8f335124b92ea282c9821
datetime: '2025-04-10T11:24:17+02:00'
fix_commit_message: "net: ppp: Add bound checking for skb data on ppp_sync_txmung\n\
  \nEnsure we have enough data in linear buffer from skb before accessing\ninitial\
  \ bytes. This prevents potential out-of-bounds accesses\nwhen processing short packets.\n\
  \nWhen ppp_sync_txmung receives an incoming package with an empty\npayload:\n(remote)\
  \ gefâž¤  p *(struct pppoe_hdr *) (skb->head + skb->network_header)\n$18 = {\n\ttype\
  \ = 0x1,\n\tver = 0x1,\n\tcode = 0x0,\n\tsid = 0x2,\n        length = 0x0,\n\ttag\
  \ = 0xffff8880371cdb96\n}\n\nfrom the skb struct (trimmed)\n      tail = 0x16,\n\
  \      end = 0x140,\n      head = 0xffff88803346f400 \"4\",\n      data = 0xffff88803346f416\
  \ \":\\377\",\n      truesize = 0x380,\n      len = 0x0,\n      data_len = 0x0,\n\
  \      mac_len = 0xe,\n      hdr_len = 0x0,\n\nit is not safe to access data[2].\n\
  \nReported-by: syzbot+29fc8991b0ecb186cf40@syzkaller.appspotmail.com\nCloses: https://syzkaller.appspot.com/bug?extid=29fc8991b0ecb186cf40\n\
  Tested-by: syzbot+29fc8991b0ecb186cf40@syzkaller.appspotmail.com\nFixes: 1da177e4c3f4\
  \ (\"Linux-2.6.12-rc2\")\nSigned-off-by: Arnaud Lecomte <contact@arnaud-lcm.com>\n\
  Link: https://patch.msgid.link/20250408-bound-checking-ppp_txmung-v2-1-94bb6e1b92d0@arnaud-lcm.com\n\
  [pabeni@redhat.com: fixed subj typo]\nSigned-off-by: Paolo Abeni <pabeni@redhat.com>\n"
submodule:
- drivers/net/ppp
hunk_count: 1
covered_count: 1
