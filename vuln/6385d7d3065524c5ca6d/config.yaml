id: 6385d7d3065524c5ca6d
bug_link: https://syzkaller.appspot.com/bug?extid=6385d7d3065524c5ca6d
title: WARNING in ext4_xattr_block_set (2)
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: fa83c34e3e56b3c672af38059e066242655271b1
fix_commit: a44be64bbecb15a452496f60db6eacfee2b59c79
datetime: '2023-05-13T18:05:05-04:00'
fix_commit_message: "ext4: don't clear SB_RDONLY when remounting r/w until quota is\
  \ re-enabled\n\nWhen a file system currently mounted read/only is remounted\nread/write,\
  \ if we clear the SB_RDONLY flag too early, before the quota\nis initialized, and\
  \ there is another process/thread constantly\nattempting to create a directory,\
  \ it's possible to trigger the\n\n\tWARN_ON_ONCE(dquot_initialize_needed(inode));\n\
  \nin ext4_xattr_block_set(), with the following stack trace:\n\n   WARNING: CPU:\
  \ 0 PID: 5338 at fs/ext4/xattr.c:2141 ext4_xattr_block_set+0x2ef2/0x3680\n   RIP:\
  \ 0010:ext4_xattr_block_set+0x2ef2/0x3680 fs/ext4/xattr.c:2141\n   Call Trace:\n\
  \    ext4_xattr_set_handle+0xcd4/0x15c0 fs/ext4/xattr.c:2458\n    ext4_initxattrs+0xa3/0x110\
  \ fs/ext4/xattr_security.c:44\n    security_inode_init_security+0x2df/0x3f0 security/security.c:1147\n\
  \    __ext4_new_inode+0x347e/0x43d0 fs/ext4/ialloc.c:1324\n    ext4_mkdir+0x425/0xce0\
  \ fs/ext4/namei.c:2992\n    vfs_mkdir+0x29d/0x450 fs/namei.c:4038\n    do_mkdirat+0x264/0x520\
  \ fs/namei.c:4061\n    __do_sys_mkdirat fs/namei.c:4076 [inline]\n    __se_sys_mkdirat\
  \ fs/namei.c:4074 [inline]\n    __x64_sys_mkdirat+0x89/0xa0 fs/namei.c:4074\n\n\
  Cc: stable@kernel.org\nLink: https://lore.kernel.org/r/20230506142419.984260-1-tytso@mit.edu\n\
  Reported-by: syzbot+6385d7d3065524c5ca6d@syzkaller.appspotmail.com\nLink: https://syzkaller.appspot.com/bug?id=6513f6cb5cd6b5fc9f37e3bb70d273b94be9c34c\n\
  Signed-off-by: Theodore Ts'o <tytso@mit.edu>\n"
submodule:
- fs/ext4
hunk_count: 3
covered_count: 0
