id: c74fea926a78b8a91042
bug_link: https://syzkaller.appspot.com/bug?extid=c74fea926a78b8a91042
title: general protection fault in io_sqpoll_wq_cpu_affinity
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 6c1b980a7e79e55e951b4b2c47eefebc75071209
fix_commit: bd6fc5da4c51107e1e0cec4a3a07963d1dae2c84
datetime: '2023-08-30T09:53:44-06:00'
fix_commit_message: "io_uring: Don't set affinity on a dying sqpoll thread\n\nSyzbot\
  \ reported a null-ptr-deref of sqd->thread inside\nio_sqpoll_wq_cpu_affinity.  It\
  \ turns out the sqd->thread can go away\nfrom under us during io_uring_register,\
  \ in case the process gets a\nfatal signal during io_uring_register.\n\nIt is not\
  \ particularly hard to hit the race, and while I am not sure\nthis is the exact\
  \ case hit by syzbot, it solves it.  Finally, checking\n->thread is enough to close\
  \ the race because we locked sqd while\n\"parking\" the thread, thus preventing\
  \ it from going away.\n\nI reproduced it fairly consistently with a program that\
  \ does:\n\nint main(void) {\n  ...\n  io_uring_queue_init(RING_LEN, &ring1, IORING_SETUP_SQPOLL);\n\
  \  while (1) {\n    io_uring_register_iowq_aff(ring, 1, &mask);\n  }\n}\n\nExecuted\
  \ in a loop with timeout to trigger SIGTERM:\n  while true; do timeout 1 /a.out\
  \ ; done\n\nThis will hit the following BUG() in very few attempts.\n\nBUG: kernel\
  \ NULL pointer dereference, address: 00000000000007a8\nPGD 800000010e949067 P4D\
  \ 800000010e949067 PUD 10e46e067 PMD 0\nOops: 0000 [#1] PREEMPT SMP PTI\nCPU: 0\
  \ PID: 15715 Comm: dead-sqpoll Not tainted 6.5.0-rc7-next-20230825-g193296236fa0-dirty\
  \ #23\nHardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 0.0.0 02/06/2015\n\
  RIP: 0010:io_sqpoll_wq_cpu_affinity+0x27/0x70\nCode: 90 90 90 0f 1f 44 00 00 55\
  \ 53 48 8b 9f 98 03 00 00 48 85 db 74 4f\n48 89 df 48 89 f5 e8 e2 f8 ff ff 48 8b\
  \ 43 38 48 85 c0 74 22 <48> 8b b8\na8 07 00 00 48 89 ee e8 ba b1 00 00 48 89 df\
  \ 89 c5 e8 70\nRSP: 0018:ffffb04040ea7e70 EFLAGS: 00010282\nRAX: 0000000000000000\
  \ RBX: ffff93c010749e40 RCX: 0000000000000001\nRDX: 0000000000000000 RSI: ffffffffa7653331\
  \ RDI: 00000000ffffffff\nRBP: ffffb04040ea7eb8 R08: 0000000000000000 R09: c0000000ffffdfff\n\
  R10: ffff93c01141b600 R11: ffffb04040ea7d18 R12: ffff93c00ea74840\nR13: 0000000000000011\
  \ R14: 0000000000000000 R15: ffff93c00ea74800\nFS:  00007fb7c276ab80(0000) GS:ffff93c36f200000(0000)\
  \ knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2:\
  \ 00000000000007a8 CR3: 0000000111634003 CR4: 0000000000370ef0\nDR0: 0000000000000000\
  \ DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0\
  \ DR7: 0000000000000400\nCall Trace:\n <TASK>\n ? __die_body+0x1a/0x60\n ? page_fault_oops+0x154/0x440\n\
  \ ? do_user_addr_fault+0x174/0x7b0\n ? exc_page_fault+0x63/0x140\n ? asm_exc_page_fault+0x22/0x30\n\
  \ ? io_sqpoll_wq_cpu_affinity+0x27/0x70\n __io_register_iowq_aff+0x2b/0x60\n __io_uring_register+0x614/0xa70\n\
  \ __x64_sys_io_uring_register+0xaa/0x1a0\n do_syscall_64+0x3a/0x90\n entry_SYSCALL_64_after_hwframe+0x6e/0xd8\n\
  RIP: 0033:0x7fb7c226fec9\nCode: 2e 00 b8 ca 00 00 00 0f 05 eb a5 66 0f 1f 44 00\
  \ 00 48 89 f8 48 89\nf7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05\
  \ <48> 3d 01\nf0 ff ff 73 01 c3 48 8b 0d 97 7f 2d 00 f7 d8 64 89 01 48\nRSP: 002b:00007ffe2c0674f8\
  \ EFLAGS: 00000246 ORIG_RAX: 00000000000001ab\nRAX: ffffffffffffffda RBX: 0000000000000000\
  \ RCX: 00007fb7c226fec9\nRDX: 00007ffe2c067530 RSI: 0000000000000011 RDI: 0000000000000003\n\
  RBP: 00007ffe2c0675d0 R08: 00007ffe2c067550 R09: 00007ffe2c067550\nR10: 0000000000000001\
  \ R11: 0000000000000246 R12: 0000000000000000\nR13: 00007ffe2c067750 R14: 0000000000000000\
  \ R15: 0000000000000000\n </TASK>\nModules linked in:\nCR2: 00000000000007a8\n---[\
  \ end trace 0000000000000000 ]---\n\nReported-by: syzbot+c74fea926a78b8a91042@syzkaller.appspotmail.com\n\
  Fixes: ebdfefc09c6d (\"io_uring/sqpoll: fix io-wq affinity when IORING_SETUP_SQPOLL\
  \ is used\")\nSigned-off-by: Gabriel Krisman Bertazi <krisman@suse.de>\nLink: https://lore.kernel.org/r/87v8cybuo6.fsf@suse.de\n\
  Signed-off-by: Jens Axboe <axboe@kernel.dk>\n"
submodule:
- io_uring
hunk_count: 1
covered_count: 1
