id: 2e0d2840414ce817aaac
bug_link: https://syzkaller.appspot.com/bug?extid=2e0d2840414ce817aaac
title: general protection fault in bpf_prog_array_delete_safe
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: ef1b808e3b7c98612feceedf985c2fbbeb28f956
fix_commit: 978c4486cca5c7b9253d3ab98a88c8e769cb9bbd
datetime: '2024-12-10T10:16:28-08:00'
fix_commit_message: "bpf,perf: Fix invalid prog_array access in perf_event_detach_bpf_prog\n\
  \nSyzbot reported [1] crash that happens for following tracing scenario:\n\n  -\
  \ create tracepoint perf event with attr.inherit=1, attach it to the\n    process\
  \ and set bpf program to it\n  - attached process forks -> chid creates inherited\
  \ event\n\n    the new child event shares the parent's bpf program and tp_event\n\
  \    (hence prog_array) which is global for tracepoint\n\n  - exit both process\
  \ and its child -> release both events\n  - first perf_event_detach_bpf_prog call\
  \ will release tp_event->prog_array\n    and second perf_event_detach_bpf_prog will\
  \ crash, because\n    tp_event->prog_array is NULL\n\nThe fix makes sure the perf_event_detach_bpf_prog\
  \ checks prog_array\nis valid before it tries to remove the bpf program from it.\n\
  \n[1] https://lore.kernel.org/bpf/Z1MR6dCIKajNS6nU@krava/T/#m91dbf0688221ec7a7fc95e896a7ef9ff93b0b8ad\n\
  \nFixes: 0ee288e69d03 (\"bpf,perf: Fix perf_event_detach_bpf_prog error handling\"\
  )\nReported-by: syzbot+2e0d2840414ce817aaac@syzkaller.appspotmail.com\nSigned-off-by:\
  \ Jiri Olsa <jolsa@kernel.org>\nSigned-off-by: Andrii Nakryiko <andrii@kernel.org>\n\
  Link: https://lore.kernel.org/bpf/20241208142507.1207698-1-jolsa@kernel.org\n"
submodule:
- kernel/trace
hunk_count: 2
covered_count: 2
