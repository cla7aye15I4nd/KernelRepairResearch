id: 1989ee16d94720836244
bug_link: https://syzkaller.appspot.com/bug?extid=1989ee16d94720836244
title: 'KASAN: slab-use-after-free Read in bpf_link_free (2)'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 2317dc2c22cc353b699c7d1db47b2fe91f54055c
fix_commit: 2884dc7d08d98a89d8d65121524bb7533183a63a
datetime: '2024-06-03T18:16:19+02:00'
fix_commit_message: 'bpf: Fix a potential use-after-free in bpf_link_free()


  After commit 1a80dbcb2dba, bpf_link can be freed by

  link->ops->dealloc_deferred, but the code still tests and uses

  link->ops->dealloc afterward, which leads to a use-after-free as

  reported by syzbot. Actually, one of them should be sufficient, so

  just call one of them instead of both. Also add a WARN_ON() in case

  of any problematic implementation.


  Fixes: 1a80dbcb2dba ("bpf: support deferring bpf_link dealloc to after RCU grace
  period")

  Reported-by: syzbot+1989ee16d94720836244@syzkaller.appspotmail.com

  Signed-off-by: Cong Wang <cong.wang@bytedance.com>

  Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>

  Acked-by: Jiri Olsa <jolsa@kernel.org>

  Link: https://lore.kernel.org/bpf/20240602182703.207276-1-xiyou.wangcong@gmail.com

  '
submodule:
- kernel/bpf
hunk_count: 3
covered_count: 2
