id: 9461c9b9d340854a404b46c42cbfc91ded1232d8
bug_link: https://syzkaller.appspot.com/bug?extid=9461c9b9d340854a404b46c42cbfc91ded1232d8
title: 'KASAN: stack-out-of-bounds Read in rds_sendmsg'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 6a6b0b9914e73a8a54253dd5f6f5e5dd5e4a756c
fix_commit: 14e138a86f6347c6199f610576d2e11c03bec5f0
datetime: '2017-12-27T10:37:23-05:00'
fix_commit_message: "RDS: Check cmsg_len before dereferencing CMSG_DATA\n\nRDS currently\
  \ doesn't check if the length of the control message is\nlarge enough to hold the\
  \ required data, before dereferencing the control\nmessage data. This results in\
  \ following crash:\n\nBUG: KASAN: stack-out-of-bounds in rds_rdma_bytes net/rds/send.c:1013\n\
  [inline]\nBUG: KASAN: stack-out-of-bounds in rds_sendmsg+0x1f02/0x1f90\nnet/rds/send.c:1066\n\
  Read of size 8 at addr ffff8801c928fb70 by task syzkaller455006/3157\n\nCPU: 0 PID:\
  \ 3157 Comm: syzkaller455006 Not tainted 4.15.0-rc3+ #161\nHardware name: Google\
  \ Google Compute Engine/Google Compute Engine, BIOS\nGoogle 01/01/2011\nCall Trace:\n\
  \ __dump_stack lib/dump_stack.c:17 [inline]\n dump_stack+0x194/0x257 lib/dump_stack.c:53\n\
  \ print_address_description+0x73/0x250 mm/kasan/report.c:252\n kasan_report_error\
  \ mm/kasan/report.c:351 [inline]\n kasan_report+0x25b/0x340 mm/kasan/report.c:409\n\
  \ __asan_report_load8_noabort+0x14/0x20 mm/kasan/report.c:430\n rds_rdma_bytes net/rds/send.c:1013\
  \ [inline]\n rds_sendmsg+0x1f02/0x1f90 net/rds/send.c:1066\n sock_sendmsg_nosec\
  \ net/socket.c:628 [inline]\n sock_sendmsg+0xca/0x110 net/socket.c:638\n ___sys_sendmsg+0x320/0x8b0\
  \ net/socket.c:2018\n __sys_sendmmsg+0x1ee/0x620 net/socket.c:2108\n SYSC_sendmmsg\
  \ net/socket.c:2139 [inline]\n SyS_sendmmsg+0x35/0x60 net/socket.c:2134\n entry_SYSCALL_64_fastpath+0x1f/0x96\n\
  RIP: 0033:0x43fe49\nRSP: 002b:00007fffbe244ad8 EFLAGS: 00000217 ORIG_RAX: 0000000000000133\n\
  RAX: ffffffffffffffda RBX: 00000000004002c8 RCX: 000000000043fe49\nRDX: 0000000000000001\
  \ RSI: 000000002020c000 RDI: 0000000000000003\nRBP: 00000000006ca018 R08: 0000000000000000\
  \ R09: 0000000000000000\nR10: 0000000000000000 R11: 0000000000000217 R12: 00000000004017b0\n\
  R13: 0000000000401840 R14: 0000000000000000 R15: 0000000000000000\n\nTo fix this,\
  \ we verify that the cmsg_len is large enough to hold the\ndata to be read, before\
  \ proceeding further.\n\nReported-by: syzbot <syzkaller-bugs@googlegroups.com>\n\
  Signed-off-by: Avinash Repaka <avinash.repaka@oracle.com>\nAcked-by: Santosh Shilimkar\
  \ <santosh.shilimkar@oracle.com>\nReviewed-by: Yuval Shaia <yuval.shaia@oracle.com>\n\
  Signed-off-by: David S. Miller <davem@davemloft.net>\n"
submodule:
- net/rds
hunk_count: 1
covered_count: 1
