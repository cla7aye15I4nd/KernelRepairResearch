id: 84d0441b9860f0d63285
bug_link: https://syzkaller.appspot.com/bug?extid=84d0441b9860f0d63285
title: 'BUG: using smp_processor_id() in preemptible code in nft_inner_eval'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: b7529880cb961d515642ce63f9d7570869bbbdc3
fix_commit: 7b1d83da254be3bf054965c8f3b1ad976f460ae5
datetime: '2024-12-03T22:10:58+01:00'
fix_commit_message: "netfilter: nft_inner: incorrect percpu area handling under softirq\n\
  \nSoftirq can interrupt ongoing packet from process context that is\nwalking over\
  \ the percpu area that contains inner header offsets.\n\nDisable bh and perform\
  \ three checks before restoring the percpu inner\nheader offsets to validate that\
  \ the percpu area is valid for this\nskbuff:\n\n1) If the NFT_PKTINFO_INNER_FULL\
  \ flag is set on, then this skbuff\n   has already been parsed before for inner\
  \ header fetching to\n   register.\n\n2) Validate that the percpu area refers to\
  \ this skbuff using the\n   skbuff pointer as a cookie. If there is a cookie mismatch,\
  \ then\n   this skbuff needs to be parsed again.\n\n3) Finally, validate if the\
  \ percpu area refers to this tunnel type.\n\nOnly after these three checks the percpu\
  \ area is restored to a on-stack\ncopy and bh is enabled again.\n\nAfter inner header\
  \ fetching, the on-stack copy is stored back to the\npercpu area.\n\nFixes: 3a07327d10a0\
  \ (\"netfilter: nft_inner: support for inner tunnel header matching\")\nReported-by:\
  \ syzbot+84d0441b9860f0d63285@syzkaller.appspotmail.com\nSigned-off-by: Pablo Neira\
  \ Ayuso <pablo@netfilter.org>\n"
submodule:
- include/net/netfilter
- net/netfilter
hunk_count: 3
covered_count: 2
