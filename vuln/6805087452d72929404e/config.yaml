id: 6805087452d72929404e
bug_link: https://syzkaller.appspot.com/bug?extid=6805087452d72929404e
title: WARNING in io_cqring_event_overflow
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 6e5aedb9324aab1c14a23fae3d8eeb64a679c20e
fix_commit: 544d163d659d45a206d8929370d5a2984e546cb7
datetime: '2023-01-13T07:32:46-07:00'
fix_commit_message: 'io_uring: lock overflowing for IOPOLL


  syzbot reports an issue with overflow filling for IOPOLL:


  WARNING: CPU: 0 PID: 28 at io_uring/io_uring.c:734 io_cqring_event_overflow+0x1c0/0x230
  io_uring/io_uring.c:734

  CPU: 0 PID: 28 Comm: kworker/u4:1 Not tainted 6.2.0-rc3-syzkaller-16369-g358a161a6a9e
  #0

  Workqueue: events_unbound io_ring_exit_work

  Call trace:

   io_cqring_event_overflow+0x1c0/0x230 io_uring/io_uring.c:734

   io_req_cqe_overflow+0x5c/0x70 io_uring/io_uring.c:773

   io_fill_cqe_req io_uring/io_uring.h:168 [inline]

   io_do_iopoll+0x474/0x62c io_uring/rw.c:1065

   io_iopoll_try_reap_events+0x6c/0x108 io_uring/io_uring.c:1513

   io_uring_try_cancel_requests+0x13c/0x258 io_uring/io_uring.c:3056

   io_ring_exit_work+0xec/0x390 io_uring/io_uring.c:2869

   process_one_work+0x2d8/0x504 kernel/workqueue.c:2289

   worker_thread+0x340/0x610 kernel/workqueue.c:2436

   kthread+0x12c/0x158 kernel/kthread.c:376

   ret_from_fork+0x10/0x20 arch/arm64/kernel/entry.S:863


  There is no real problem for normal IOPOLL as flush is also called with

  uring_lock taken, but it''s getting more complicated for IOPOLL|SQPOLL,

  for which __io_cqring_overflow_flush() happens from the CQ waiting path.


  Reported-and-tested-by: syzbot+6805087452d72929404e@syzkaller.appspotmail.com

  Cc: stable@vger.kernel.org # 5.10+

  Signed-off-by: Pavel Begunkov <asml.silence@gmail.com>

  Signed-off-by: Jens Axboe <axboe@kernel.dk>

  '
submodule:
- io_uring
hunk_count: 1
covered_count: 1
