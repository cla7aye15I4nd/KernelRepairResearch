id: 4a9f9820bd8d302e22f7
bug_link: https://syzkaller.appspot.com/bug?extid=4a9f9820bd8d302e22f7
title: 'KASAN: slab-out-of-bounds Read in do_csum'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: ab41a97474c00ceab1b8f44ac78a51079130466a
fix_commit: 8bd795fedb8450ecbef18eeadbd23ed8fc7630f5
datetime: '2023-09-07T10:15:20+01:00'
fix_commit_message: "arm64: csum: Fix OoB access in IP checksum code for negative\
  \ lengths\n\nAlthough commit c2c24edb1d9c (\"arm64: csum: Fix pathological zero-length\n\
  calls\") added an early return for zero-length input, syzkaller has\npopped up with\
  \ an example of a _negative_ length which causes an\nundefined shift and an out-of-bounds\
  \ read:\n\n | BUG: KASAN: slab-out-of-bounds in do_csum+0x44/0x254 arch/arm64/lib/csum.c:39\n\
  \ | Read of size 4294966928 at addr ffff0000d7ac0170 by task syz-executor412/5975\n\
  \ |\n | CPU: 0 PID: 5975 Comm: syz-executor412 Not tainted 6.4.0-rc4-syzkaller-g908f31f2a05b\
  \ #0\n | Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS\
  \ Google 05/25/2023\n | Call trace:\n |  dump_backtrace+0x1b8/0x1e4 arch/arm64/kernel/stacktrace.c:233\n\
  \ |  show_stack+0x2c/0x44 arch/arm64/kernel/stacktrace.c:240\n |  __dump_stack lib/dump_stack.c:88\
  \ [inline]\n |  dump_stack_lvl+0xd0/0x124 lib/dump_stack.c:106\n |  print_address_description\
  \ mm/kasan/report.c:351 [inline]\n |  print_report+0x174/0x514 mm/kasan/report.c:462\n\
  \ |  kasan_report+0xd4/0x130 mm/kasan/report.c:572\n |  kasan_check_range+0x264/0x2a4\
  \ mm/kasan/generic.c:187\n |  __kasan_check_read+0x20/0x30 mm/kasan/shadow.c:31\n\
  \ |  do_csum+0x44/0x254 arch/arm64/lib/csum.c:39\n |  csum_partial+0x30/0x58 lib/checksum.c:128\n\
  \ |  gso_make_checksum include/linux/skbuff.h:4928 [inline]\n |  __udp_gso_segment+0xaf4/0x1bc4\
  \ net/ipv4/udp_offload.c:332\n |  udp6_ufo_fragment+0x540/0xca0 net/ipv6/udp_offload.c:47\n\
  \ |  ipv6_gso_segment+0x5cc/0x1760 net/ipv6/ip6_offload.c:119\n |  skb_mac_gso_segment+0x2b4/0x5b0\
  \ net/core/gro.c:141\n |  __skb_gso_segment+0x250/0x3d0 net/core/dev.c:3401\n |\
  \  skb_gso_segment include/linux/netdevice.h:4859 [inline]\n |  validate_xmit_skb+0x364/0xdbc\
  \ net/core/dev.c:3659\n |  validate_xmit_skb_list+0x94/0x130 net/core/dev.c:3709\n\
  \ |  sch_direct_xmit+0xe8/0x548 net/sched/sch_generic.c:327\n |  __dev_xmit_skb\
  \ net/core/dev.c:3805 [inline]\n |  __dev_queue_xmit+0x147c/0x3318 net/core/dev.c:4210\n\
  \ |  dev_queue_xmit include/linux/netdevice.h:3085 [inline]\n |  packet_xmit+0x6c/0x318\
  \ net/packet/af_packet.c:276\n |  packet_snd net/packet/af_packet.c:3081 [inline]\n\
  \ |  packet_sendmsg+0x376c/0x4c98 net/packet/af_packet.c:3113\n |  sock_sendmsg_nosec\
  \ net/socket.c:724 [inline]\n |  sock_sendmsg net/socket.c:747 [inline]\n |  __sys_sendto+0x3b4/0x538\
  \ net/socket.c:2144\n\nExtend the early return to reject negative lengths as well,\
  \ aligning our\nimplementation with the generic code in lib/checksum.c\n\nCc: Robin\
  \ Murphy <robin.murphy@arm.com>\nFixes: 5777eaed566a (\"arm64: Implement optimised\
  \ checksum routine\")\nReported-by: syzbot+4a9f9820bd8d302e22f7@syzkaller.appspotmail.com\n\
  Link: https://lore.kernel.org/r/000000000000e0e94c0603f8d213@google.com\nSigned-off-by:\
  \ Will Deacon <will@kernel.org>\n"
submodule:
- arch/arm64/lib
hunk_count: 1
covered_count: 1
