id: ec1b7575afef85a0e5ca
bug_link: https://syzkaller.appspot.com/bug?extid=ec1b7575afef85a0e5ca
title: 'kernel panic: corrupted stack end in wb_workfn'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 1c87e79a002f6a159396138cd3f3ab554a2a8887
fix_commit: ef82bcfa671b9a635bab5fa669005663d8b177c5
datetime: '2019-03-20T11:09:47-07:00'
fix_commit_message: 'sctp: use memdup_user instead of vmemdup_user


  In sctp_setsockopt_bindx()/__sctp_setsockopt_connectx(), it allocates

  memory with addrs_size which is passed from userspace. We used flag

  GFP_USER to put some more restrictions on it in Commit cacc06215271

  ("sctp: use GFP_USER for user-controlled kmalloc").


  However, since Commit c981f254cc82 ("sctp: use vmemdup_user() rather

  than badly open-coding memdup_user()"), vmemdup_user() has been used,

  which doesn''t check GFP_USER flag when goes to vmalloc_*(). So when

  addrs_size is a huge value, it could exhaust memory and even trigger

  oom killer.


  This patch is to use memdup_user() instead, in which GFP_USER would

  work to limit the memory allocation with a huge addrs_size.


  Note we can''t fix it by limiting ''addrs_size'', as there''s no demand

  for it from RFC.


  Reported-by: syzbot+ec1b7575afef85a0e5ca@syzkaller.appspotmail.com

  Fixes: c981f254cc82 ("sctp: use vmemdup_user() rather than badly open-coding memdup_user()")

  Signed-off-by: Xin Long <lucien.xin@gmail.com>

  Acked-by: Neil Horman <nhorman@tuxdriver.com>

  Signed-off-by: David S. Miller <davem@davemloft.net>

  '
submodule:
- net/sctp
hunk_count: 6
covered_count: 0
