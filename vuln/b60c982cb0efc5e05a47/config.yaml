id: b60c982cb0efc5e05a47
bug_link: https://syzkaller.appspot.com/bug?extid=b60c982cb0efc5e05a47
title: 'KASAN: use-after-free Write in io_queue_worker_create'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 78a780602075d8b00c98070fa26e389b3b3efa72
fix_commit: 71a85387546e50b1a37b0fa45dadcae3bfb35cf6
datetime: '2021-12-10T13:56:28-07:00'
fix_commit_message: 'io-wq: check for wq exit after adding new worker task_work


  We check IO_WQ_BIT_EXIT before attempting to create a new worker, and

  wq exit cancels pending work if we have any. But it''s possible to have

  a race between the two, where creation checks exit finding it not set,

  but we''re in the process of exiting. The exit side will cancel pending

  creation task_work, but there''s a gap where we add task_work after we''ve

  canceled existing creations at exit time.


  Fix this by checking the EXIT bit post adding the creation task_work.

  If it''s set, run the same cancelation that exit does.


  Reported-and-tested-by: syzbot+b60c982cb0efc5e05a47@syzkaller.appspotmail.com

  Reviewed-by: Hao Xu <haoxu@linux.alibaba.com>

  Signed-off-by: Jens Axboe <axboe@kernel.dk>

  '
submodule:
- fs
hunk_count: 4
covered_count: 1
