id: e3563f0c94e188366dbb
bug_link: https://syzkaller.appspot.com/bug?extid=e3563f0c94e188366dbb
title: 'BUG: unable to handle kernel NULL pointer dereference in gsmld_receive_buf'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 692a8ebcfc24f4a5bea0eb2967e450f584193da6
fix_commit: f16c6d2e58a4c2b972efcf9eb12390ee0ba3befb
datetime: '2022-08-30T14:34:36+02:00'
fix_commit_message: "tty: n_gsm: add sanity check for gsm->receive in gsm_receive_buf()\n\
  \nA null pointer dereference can happen when attempting to access the\n\"gsm->receive()\"\
  \ function in gsmld_receive_buf(). Currently, the code\nassumes that gsm->recieve\
  \ is only called after MUX activation.\nSince the gsmld_receive_buf() function can\
  \ be accessed without the need to\ninitialize the MUX, the gsm->receive() function\
  \ will not be set and a\nNULL pointer dereference will occur.\n\nFix this by avoiding\
  \ the call to \"gsm->receive()\" in case the function is\nnot initialized by adding\
  \ a sanity check.\n\nCall Trace:\n <TASK>\n gsmld_receive_buf+0x1c2/0x2f0 drivers/tty/n_gsm.c:2861\n\
  \ tiocsti drivers/tty/tty_io.c:2293 [inline]\n tty_ioctl+0xa75/0x15d0 drivers/tty/tty_io.c:2692\n\
  \ vfs_ioctl fs/ioctl.c:51 [inline]\n __do_sys_ioctl fs/ioctl.c:870 [inline]\n __se_sys_ioctl\
  \ fs/ioctl.c:856 [inline]\n __x64_sys_ioctl+0x193/0x200 fs/ioctl.c:856\n do_syscall_x64\
  \ arch/x86/entry/common.c:50 [inline]\n do_syscall_64+0x35/0xb0 arch/x86/entry/common.c:80\n\
  \ entry_SYSCALL_64_after_hwframe+0x63/0xcd\n\nLink: https://syzkaller.appspot.com/bug?id=bdf035c61447f8c6e0e6920315d577cb5cc35ac5\n\
  Fixes: 01aecd917114 (\"tty: n_gsm: fix tty registration before control channel open\"\
  )\nCc: stable <stable@kernel.org>\nReported-and-tested-by: syzbot+e3563f0c94e188366dbb@syzkaller.appspotmail.com\n\
  Signed-off-by: Mazin Al Haddad <mazinalhaddad05@gmail.com>\nLink: https://lore.kernel.org/r/20220814015211.84180-1-mazinalhaddad05@gmail.com\n\
  Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>\n"
submodule:
- drivers/tty
hunk_count: 1
covered_count: 1
