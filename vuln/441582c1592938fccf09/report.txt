============================================
WARNING: possible recursive locking detected
6.15.0-rc3-syzkaller-00342-g5bc1018675ec #0 Tainted: G     U             
--------------------------------------------
syz.3.3247/22963 is trying to acquire lock:
ffffffff8e44b590 (trace_event_sem){++++}-{4:4}, at: print_event_fields+0x70e/0xc90 kernel/trace/trace_output.c:1049

but task is already holding lock:
ffffffff8e44b590 (trace_event_sem){++++}-{4:4}, at: tracing_read_pipe+0x3e0/0xc60 kernel/trace/trace.c:6658

other info that might help us debug this:
 Possible unsafe locking scenario:

       CPU0
       ----
  lock(trace_event_sem);
  lock(trace_event_sem);

 *** DEADLOCK ***

 May be due to missing lock nesting notation

4 locks held by syz.3.3247/22963:
 #0: ffff888027fc37b8 (&f->f_pos_lock){+.+.}-{4:4}, at: fdget_pos+0x2a2/0x370 fs/file.c:1213
 #1: ffff8880785f8090 (&iter->mutex){+.+.}-{4:4}, at: class_mutex_constructor include/linux/mutex.h:201 [inline]
 #1: ffff8880785f8090 (&iter->mutex){+.+.}-{4:4}, at: tracing_read_pipe+0x65/0xc60 kernel/trace/trace.c:6626
 #2: ffffffff8e44b590 (trace_event_sem){++++}-{4:4}, at: tracing_read_pipe+0x3e0/0xc60 kernel/trace/trace.c:6658
 #3: ffffffff8e443170 (all_cpu_access_lock){++++}-{4:4}, at: trace_access_lock kernel/trace/trace.c:933 [inline]
 #3: ffffffff8e443170 (all_cpu_access_lock){++++}-{4:4}, at: trace_access_lock kernel/trace/trace.c:929 [inline]
 #3: ffffffff8e443170 (all_cpu_access_lock){++++}-{4:4}, at: tracing_read_pipe+0x8c7/0xc60 kernel/trace/trace.c:6659

stack backtrace:
CPU: 0 UID: 0 PID: 22963 Comm: syz.3.3247 Tainted: G     U              6.15.0-rc3-syzkaller-00342-g5bc1018675ec #0 PREEMPT(full) 
Tainted: [U]=USER
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 04/19/2025
Call Trace:
 <TASK>
 __dump_stack lib/dump_stack.c:94 [inline]
 dump_stack_lvl+0x116/0x1f0 lib/dump_stack.c:120
 print_deadlock_bug+0x1e9/0x240 kernel/locking/lockdep.c:3042
 check_deadlock kernel/locking/lockdep.c:3094 [inline]
 validate_chain kernel/locking/lockdep.c:3896 [inline]
 __lock_acquire+0xff7/0x1ba0 kernel/locking/lockdep.c:5235
 lock_acquire kernel/locking/lockdep.c:5866 [inline]
 lock_acquire+0x179/0x350 kernel/locking/lockdep.c:5823
 down_read+0x9b/0x480 kernel/locking/rwsem.c:1524
 print_event_fields+0x70e/0xc90 kernel/trace/trace_output.c:1049
 print_trace_fmt kernel/trace/trace.c:4208 [inline]
 print_trace_line+0x129a/0x17a0 kernel/trace/trace.c:4376
 tracing_read_pipe+0x4b9/0xc60 kernel/trace/trace.c:6664
 vfs_read+0x1de/0xc70 fs/read_write.c:568
 ksys_read+0x12a/0x240 fs/read_write.c:713
 do_syscall_x64 arch/x86/entry/syscall_64.c:63 [inline]
 do_syscall_64+0xcd/0x230 arch/x86/entry/syscall_64.c:94
 entry_SYSCALL_64_after_hwframe+0x77/0x7f
RIP: 0033:0x7f87f858e969
Code: ff ff c3 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 40 00 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 a8 ff ff ff f7 d8 64 89 01 48
RSP: 002b:00007f87f9439038 EFLAGS: 00000246 ORIG_RAX: 0000000000000000
RAX: ffffffffffffffda RBX: 00007f87f87b5fa0 RCX: 00007f87f858e969
RDX: 0000000000000067 RSI: 0000000000000000 RDI: 0000000000000007
RBP: 00007f87f8610ab1 R08: 0000000000000000 R09: 0000000000000000
R10: 0000000000000000 R11: 0000000000000246 R12: 0000000000000000
R13: 0000000000000000 R14: 00007f87f87b5fa0 R15: 00007ffcda5a13e8
 </TASK>
