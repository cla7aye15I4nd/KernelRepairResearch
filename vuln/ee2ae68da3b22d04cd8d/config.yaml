id: ee2ae68da3b22d04cd8d
bug_link: https://syzkaller.appspot.com/bug?extid=ee2ae68da3b22d04cd8d
title: 'INFO: task hung in migrate_pages_batch'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 6f1f15a5e492082c8082bea56d87852b65588b5c
fix_commit: 38296afe3c6ee07319e01bb249aa4bb47c07b534
datetime: '2024-02-07T21:20:36-08:00'
fix_commit_message: 'nilfs2: fix hang in nilfs_lookup_dirty_data_buffers()


  Syzbot reported a hang issue in migrate_pages_batch() called by mbind()

  and nilfs_lookup_dirty_data_buffers() called in the log writer of nilfs2.


  While migrate_pages_batch() locks a folio and waits for the writeback to

  complete, the log writer thread that should bring the writeback to

  completion picks up the folio being written back in

  nilfs_lookup_dirty_data_buffers() that it calls for subsequent log

  creation and was trying to lock the folio.  Thus causing a deadlock.


  In the first place, it is unexpected that folios/pages in the middle of

  writeback will be updated and become dirty.  Nilfs2 adds a checksum to

  verify the validity of the log being written and uses it for recovery at

  mount, so data changes during writeback are suppressed.  Since this is

  broken, an unclean shutdown could potentially cause recovery to fail.


  Investigation revealed that the root cause is that the wait for writeback

  completion in nilfs_page_mkwrite() is conditional, and if the backing

  device does not require stable writes, data may be modified without

  waiting.


  Fix these issues by making nilfs_page_mkwrite() wait for writeback to

  finish regardless of the stable write requirement of the backing device.


  Link: https://lkml.kernel.org/r/20240131145657.4209-1-konishi.ryusuke@gmail.com

  Fixes: 1d1d1a767206 ("mm: only enforce stable page writes if the backing device
  requires it")

  Signed-off-by: Ryusuke Konishi <konishi.ryusuke@gmail.com>

  Reported-by: syzbot+ee2ae68da3b22d04cd8d@syzkaller.appspotmail.com

  Closes: https://lkml.kernel.org/r/00000000000047d819061004ad6c@google.com

  Tested-by: Ryusuke Konishi <konishi.ryusuke@gmail.com>

  Cc: <stable@vger.kernel.org>

  Signed-off-by: Andrew Morton <akpm@linux-foundation.org>

  '
submodule:
- fs/nilfs2
hunk_count: 1
covered_count: 0
