id: e51ead0112c2cb8d1b45
bug_link: https://syzkaller.appspot.com/bug?extid=e51ead0112c2cb8d1b45
title: 'net-next test error: WARNING in devlink_nl_region_notify'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 7fec4d39198beb4322ba5039a01649b43ee663f2
fix_commit: ef91abfb20c743c0cbe98e4351cd0ce05c81340a
datetime: '2021-09-29T10:51:09-07:00'
fix_commit_message: "devlink: Add missed notifications iterators\n\nThe commit mentioned\
  \ in Fixes line missed a couple of notifications that\nwere registered before devlink_register()\
  \ and should be delayed too.\n\nAs such, the too early placed WARN_ON() check spotted\
  \ it.\n\nWARNING: CPU: 1 PID: 6540 at net/core/devlink.c:5158 devlink_nl_region_notify+0x184/0x1e0\
  \ net/core/devlink.c:5158\nModules linked in:\nCPU: 1 PID: 6540 Comm: syz-executor.0\
  \ Not tainted 5.15.0-rc2-syzkaller #0\nHardware name: Google Google Compute Engine/Google\
  \ Compute Engine, BIOS Google 01/01/2011\nRIP: 0010:devlink_nl_region_notify+0x184/0x1e0\
  \ net/core/devlink.c:5158\nCode: 38 41 b8 c0 0c 00 00 31 d2 48 89 ee 4c 89 e7 e8\
  \ 72 1a 26 00 48 83 c4 08 5b 5d 41 5c 41 5d 41 5e e9 01 bd 41 fa\ne8 fc bc 41 fa\
  \ <0f> 0b e9 f7 fe ff ff e8 f0 bc 41 fa 0f 0b eb da 4c 89 e7 e8 c4 18\nRSP: 0018:ffffc90002d6f658\
  \ EFLAGS: 00010293\nRAX: 0000000000000000 RBX: 0000000000000000 RCX: 0000000000000000\n\
  RDX: ffff88801f08d580 RSI: ffffffff87344e94 RDI: 0000000000000003\nRBP: ffff88801ee42100\
  \ R08: 0000000000000000 R09: 0000000000000000\nR10: ffffffff87344d8a R11: 0000000000000000\
  \ R12: ffff88801c1dc000\nR13: 0000000000000000 R14: 000000000000002c R15: ffff88801c1dc070\n\
  FS:  0000555555e8e400(0000) GS:ffff8880b9d00000(0000) knlGS:0000000000000000\nCS:\
  \  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 000055dd7c590310 CR3: 0000000069a09000\
  \ CR4: 00000000003506e0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n\
  DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n\
  \ devlink_region_create+0x39f/0x4c0 net/core/devlink.c:10327\n nsim_dev_dummy_region_init\
  \ drivers/net/netdevsim/dev.c:481 [inline]\n nsim_dev_probe+0x5f6/0x1150 drivers/net/netdevsim/dev.c:1479\n\
  \ call_driver_probe drivers/base/dd.c:517 [inline]\n really_probe+0x245/0xcc0 drivers/base/dd.c:596\n\
  \ __driver_probe_device+0x338/0x4d0 drivers/base/dd.c:751\n driver_probe_device+0x4c/0x1a0\
  \ drivers/base/dd.c:781\n __device_attach_driver+0x20b/0x2f0 drivers/base/dd.c:898\n\
  \ bus_for_each_drv+0x15f/0x1e0 drivers/base/bus.c:427\n __device_attach+0x228/0x4a0\
  \ drivers/base/dd.c:969\n bus_probe_device+0x1e4/0x290 drivers/base/bus.c:487\n\
  \ device_add+0xc35/0x21b0 drivers/base/core.c:3359\n nsim_bus_dev_new drivers/net/netdevsim/bus.c:435\
  \ [inline]\n new_device_store+0x48b/0x770 drivers/net/netdevsim/bus.c:302\n bus_attr_store+0x72/0xa0\
  \ drivers/base/bus.c:122\n sysfs_kf_write+0x110/0x160 fs/sysfs/file.c:139\n kernfs_fop_write_iter+0x342/0x500\
  \ fs/kernfs/file.c:296\n call_write_iter include/linux/fs.h:2163 [inline]\n new_sync_write+0x429/0x660\
  \ fs/read_write.c:507\n vfs_write+0x7cf/0xae0 fs/read_write.c:594\n ksys_write+0x12d/0x250\
  \ fs/read_write.c:647\n do_syscall_x64 arch/x86/entry/common.c:50 [inline]\n do_syscall_64+0x35/0xb0\
  \ arch/x86/entry/common.c:80\n entry_SYSCALL_64_after_hwframe+0x44/0xae\nRIP: 0033:0x7f328409d3ef\n\
  Code: 89 54 24 18 48 89 74 24 10 89 7c 24 08 e8 99 fd ff ff 48 8b 54 24 18 48 8b\
  \ 74 24 10 41 89 c0 8b 7c 24 08 b8 01\n00 00 00 0f 05 <48> 3d 00 f0 ff ff 77 31\
  \ 44 89 c7 48 89 44 24 08 e8 cc fd ff ff 48\nRSP: 002b:00007ffdc6851140 EFLAGS:\
  \ 00000293 ORIG_RAX: 0000000000000001\nRAX: ffffffffffffffda RBX: 0000000000000003\
  \ RCX: 00007f328409d3ef\nRDX: 0000000000000003 RSI: 00007ffdc6851190 RDI: 0000000000000004\n\
  RBP: 0000000000000004 R08: 0000000000000000 R09: 00007ffdc68510e0\nR10: 0000000000000000\
  \ R11: 0000000000000293 R12: 00007f3284144971\nR13: 00007ffdc6851190 R14: 0000000000000000\
  \ R15: 00007ffdc6851860\n\nFixes: cf530217408e (\"devlink: Notify users when objects\
  \ are accessible\")\nReported-by: Eric Dumazet <eric.dumazet@gmail.com>\nTested-by:\
  \ Vladimir Oltean <vladimir.oltean@nxp.com>\nSigned-off-by: Leon Romanovsky <leonro@nvidia.com>\n\
  Reviewed-by: Jacob Keller <jacob.e.keller@intel.com>\nLink: https://lore.kernel.org/r/2ed1159291f2a589b013914f2b60d8172fc525c1.1632925030.git.leonro@nvidia.com\n\
  Signed-off-by: Jakub Kicinski <kuba@kernel.org>\n"
submodule:
- net/core
hunk_count: 5
covered_count: 2
