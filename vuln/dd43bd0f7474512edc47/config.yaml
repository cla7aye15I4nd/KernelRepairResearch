id: dd43bd0f7474512edc47
bug_link: https://syzkaller.appspot.com/bug?extid=dd43bd0f7474512edc47
title: WARNING in mb_cache_destroy
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 8b57de1c5edde3faf8a4f6a440b7ec16bb3c81d4
fix_commit: 0c0b4a49d3e7f49690a6827a41faeffad5df7e21
datetime: '2024-05-07T15:59:18-04:00'
fix_commit_message: "ext4: fix mb_cache_entry's e_refcnt leak in ext4_xattr_block_cache_find()\n\
  \nSyzbot reports a warning as follows:\n\n============================================\n\
  WARNING: CPU: 0 PID: 5075 at fs/mbcache.c:419 mb_cache_destroy+0x224/0x290\nModules\
  \ linked in:\nCPU: 0 PID: 5075 Comm: syz-executor199 Not tainted 6.9.0-rc6-gb947cc5bf6d7\n\
  RIP: 0010:mb_cache_destroy+0x224/0x290 fs/mbcache.c:419\nCall Trace:\n <TASK>\n\
  \ ext4_put_super+0x6d4/0xcd0 fs/ext4/super.c:1375\n generic_shutdown_super+0x136/0x2d0\
  \ fs/super.c:641\n kill_block_super+0x44/0x90 fs/super.c:1675\n ext4_kill_sb+0x68/0xa0\
  \ fs/ext4/super.c:7327\n[...]\n============================================\n\n\
  This is because when finding an entry in ext4_xattr_block_cache_find(), if\next4_sb_bread()\
  \ returns -ENOMEM, the ce's e_refcnt, which has already grown\nin the __entry_find(),\
  \ won't be put away, and eventually trigger the above\nissue in mb_cache_destroy()\
  \ due to reference count leakage.\n\nSo call mb_cache_entry_put() on the -ENOMEM\
  \ error branch as a quick fix.\n\nReported-by: syzbot+dd43bd0f7474512edc47@syzkaller.appspotmail.com\n\
  Closes: https://syzkaller.appspot.com/bug?extid=dd43bd0f7474512edc47\nFixes: fb265c9cb49e\
  \ (\"ext4: add ext4_sb_bread() to disambiguate ENOMEM cases\")\nCc: stable@kernel.org\n\
  Signed-off-by: Baokun Li <libaokun1@huawei.com>\nReviewed-by: Jan Kara <jack@suse.cz>\n\
  Link: https://lore.kernel.org/r/20240504075526.2254349-2-libaokun@huaweicloud.com\n\
  Signed-off-by: Theodore Ts'o <tytso@mit.edu>\n"
submodule:
- fs/ext4
hunk_count: 1
covered_count: 0
