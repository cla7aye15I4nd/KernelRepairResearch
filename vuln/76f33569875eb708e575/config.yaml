id: 76f33569875eb708e575
bug_link: https://syzkaller.appspot.com/bug?extid=76f33569875eb708e575
title: 'WARNING: lock held when returning to user space in afs_proc_addr_prefs_write'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 904abff4b1b94184aaa0e9f5fce7821f7b5b81a3
fix_commit: 17a4fde81d3a7478d97d15304a6d61094a10c2e3
datetime: '2025-01-09T17:21:41+01:00'
fix_commit_message: "afs: Fix merge preference rule failure condition\n\nsyzbot reported\
  \ a lock held when returning to userspace[1].  This is\nbecause if argc is less\
  \ than 0 and the function returns directly, the held\ninode lock is not released.\n\
  \nFix this by store the error in ret and jump to done to clean up instead of\nreturning\
  \ directly.\n\n[dh: Modified Lizhi Xu's original patch to make it honour the error\
  \ code\nfrom afs_split_string()]\n\n[1]\nWARNING: lock held when returning to user\
  \ space!\n6.13.0-rc3-syzkaller-00209-g499551201b5f #0 Not tainted\n------------------------------------------------\n\
  syz-executor133/5823 is leaving the kernel with locks still held!\n1 lock held by\
  \ syz-executor133/5823:\n #0: ffff888071cffc00 (&sb->s_type->i_mutex_key#9){++++}-{4:4},\
  \ at: inode_lock include/linux/fs.h:818 [inline]\n #0: ffff888071cffc00 (&sb->s_type->i_mutex_key#9){++++}-{4:4},\
  \ at: afs_proc_addr_prefs_write+0x2bb/0x14e0 fs/afs/addr_prefs.c:388\n\nReported-by:\
  \ syzbot+76f33569875eb708e575@syzkaller.appspotmail.com\nCloses: https://syzkaller.appspot.com/bug?extid=76f33569875eb708e575\n\
  Signed-off-by: Lizhi Xu <lizhi.xu@windriver.com>\nSigned-off-by: David Howells <dhowells@redhat.com>\n\
  Link: https://lore.kernel.org/r/20241226012616.2348907-1-lizhi.xu@windriver.com/\n\
  Link: https://lore.kernel.org/r/529850.1736261552@warthog.procyon.org.uk\nTested-by:\
  \ syzbot+76f33569875eb708e575@syzkaller.appspotmail.com\ncc: Marc Dionne <marc.dionne@auristor.com>\n\
  cc: linux-afs@lists.infradead.org\nSigned-off-by: Christian Brauner <brauner@kernel.org>\n"
submodule:
- fs/afs
hunk_count: 1
covered_count: 1
