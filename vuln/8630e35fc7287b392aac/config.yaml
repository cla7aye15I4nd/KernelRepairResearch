id: 8630e35fc7287b392aac
bug_link: https://syzkaller.appspot.com/bug?extid=8630e35fc7287b392aac
title: 'kernel panic: Out of memory and no killable processes... (2)'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 743ffffefac1c670c6618742c923f6275d819604
fix_commit: 0537250fdc6c876ed4cbbe874c739aebef493ee2
datetime: '2018-02-02T12:45:16+01:00'
fix_commit_message: 'netfilter: x_tables: make allocation less aggressive


  syzbot has noticed that xt_alloc_table_info can allocate a lot of memory.

  This is an admin only interface but an admin in a namespace is sufficient

  as well.  eacd86ca3b03 ("net/netfilter/x_tables.c: use kvmalloc() in

  xt_alloc_table_info()") has changed the opencoded kmalloc->vmalloc

  fallback into kvmalloc.  It has dropped __GFP_NORETRY on the way because

  vmalloc has simply never fully supported __GFP_NORETRY semantic.  This is

  still the case because e.g.  page tables backing the vmalloc area are

  hardcoded GFP_KERNEL.


  Revert back to __GFP_NORETRY as a poors man defence against excessively

  large allocation request here.  We will not rule out the OOM killer

  completely but __GFP_NORETRY should at least stop the large request in

  most cases.


  [akpm@linux-foundation.org: coding-style fixes]

  Fixes: eacd86ca3b03 ("net/netfilter/x_tables.c: use kvmalloc() in xt_alloc_tableLink:
  http://lkml.kernel.org/r/20180130140104.GE21609@dhcp22.suse.cz

  Signed-off-by: Michal Hocko <mhocko@suse.com>

  Acked-by: Florian Westphal <fw@strlen.de>

  Reviewed-by: Andrew Morton <akpm@linux-foundation.org>

  Cc: David S. Miller <davem@davemloft.net>

  Signed-off-by: Andrew Morton <akpm@linux-foundation.org>

  Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>

  '
submodule:
- net/netfilter
hunk_count: 1
covered_count: 0
