id: 58e480e7b28f2d890bfd
bug_link: https://syzkaller.appspot.com/bug?extid=58e480e7b28f2d890bfd
title: 'KASAN: invalid-free in sctp_stream_free'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: fc228abc2347e106a44c0e9b29ab70b712c4ca51
fix_commit: af98c5a78517c04adb5fd68bb64b1ad6fe3d473f
datetime: '2019-02-13T19:33:44-05:00'
fix_commit_message: 'sctp: set stream ext to NULL after freeing it in sctp_stream_outq_migrate


  In sctp_stream_init(), after sctp_stream_outq_migrate() freed the

  surplus streams'' ext, but sctp_stream_alloc_out() returns -ENOMEM,

  stream->outcnt will not be set to ''outcnt''.


  With the bigger value on stream->outcnt, when closing the assoc and

  freeing its streams, the ext of those surplus streams will be freed

  again since those stream exts were not set to NULL after freeing in

  sctp_stream_outq_migrate(). Then the invalid-free issue reported by

  syzbot would be triggered.


  We fix it by simply setting them to NULL after freeing.


  Fixes: 5bbbbe32a431 ("sctp: introduce stream scheduler foundations")

  Reported-by: syzbot+58e480e7b28f2d890bfd@syzkaller.appspotmail.com

  Signed-off-by: Xin Long <lucien.xin@gmail.com>

  Acked-by: Neil Horman <nhorman@tuxdriver.com>

  Acked-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>

  Signed-off-by: David S. Miller <davem@davemloft.net>

  '
submodule:
- net/sctp
hunk_count: 1
covered_count: 1
