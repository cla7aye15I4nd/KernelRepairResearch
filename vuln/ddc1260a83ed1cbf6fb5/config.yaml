id: ddc1260a83ed1cbf6fb5
bug_link: https://syzkaller.appspot.com/bug?extid=ddc1260a83ed1cbf6fb5
title: 'KASAN: use-after-free Read in snd_seq_timer_interrupt (2)'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: a0309c344886c499b6071e7f03658e7f71a9afbb
fix_commit: 83e197a8414c0ba545e7e3916ce05f836f349273
datetime: '2021-06-10T17:21:30+02:00'
fix_commit_message: 'ALSA: seq: Fix race of snd_seq_timer_open()


  The timer instance per queue is exclusive, and snd_seq_timer_open()

  should have managed the concurrent accesses.  It looks as if it''s

  checking the already existing timer instance at the beginning, but

  it''s not right, because there is no protection, hence any later

  concurrent call of snd_seq_timer_open() may override the timer

  instance easily.  This may result in UAF, as the leftover timer

  instance can keep running while the queue itself gets closed, as

  spotted by syzkaller recently.


  For avoiding the race, add a proper check at the assignment of

  tmr->timeri again, and return -EBUSY if it''s been already registered.


  Reported-by: syzbot+ddc1260a83ed1cbf6fb5@syzkaller.appspotmail.com

  Cc: <stable@vger.kernel.org>

  Link: https://lore.kernel.org/r/000000000000dce34f05c42f110c@google.com

  Link: https://lore.kernel.org/r/20210610152059.24633-1-tiwai@suse.de

  Signed-off-by: Takashi Iwai <tiwai@suse.de>

  '
submodule:
- sound/core/seq
hunk_count: 1
covered_count: 0
