id: 7c2bb71996f95a82524c
bug_link: https://syzkaller.appspot.com/bug?extid=7c2bb71996f95a82524c
title: 'KMSAN: kernel-usb-infoleak in hid_submit_ctrl'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 48e33befe61a7d407753c53d1a06fc8d6b5dab80
fix_commit: 6be388f4a35d2ce5ef7dbf635a8964a5da7f799f
datetime: '2021-05-05T15:52:34+02:00'
fix_commit_message: 'HID: usbhid: fix info leak in hid_submit_ctrl


  In hid_submit_ctrl(), the way of calculating the report length doesn''t

  take into account that report->size can be zero. When running the

  syzkaller reproducer, a report of size 0 causes hid_submit_ctrl) to

  calculate transfer_buffer_length as 16384. When this urb is passed to

  the usb core layer, KMSAN reports an info leak of 16384 bytes.


  To fix this, first modify hid_report_len() to account for the zero

  report size case by using DIV_ROUND_UP for the division. Then, call it

  from hid_submit_ctrl().


  Reported-by: syzbot+7c2bb71996f95a82524c@syzkaller.appspotmail.com

  Signed-off-by: Anirudh Rayabharam <mail@anirudhrb.com>

  Acked-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>

  Signed-off-by: Jiri Kosina <jkosina@suse.cz>

  '
submodule:
- drivers/hid/usbhid
- include/linux
hunk_count: 2
covered_count: 1
