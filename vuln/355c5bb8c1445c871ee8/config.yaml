id: 355c5bb8c1445c871ee8
bug_link: https://syzkaller.appspot.com/bug?extid=355c5bb8c1445c871ee8
title: 'KMSAN: uninit-value in unwind_dump'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 2aaba39e783a10fd1368626bce6f618a6a2a78b0
fix_commit: 90d1f14cbb9ddbfc532e2da13bf6e0ed8320e792
datetime: '2024-05-05T17:28:06-07:00'
fix_commit_message: 'kmsan: compiler_types: declare __no_sanitize_or_inline


  It turned out that KMSAN instruments READ_ONCE_NOCHECK(), resulting in

  false positive reports, because __no_sanitize_or_inline enforced inlining.


  Properly declare __no_sanitize_or_inline under __SANITIZE_MEMORY__, so

  that it does not __always_inline the annotated function.


  Link: https://lkml.kernel.org/r/20240426091622.3846771-1-glider@google.com

  Fixes: 5de0ce85f5a4 ("kmsan: mark noinstr as __no_sanitize_memory")

  Signed-off-by: Alexander Potapenko <glider@google.com>

  Reported-by: syzbot+355c5bb8c1445c871ee8@syzkaller.appspotmail.com

  Link: https://lkml.kernel.org/r/000000000000826ac1061675b0e3@google.com

  Cc: <stable@vger.kernel.org>

  Reviewed-by: Marco Elver <elver@google.com>

  Cc: Dmitry Vyukov <dvyukov@google.com>

  Cc: Miguel Ojeda <ojeda@kernel.org>

  Signed-off-by: Andrew Morton <akpm@linux-foundation.org>

  '
submodule:
- include/linux
hunk_count: 1
covered_count: 0
