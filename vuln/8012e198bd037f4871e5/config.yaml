id: 8012e198bd037f4871e5
bug_link: https://syzkaller.appspot.com/bug?extid=8012e198bd037f4871e5
title: divide error in nf_nat_l4proto_unique_tuple
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 10414014bc085aac9f787a5890b33b5605fbcfc4
fix_commit: db57ccf0f2f4624b4c4758379f8165277504fbd7
datetime: '2018-02-14T21:05:40+01:00'
fix_commit_message: "netfilter: nat: cope with negative port range\n\nsyzbot reported\
  \ a division by 0 bug in the netfilter nat code:\n\ndivide error: 0000 [#1] SMP\
  \ KASAN\nDumping ftrace buffer:\n    (ftrace buffer empty)\nModules linked in:\n\
  CPU: 1 PID: 4168 Comm: syzkaller034710 Not tainted 4.16.0-rc1+ #309\nHardware name:\
  \ Google Google Compute Engine/Google Compute Engine, BIOS\nGoogle 01/01/2011\n\
  RIP: 0010:nf_nat_l4proto_unique_tuple+0x291/0x530\nnet/netfilter/nf_nat_proto_common.c:88\n\
  RSP: 0018:ffff8801b2466778 EFLAGS: 00010246\nRAX: 000000000000f153 RBX: ffff8801b2466dd8\
  \ RCX: ffff8801b2466c7c\nRDX: 0000000000000000 RSI: ffff8801b2466c58 RDI: ffff8801db5293ac\n\
  RBP: ffff8801b24667d8 R08: ffff8801b8ba6dc0 R09: ffffffff88af5900\nR10: ffff8801b24666f0\
  \ R11: 0000000000000000 R12: 000000002990f153\nR13: 0000000000000001 R14: 0000000000000000\
  \ R15: ffff8801b2466c7c\nFS:  00000000017e3880(0000) GS:ffff8801db500000(0000) knlGS:0000000000000000\n\
  CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00000000208fdfe4 CR3: 00000001b5340002\
  \ CR4: 00000000001606e0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n\
  DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n\
  \  dccp_unique_tuple+0x40/0x50 net/netfilter/nf_nat_proto_dccp.c:30\n  get_unique_tuple+0xc28/0x1c10\
  \ net/netfilter/nf_nat_core.c:362\n  nf_nat_setup_info+0x1c2/0xe00 net/netfilter/nf_nat_core.c:406\n\
  \  nf_nat_redirect_ipv6+0x306/0x730 net/netfilter/nf_nat_redirect.c:124\n  redirect_tg6+0x7f/0xb0\
  \ net/netfilter/xt_REDIRECT.c:34\n  ip6t_do_table+0xc2a/0x1a30 net/ipv6/netfilter/ip6_tables.c:365\n\
  \  ip6table_nat_do_chain+0x65/0x80 net/ipv6/netfilter/ip6table_nat.c:41\n  nf_nat_ipv6_fn+0x594/0xa80\
  \ net/ipv6/netfilter/nf_nat_l3proto_ipv6.c:302\n  nf_nat_ipv6_local_fn+0x33/0x5d0\n\
  net/ipv6/netfilter/nf_nat_l3proto_ipv6.c:407\n  ip6table_nat_local_fn+0x2c/0x40\
  \ net/ipv6/netfilter/ip6table_nat.c:69\n  nf_hook_entry_hookfn include/linux/netfilter.h:120\
  \ [inline]\n  nf_hook_slow+0xba/0x1a0 net/netfilter/core.c:483\n  nf_hook include/linux/netfilter.h:243\
  \ [inline]\n  NF_HOOK include/linux/netfilter.h:286 [inline]\n  ip6_xmit+0x10ec/0x2260\
  \ net/ipv6/ip6_output.c:277\n  inet6_csk_xmit+0x2fc/0x580 net/ipv6/inet6_connection_sock.c:139\n\
  \  dccp_transmit_skb+0x9ac/0x10f0 net/dccp/output.c:142\n  dccp_connect+0x369/0x670\
  \ net/dccp/output.c:564\n  dccp_v6_connect+0xe17/0x1bf0 net/dccp/ipv6.c:946\n  __inet_stream_connect+0x2d4/0xf00\
  \ net/ipv4/af_inet.c:620\n  inet_stream_connect+0x58/0xa0 net/ipv4/af_inet.c:684\n\
  \  SYSC_connect+0x213/0x4a0 net/socket.c:1639\n  SyS_connect+0x24/0x30 net/socket.c:1620\n\
  \  do_syscall_64+0x282/0x940 arch/x86/entry/common.c:287\n  entry_SYSCALL_64_after_hwframe+0x26/0x9b\n\
  RIP: 0033:0x441c69\nRSP: 002b:00007ffe50cc0be8 EFLAGS: 00000217 ORIG_RAX: 000000000000002a\n\
  RAX: ffffffffffffffda RBX: ffffffffffffffff RCX: 0000000000441c69\nRDX: 000000000000001c\
  \ RSI: 00000000208fdfe4 RDI: 0000000000000003\nRBP: 00000000006cc018 R08: 0000000000000000\
  \ R09: 0000000000000000\nR10: 0000000000000538 R11: 0000000000000217 R12: 0000000000403590\n\
  R13: 0000000000403620 R14: 0000000000000000 R15: 0000000000000000\nCode: 48 89 f0\
  \ 83 e0 07 83 c0 01 38 d0 7c 08 84 d2 0f 85 46 02 00 00 48 8b\n45 c8 44 0f b7 20\
  \ e8 88 97 04 fd 31 d2 41 0f b7 c4 4c 89 f9 <41> f7 f6 48\nc1 e9 03 48 b8 00 00\
  \ 00 00 00 fc ff df 0f b6 0c 01\nRIP: nf_nat_l4proto_unique_tuple+0x291/0x530\n\
  net/netfilter/nf_nat_proto_common.c:88 RSP: ffff8801b2466778\n\nThe problem is that\
  \ currently we don't have any check on the\nconfigured port range. A port range\
  \ == -1 triggers the bug, while\nother negative values may require a very long time\
  \ to complete the\nfollowing loop.\n\nThis commit addresses the issue swapping the\
  \ two ends on negative\nranges. The check is performed in nf_nat_l4proto_unique_tuple()\
  \ since\nthe nft nat loads the port values from nft registers at runtime.\n\nv1\
  \ -> v2: use the correct 'Fixes' tag\nv2 -> v3: update commit message, drop unneeded\
  \ READ_ONCE()\n\nFixes: 5b1158e909ec (\"[NETFILTER]: Add NAT support for nf_conntrack\"\
  )\nReported-by: syzbot+8012e198bd037f4871e5@syzkaller.appspotmail.com\nSigned-off-by:\
  \ Paolo Abeni <pabeni@redhat.com>\nSigned-off-by: Pablo Neira Ayuso <pablo@netfilter.org>\n"
submodule:
- net/netfilter
hunk_count: 2
covered_count: 2
