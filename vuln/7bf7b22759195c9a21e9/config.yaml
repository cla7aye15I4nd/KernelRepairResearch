id: 7bf7b22759195c9a21e9
bug_link: https://syzkaller.appspot.com/bug?extid=7bf7b22759195c9a21e9
title: 'UBSAN: shift-out-of-bounds in nl802154_new_interface'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 848e5d66fa3105b4136c95ddbc5654e9c43ba7d7
fix_commit: 451dc48c806a7ce9fbec5e7a24ccf4b2c936e834
datetime: '2021-11-16T18:02:46+01:00'
fix_commit_message: 'net: ieee802154: handle iftypes as u32


  This patch fixes an issue that an u32 netlink value is handled as a

  signed enum value which doesn''t fit into the range of u32 netlink type.

  If it''s handled as -1 value some BIT() evaluation ends in a

  shift-out-of-bounds issue. To solve the issue we set the to u32 max which

  is s32 "-1" value to keep backwards compatibility and let the followed enum

  values start counting at 0. This brings the compiler to never handle the

  enum as signed and a check if the value is above NL802154_IFTYPE_MAX should

  filter -1 out.


  Fixes: f3ea5e44231a ("ieee802154: add new interface command")

  Signed-off-by: Alexander Aring <aahringo@redhat.com>

  Link: https://lore.kernel.org/r/20211112030916.685793-1-aahringo@redhat.com

  Signed-off-by: Stefan Schmidt <stefan@datenfreihafen.org>

  '
submodule:
- include/net
hunk_count: 2
covered_count: 0
