id: 5c04210f7c7f897c1e7f
bug_link: https://syzkaller.appspot.com/bug?extid=5c04210f7c7f897c1e7f
title: kernel BUG in end_buffer_async_write
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: b9e4bc1046d20e0623a80660ef8627448056f817
fix_commit: 5bc09b397cbf1221f8a8aacb1152650c9195b02b
datetime: '2024-02-07T21:20:37-08:00'
fix_commit_message: 'nilfs2: fix potential bug in end_buffer_async_write


  According to a syzbot report, end_buffer_async_write(), which handles the

  completion of block device writes, may detect abnormal condition of the

  buffer async_write flag and cause a BUG_ON failure when using nilfs2.


  Nilfs2 itself does not use end_buffer_async_write().  But, the async_write

  flag is now used as a marker by commit 7f42ec394156 ("nilfs2: fix issue

  with race condition of competition between segments for dirty blocks") as

  a means of resolving double list insertion of dirty blocks in

  nilfs_lookup_dirty_data_buffers() and nilfs_lookup_node_buffers() and the

  resulting crash.


  This modification is safe as long as it is used for file data and b-tree

  node blocks where the page caches are independent.  However, it was

  irrelevant and redundant to also introduce async_write for segment summary

  and super root blocks that share buffers with the backing device.  This

  led to the possibility that the BUG_ON check in end_buffer_async_write

  would fail as described above, if independent writebacks of the backing

  device occurred in parallel.


  The use of async_write for segment summary buffers has already been

  removed in a previous change.


  Fix this issue by removing the manipulation of the async_write flag for

  the remaining super root block buffer.


  Link: https://lkml.kernel.org/r/20240203161645.4992-1-konishi.ryusuke@gmail.com

  Fixes: 7f42ec394156 ("nilfs2: fix issue with race condition of competition between
  segments for dirty blocks")

  Signed-off-by: Ryusuke Konishi <konishi.ryusuke@gmail.com>

  Reported-by: syzbot+5c04210f7c7f897c1e7f@syzkaller.appspotmail.com

  Closes: https://lkml.kernel.org/r/00000000000019a97c05fd42f8c8@google.com

  Cc: <stable@vger.kernel.org>

  Signed-off-by: Andrew Morton <akpm@linux-foundation.org>

  '
submodule:
- fs/nilfs2
hunk_count: 6
covered_count: 0
