id: 7feb8de6b4d6bf810cf098bef942cc387e79d0ad
bug_link: https://syzkaller.appspot.com/bug?extid=7feb8de6b4d6bf810cf098bef942cc387e79d0ad
title: possible deadlock in snd_seq_deliver_event
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 79fb0518fec8c8b4ea7f1729f54f293724b3dbb0
fix_commit: 1f20f9ff57ca23b9f5502fca85ce3977e8496cb1
datetime: '2017-10-31T09:09:10+01:00'
fix_commit_message: 'ALSA: seq: Fix nested rwsem annotation for lockdep splat


  syzkaller reported the lockdep splat due to the possible deadlock of

  grp->list_mutex of each sequencer client object.  Actually this is

  rather a false-positive report due to the missing nested lock

  annotations.  The sequencer client may deliver the event directly to

  another client which takes another own lock.


  For addressing this issue, this patch replaces the simple down_read()

  with down_read_nested().  As a lock subclass, the already existing

  "hop" can be re-used, which indicates the depth of the call.


  Reference: http://lkml.kernel.org/r/089e082686ac9b482e055c832617@google.com

  Reported-by: syzbot <bot+7feb8de6b4d6bf810cf098bef942cc387e79d0ad@syzkaller.appspotmail.com>

  Reported-by: Dmitry Vyukov <dvyukov@google.com>

  Cc: <stable@vger.kernel.org>

  Signed-off-by: Takashi Iwai <tiwai@suse.de>

  '
submodule:
- sound/core/seq
hunk_count: 1
covered_count: 1
