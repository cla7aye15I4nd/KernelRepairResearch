id: 96cfd2b22b3213646a93
bug_link: https://syzkaller.appspot.com/bug?extid=96cfd2b22b3213646a93
title: 'KASAN: null-ptr-deref Read in filp_close'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: accefff5b547a9a1d959c7e76ad539bf2480e78b
fix_commit: fec8a6a691033f2538cd46848f17f337f0739923
datetime: '2020-12-19T16:22:18+01:00'
fix_commit_message: "close_range: unshare all fds for CLOSE_RANGE_UNSHARE | CLOSE_RANGE_CLOEXEC\n\
  \nAfter introducing CLOSE_RANGE_CLOEXEC syzbot reported a crash when\nCLOSE_RANGE_CLOEXEC\
  \ is specified in conjunction with CLOSE_RANGE_UNSHARE.\nWhen CLOSE_RANGE_UNSHARE\
  \ is specified the caller will receive a private\nfile descriptor table in case\
  \ their file descriptor table is currently\nshared.\n\nFor the case where the caller\
  \ has requested all file descriptors to be\nactually closed via e.g. close_range(3,\
  \ ~0U, 0) the kernel knows that\nthe caller does not need any of the file descriptors\
  \ anymore and will\noptimize the close operation by only copying all files in the\
  \ range from\n0 to 3 and no others.\n\nHowever, if the caller requested CLOSE_RANGE_CLOEXEC\
  \ together with\nCLOSE_RANGE_UNSHARE the caller wants to still make use of the file\n\
  descriptors so the kernel needs to copy all of them and can't optimize.\n\nThe original\
  \ patch didn't account for this and thus could cause oopses\nas evidenced by the\
  \ syzbot report because it assumed that all fds had\nbeen copied. Fix this by handling\
  \ the CLOSE_RANGE_CLOEXEC case.\n\nsyzbot reported\n==================================================================\n\
  BUG: KASAN: null-ptr-deref in instrument_atomic_read include/linux/instrumented.h:71\
  \ [inline]\nBUG: KASAN: null-ptr-deref in atomic64_read include/asm-generic/atomic-instrumented.h:837\
  \ [inline]\nBUG: KASAN: null-ptr-deref in atomic_long_read include/asm-generic/atomic-long.h:29\
  \ [inline]\nBUG: KASAN: null-ptr-deref in filp_close+0x22/0x170 fs/open.c:1274\n\
  Read of size 8 at addr 0000000000000077 by task syz-executor511/8522\n\nCPU: 1 PID:\
  \ 8522 Comm: syz-executor511 Not tainted 5.10.0-syzkaller #0\nHardware name: Google\
  \ Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011\nCall Trace:\n\
  \ __dump_stack lib/dump_stack.c:79 [inline]\n dump_stack+0x107/0x163 lib/dump_stack.c:120\n\
  \ __kasan_report mm/kasan/report.c:549 [inline]\n kasan_report.cold+0x5/0x37 mm/kasan/report.c:562\n\
  \ check_memory_region_inline mm/kasan/generic.c:186 [inline]\n check_memory_region+0x13d/0x180\
  \ mm/kasan/generic.c:192\n instrument_atomic_read include/linux/instrumented.h:71\
  \ [inline]\n atomic64_read include/asm-generic/atomic-instrumented.h:837 [inline]\n\
  \ atomic_long_read include/asm-generic/atomic-long.h:29 [inline]\n filp_close+0x22/0x170\
  \ fs/open.c:1274\n close_files fs/file.c:402 [inline]\n put_files_struct fs/file.c:417\
  \ [inline]\n put_files_struct+0x1cc/0x350 fs/file.c:414\n exit_files+0x12a/0x170\
  \ fs/file.c:435\n do_exit+0xb4f/0x2a00 kernel/exit.c:818\n do_group_exit+0x125/0x310\
  \ kernel/exit.c:920\n get_signal+0x428/0x2100 kernel/signal.c:2792\n arch_do_signal_or_restart+0x2a8/0x1eb0\
  \ arch/x86/kernel/signal.c:811\n handle_signal_work kernel/entry/common.c:147 [inline]\n\
  \ exit_to_user_mode_loop kernel/entry/common.c:171 [inline]\n exit_to_user_mode_prepare+0x124/0x200\
  \ kernel/entry/common.c:201\n __syscall_exit_to_user_mode_work kernel/entry/common.c:291\
  \ [inline]\n syscall_exit_to_user_mode+0x19/0x50 kernel/entry/common.c:302\n entry_SYSCALL_64_after_hwframe+0x44/0xa9\n\
  RIP: 0033:0x447039\nCode: Unable to access opcode bytes at RIP 0x44700f.\nRSP: 002b:00007f1b1225cdb8\
  \ EFLAGS: 00000246 ORIG_RAX: 00000000000000ca\nRAX: 0000000000000001 RBX: 00000000006dbc28\
  \ RCX: 0000000000447039\nRDX: 00000000000f4240 RSI: 0000000000000081 RDI: 00000000006dbc2c\n\
  RBP: 00000000006dbc20 R08: 0000000000000000 R09: 0000000000000000\nR10: 0000000000000000\
  \ R11: 0000000000000246 R12: 00000000006dbc2c\nR13: 00007fff223b6bef R14: 00007f1b1225d9c0\
  \ R15: 00000000006dbc2c\n==================================================================\n\
  \nsyzbot has tested the proposed patch and the reproducer did not trigger any issue:\n\
  \nReported-and-tested-by: syzbot+96cfd2b22b3213646a93@syzkaller.appspotmail.com\n\
  \nTested on:\n\ncommit:         10f7cddd selftests/core: add regression test for\
  \ CLOSE_RAN..\ngit tree:       git://git.kernel.org/pub/scm/linux/kernel/git/brauner/linux.git\
  \ vfs\nkernel config:  https://syzkaller.appspot.com/x/.config?x=5d42216b510180e3\n\
  dashboard link: https://syzkaller.appspot.com/bug?extid=96cfd2b22b3213646a93\ncompiler:\
  \       gcc (GCC) 10.1.0-syz 20200507\n\nReported-by: syzbot+96cfd2b22b3213646a93@syzkaller.appspotmail.com\n\
  Fixes: 582f1fb6b721 (\"fs, close_range: add flag CLOSE_RANGE_CLOEXEC\")\nCc: Giuseppe\
  \ Scrivano <gscrivan@redhat.com>\nCc: linux-fsdevel@vger.kernel.org\nLink: https://lore.kernel.org/r/20201217213303.722643-1-christian.brauner@ubuntu.com\n\
  Signed-off-by: Christian Brauner <christian.brauner@ubuntu.com>\n"
submodule:
- fs
hunk_count: 1
covered_count: 0
