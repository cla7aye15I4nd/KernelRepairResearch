id: 47366a6b503c7edf6bbb
bug_link: https://syzkaller.appspot.com/bug?extid=47366a6b503c7edf6bbb
title: WARNING in diUnmount
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: c67235d08b2ea9673a2e7b80823f762e45942f5e
fix_commit: 6e2bda2c192d0244b5a78b787ef20aa10cb319b7
datetime: '2023-07-18T15:50:04-05:00'
fix_commit_message: "jfs: fix invalid free of JFS_IP(ipimap)->i_imap in diUnmount\n\
  \nsyzbot found an invalid-free in diUnmount:\n\nBUG: KASAN: double-free in slab_free\
  \ mm/slub.c:3661 [inline]\nBUG: KASAN: double-free in __kmem_cache_free+0x71/0x110\
  \ mm/slub.c:3674\nFree of addr ffff88806f410000 by task syz-executor131/3632\n\n\
  \ CPU: 0 PID: 3632 Comm: syz-executor131 Not tainted 6.1.0-rc7-syzkaller-00012-gca57f02295f1\
  \ #0\n Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google\
  \ 10/26/2022\n Call Trace:\n  <TASK>\n  __dump_stack lib/dump_stack.c:88 [inline]\n\
  \  dump_stack_lvl+0x1b1/0x28e lib/dump_stack.c:106\n  print_address_description+0x74/0x340\
  \ mm/kasan/report.c:284\n  print_report+0x107/0x1f0 mm/kasan/report.c:395\n  kasan_report_invalid_free+0xac/0xd0\
  \ mm/kasan/report.c:460\n  ____kasan_slab_free+0xfb/0x120\n  kasan_slab_free include/linux/kasan.h:177\
  \ [inline]\n  slab_free_hook mm/slub.c:1724 [inline]\n  slab_free_freelist_hook+0x12e/0x1a0\
  \ mm/slub.c:1750\n  slab_free mm/slub.c:3661 [inline]\n  __kmem_cache_free+0x71/0x110\
  \ mm/slub.c:3674\n  diUnmount+0xef/0x100 fs/jfs/jfs_imap.c:195\n  jfs_umount+0x108/0x370\
  \ fs/jfs/jfs_umount.c:63\n  jfs_put_super+0x86/0x190 fs/jfs/super.c:194\n  generic_shutdown_super+0x130/0x310\
  \ fs/super.c:492\n  kill_block_super+0x79/0xd0 fs/super.c:1428\n  deactivate_locked_super+0xa7/0xf0\
  \ fs/super.c:332\n  cleanup_mnt+0x494/0x520 fs/namespace.c:1186\n  task_work_run+0x243/0x300\
  \ kernel/task_work.c:179\n  exit_task_work include/linux/task_work.h:38 [inline]\n\
  \  do_exit+0x664/0x2070 kernel/exit.c:820\n  do_group_exit+0x1fd/0x2b0 kernel/exit.c:950\n\
  \  __do_sys_exit_group kernel/exit.c:961 [inline]\n  __se_sys_exit_group kernel/exit.c:959\
  \ [inline]\n  __x64_sys_exit_group+0x3b/0x40 kernel/exit.c:959\n  do_syscall_x64\
  \ arch/x86/entry/common.c:50 [inline]\n  do_syscall_64+0x3d/0xb0 arch/x86/entry/common.c:80\n\
  \  entry_SYSCALL_64_after_hwframe+0x63/0xcd\n[...]\n\nJFS_IP(ipimap)->i_imap is\
  \ not setting to NULL after free in diUnmount.\nIf jfs_remount() free JFS_IP(ipimap)->i_imap\
  \ but then failed at diMount().\nJFS_IP(ipimap)->i_imap will be freed once again.\n\
  Fix this problem by setting JFS_IP(ipimap)->i_imap to NULL after free.\n\nReported-by:\
  \ syzbot+90a11e6b1e810785c6ff@syzkaller.appspotmail.com\nSigned-off-by: Liu Shixin\
  \ <liushixin2@huawei.com>\nSigned-off-by: Dave Kleikamp <dave.kleikamp@oracle.com>\n"
submodule:
- fs/jfs
hunk_count: 1
covered_count: 1
