id: b53a709f04722ca12a3c
bug_link: https://syzkaller.appspot.com/bug?extid=b53a709f04722ca12a3c
title: 'BUG: unable to handle kernel NULL pointer dereference in htb_select_queue'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 93bde210c4341e79f0cd9cb160d889f4577e40b1
fix_commit: fb3a3e37de337ec2941c71ff0bcb83e701f3c9f4
datetime: '2021-03-11T18:30:32-08:00'
fix_commit_message: 'sch_htb: Fix offload cleanup in htb_destroy on htb_init failure


  htb_init may fail to do the offload if it''s not supported or if a

  runtime error happens when allocating direct qdiscs. In those cases

  TC_HTB_CREATE command is not sent to the driver, however, htb_destroy

  gets called anyway and attempts to send TC_HTB_DESTROY.


  It shouldn''t happen, because the driver didn''t receive TC_HTB_CREATE,

  and also because the driver may not support ndo_setup_tc at all, while

  q->offload is true, and htb_destroy mistakenly thinks the offload is

  supported. Trying to call ndo_setup_tc in the latter case will lead to a

  NULL pointer dereference.


  This commit fixes the issues with htb_destroy by deferring assignment of

  q->offload until after the TC_HTB_CREATE command. The necessary cleanup

  of the offload entities is already done in htb_init.


  Reported-by: syzbot+b53a709f04722ca12a3c@syzkaller.appspotmail.com

  Fixes: d03b195b5aa0 ("sch_htb: Hierarchical QoS hardware offload")

  Suggested-by: Eric Dumazet <eric.dumazet@gmail.com>

  Signed-off-by: Maxim Mikityanskiy <maximmi@nvidia.com>

  Reviewed-by: Tariq Toukan <tariqt@nvidia.com>

  Signed-off-by: David S. Miller <davem@davemloft.net>

  '
submodule:
- net/sched
hunk_count: 4
covered_count: 2
