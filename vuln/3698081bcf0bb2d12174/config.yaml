id: 3698081bcf0bb2d12174
bug_link: https://syzkaller.appspot.com/bug?extid=3698081bcf0bb2d12174
title: kernel BUG at fs/f2fs/segment.h:LINE!
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 6d7ab88a98c1b7a47c228f8ffb4f44d631eaf284
fix_commit: 6a257471fa42c8c9c04a875cd3a2a22db148e0f0
datetime: '2020-09-29T02:12:41-07:00'
fix_commit_message: "f2fs: fix to check segment boundary during SIT page readahead\n\
  \nAs syzbot reported:\n\nkernel BUG at fs/f2fs/segment.h:657!\ninvalid opcode: 0000\
  \ [#1] PREEMPT SMP KASAN\nCPU: 1 PID: 16220 Comm: syz-executor.0 Not tainted 5.9.0-rc5-syzkaller\
  \ #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google\
  \ 01/01/2011\nRIP: 0010:f2fs_ra_meta_pages+0xa51/0xdc0 fs/f2fs/segment.h:657\nCall\
  \ Trace:\n build_sit_entries fs/f2fs/segment.c:4195 [inline]\n f2fs_build_segment_manager+0x4b8a/0xa3c0\
  \ fs/f2fs/segment.c:4779\n f2fs_fill_super+0x377d/0x6b80 fs/f2fs/super.c:3633\n\
  \ mount_bdev+0x32e/0x3f0 fs/super.c:1417\n legacy_get_tree+0x105/0x220 fs/fs_context.c:592\n\
  \ vfs_get_tree+0x89/0x2f0 fs/super.c:1547\n do_new_mount fs/namespace.c:2875 [inline]\n\
  \ path_mount+0x1387/0x2070 fs/namespace.c:3192\n do_mount fs/namespace.c:3205 [inline]\n\
  \ __do_sys_mount fs/namespace.c:3413 [inline]\n __se_sys_mount fs/namespace.c:3390\
  \ [inline]\n __x64_sys_mount+0x27f/0x300 fs/namespace.c:3390\n do_syscall_64+0x2d/0x70\
  \ arch/x86/entry/common.c:46\n entry_SYSCALL_64_after_hwframe+0x44/0xa9\n\n@blkno\
  \ in f2fs_ra_meta_pages could exceed max segment count, causing panic\nin following\
  \ sanity check in current_sit_addr(), add check condition to\navoid this issue.\n\
  \nReported-by: syzbot+3698081bcf0bb2d12174@syzkaller.appspotmail.com\nSigned-off-by:\
  \ Chao Yu <yuchao0@huawei.com>\nSigned-off-by: Jaegeuk Kim <jaegeuk@kernel.org>\n"
submodule:
- fs/f2fs
hunk_count: 1
covered_count: 0
