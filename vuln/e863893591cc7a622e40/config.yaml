id: e863893591cc7a622e40
bug_link: https://syzkaller.appspot.com/bug?extid=e863893591cc7a622e40
title: 'KASAN: use-after-free Read in tipc_sk_filter_rcv'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 0b03a5ca8b14321366eec4a903922d2b46d585ff
fix_commit: 77d5ad4048fba5bd6e16f78498d4b41e5534b8f5
datetime: '2019-03-21T09:56:55-07:00'
fix_commit_message: "tipc: fix use-after-free in tipc_sk_filter_rcv\n\nskb free-ed\
  \ in:\n  1/ condition 1: tipc_sk_filter_rcv -> tipc_sk_proto_rcv\n  2/ condition\
  \ 2: tipc_sk_filter_rcv -> tipc_group_filter_msg\nThis leads to a \"use-after-free\"\
  \ access in the next condition.\n\nWe fix this by intializing the variable at declaration,\
  \ then it is safe\nto check this variable to continue processing if condition matches.\n\
  \nsyzbot report:\n\n==================================================================\n\
  BUG: KASAN: use-after-free in tipc_sk_filter_rcv+0x2166/0x34f0\n net/tipc/socket.c:2167\n\
  Read of size 4 at addr ffff88808ea58534 by task kworker/u4:0/7\n\nCPU: 0 PID: 7\
  \ Comm: kworker/u4:0 Not tainted 5.0.0+ #61\nHardware name: Google Google Compute\
  \ Engine/Google Compute Engine,\n BIOS Google 01/01/2011\nWorkqueue: tipc_send tipc_conn_send_work\n\
  Call Trace:\n __dump_stack lib/dump_stack.c:77 [inline]\n dump_stack+0x172/0x1f0\
  \ lib/dump_stack.c:113\n print_address_description.cold+0x7c/0x20d mm/kasan/report.c:187\n\
  \ kasan_report.cold+0x1b/0x40 mm/kasan/report.c:317\n __asan_report_load4_noabort+0x14/0x20\
  \ mm/kasan/generic_report.c:131\n tipc_sk_filter_rcv+0x2166/0x34f0 net/tipc/socket.c:2167\n\
  \ tipc_sk_enqueue net/tipc/socket.c:2254 [inline]\n tipc_sk_rcv+0xc45/0x25a0 net/tipc/socket.c:2305\n\
  \ tipc_topsrv_kern_evt+0x3b7/0x580 net/tipc/topsrv.c:610\n tipc_conn_send_to_sock+0x43e/0x5f0\
  \ net/tipc/topsrv.c:283\n tipc_conn_send_work+0x65/0x80 net/tipc/topsrv.c:303\n\
  \ process_one_work+0x98e/0x1790 kernel/workqueue.c:2269\n worker_thread+0x98/0xe40\
  \ kernel/workqueue.c:2415\n kthread+0x357/0x430 kernel/kthread.c:253\n ret_from_fork+0x3a/0x50\
  \ arch/x86/entry/entry_64.S:352\n\nReported-by: syzbot+e863893591cc7a622e40@syzkaller.appspotmail.com\n\
  Fixes: c55c8eda (\"tipc: smooth change between replicast and broadcast\")\nAcked-by:\
  \ Jon Maloy <jon.maloy@ericsson.com>\nSigned-off-by: Hoang Le <hoang.h.le@dektech.com.au>\n\
  Signed-off-by: David S. Miller <davem@davemloft.net>\n"
submodule:
- net/tipc
hunk_count: 2
covered_count: 2
