id: 9204e7399656300bf271
bug_link: https://syzkaller.appspot.com/bug?extid=9204e7399656300bf271
title: 'INFO: task hung in nfnetlink_rcv_msg (3)'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: a31d47be64b9b74f8cfedffe03e0a8a1f9e51f23
fix_commit: 5e29dc36bd5e2166b834ceb19990d9e68a734d7d
datetime: '2023-01-02T15:10:05+01:00'
fix_commit_message: 'netfilter: ipset: Rework long task execution when adding/deleting
  entries


  When adding/deleting large number of elements in one step in ipset, it can

  take a reasonable amount of time and can result in soft lockup errors. The

  patch 5f7b51bf09ba ("netfilter: ipset: Limit the maximal range of

  consecutive elements to add/delete") tried to fix it by limiting the max

  elements to process at all. However it was not enough, it is still possible

  that we get hung tasks. Lowering the limit is not reasonable, so the

  approach in this patch is as follows: rely on the method used at resizing

  sets and save the state when we reach a smaller internal batch limit,

  unlock/lock and proceed from the saved state. Thus we can avoid long

  continuous tasks and at the same time removed the limit to add/delete large

  number of elements in one step.


  The nfnl mutex is held during the whole operation which prevents one to

  issue other ipset commands in parallel.


  Fixes: 5f7b51bf09ba ("netfilter: ipset: Limit the maximal range of consecutive elements
  to add/delete")

  Reported-by: syzbot+9204e7399656300bf271@syzkaller.appspotmail.com

  Signed-off-by: Jozsef Kadlecsik <kadlec@netfilter.org>

  Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>

  '
submodule:
- include/linux/netfilter/ipset
- net/netfilter
hunk_count: 23
covered_count: 3
