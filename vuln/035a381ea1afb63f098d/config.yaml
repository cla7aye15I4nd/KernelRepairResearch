id: 035a381ea1afb63f098d
bug_link: https://syzkaller.appspot.com/bug?extid=035a381ea1afb63f098d
title: 'BUG: unable to handle kernel NULL pointer dereference in f2fs_stop_discard_thread'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 28fc4e9077ce59ab28c89c20dc6be5154473218f
fix_commit: 91586ce0d39a05f88795aa8814fb99b1387236b3
datetime: '2022-11-01T17:56:01-07:00'
fix_commit_message: "f2fs: fix to invalidate dcc->f2fs_issue_discard in error path\n\
  \nSyzbot reports a NULL pointer dereference issue as below:\n\n __refcount_add include/linux/refcount.h:193\
  \ [inline]\n __refcount_inc include/linux/refcount.h:250 [inline]\n refcount_inc\
  \ include/linux/refcount.h:267 [inline]\n get_task_struct include/linux/sched/task.h:110\
  \ [inline]\n kthread_stop+0x34/0x1c0 kernel/kthread.c:703\n f2fs_stop_discard_thread+0x3c/0x5c\
  \ fs/f2fs/segment.c:1638\n kill_f2fs_super+0x5c/0x194 fs/f2fs/super.c:4522\n deactivate_locked_super+0x70/0xe8\
  \ fs/super.c:332\n deactivate_super+0xd0/0xd4 fs/super.c:363\n cleanup_mnt+0x1f8/0x234\
  \ fs/namespace.c:1186\n __cleanup_mnt+0x20/0x30 fs/namespace.c:1193\n task_work_run+0xc4/0x14c\
  \ kernel/task_work.c:177\n exit_task_work include/linux/task_work.h:38 [inline]\n\
  \ do_exit+0x26c/0xbe0 kernel/exit.c:795\n do_group_exit+0x60/0xe8 kernel/exit.c:925\n\
  \ __do_sys_exit_group kernel/exit.c:936 [inline]\n __se_sys_exit_group kernel/exit.c:934\
  \ [inline]\n __wake_up_parent+0x0/0x40 kernel/exit.c:934\n __invoke_syscall arch/arm64/kernel/syscall.c:38\
  \ [inline]\n invoke_syscall arch/arm64/kernel/syscall.c:52 [inline]\n el0_svc_common+0x138/0x220\
  \ arch/arm64/kernel/syscall.c:142\n do_el0_svc+0x48/0x164 arch/arm64/kernel/syscall.c:206\n\
  \ el0_svc+0x58/0x150 arch/arm64/kernel/entry-common.c:636\n el0t_64_sync_handler+0x84/0xf0\
  \ arch/arm64/kernel/entry-common.c:654\n el0t_64_sync+0x18c/0x190 arch/arm64/kernel/entry.S:581\n\
  \nThe root cause of this issue is in error path of f2fs_start_discard_thread(),\n\
  it missed to invalidate dcc->f2fs_issue_discard, later kthread_stop() may\naccess\
  \ invalid pointer.\n\nFixes: 4d67490498ac (\"f2fs: Don't create discard thread when\
  \ device doesn't support realtime discard\")\nReported-by: syzbot+035a381ea1afb63f098d@syzkaller.appspotmail.com\n\
  Reported-by: syzbot+729c925c2d9fc495ddee@syzkaller.appspotmail.com\nSigned-off-by:\
  \ Chao Yu <chao@kernel.org>\nSigned-off-by: Jaegeuk Kim <jaegeuk@kernel.org>\n"
submodule:
- fs/f2fs
hunk_count: 1
covered_count: 0
