id: 305326672fed51b205f7
bug_link: https://syzkaller.appspot.com/bug?extid=305326672fed51b205f7
title: memory leak in rxrpc_lookup_local
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 924b171c29e14296eb0f5810a8060df22c3aa937
fix_commit: b8323f7288abd71794cd7b11a4c0a38b8637c8b5
datetime: '2021-01-28T13:12:14-08:00'
fix_commit_message: "rxrpc: Fix memory leak in rxrpc_lookup_local\n\nCommit 9ebeddef58c4\
  \ (\"rxrpc: rxrpc_peer needs to hold a ref on the rxrpc_local record\")\nThen release\
  \ ref in __rxrpc_put_peer and rxrpc_put_peer_locked.\n\n\tstruct rxrpc_peer *rxrpc_alloc_peer(struct\
  \ rxrpc_local *local, gfp_t gfp)\n\t-               peer->local = local;\n\t+  \
  \             peer->local = rxrpc_get_local(local);\n\nrxrpc_discard_prealloc also\
  \ need ref release in discarding.\n\nsyzbot report:\nBUG: memory leak\nunreferenced\
  \ object 0xffff8881080ddc00 (size 256):\n  comm \"syz-executor339\", pid 8462, jiffies\
  \ 4294942238 (age 12.350s)\n  hex dump (first 32 bytes):\n    00 00 00 00 00 00\
  \ 00 00 00 00 00 00 00 00 00 00  ................\n    00 00 00 00 0a 00 00 00 00\
  \ c0 00 08 81 88 ff ff  ................\n  backtrace:\n    [<000000002b6e495f>]\
  \ kmalloc include/linux/slab.h:552 [inline]\n    [<000000002b6e495f>] kzalloc include/linux/slab.h:682\
  \ [inline]\n    [<000000002b6e495f>] rxrpc_alloc_local net/rxrpc/local_object.c:79\
  \ [inline]\n    [<000000002b6e495f>] rxrpc_lookup_local+0x1c1/0x760 net/rxrpc/local_object.c:244\n\
  \    [<000000006b43a77b>] rxrpc_bind+0x174/0x240 net/rxrpc/af_rxrpc.c:149\n    [<00000000fd447a55>]\
  \ afs_open_socket+0xdb/0x200 fs/afs/rxrpc.c:64\n    [<000000007fd8867c>] afs_net_init+0x2b4/0x340\
  \ fs/afs/main.c:126\n    [<0000000063d80ec1>] ops_init+0x4e/0x190 net/core/net_namespace.c:152\n\
  \    [<00000000073c5efa>] setup_net+0xde/0x2d0 net/core/net_namespace.c:342\n  \
  \  [<00000000a6744d5b>] copy_net_ns+0x19f/0x3e0 net/core/net_namespace.c:483\n \
  \   [<0000000017d3aec3>] create_new_namespaces+0x199/0x4f0 kernel/nsproxy.c:110\n\
  \    [<00000000186271ef>] unshare_nsproxy_namespaces+0x9b/0x120 kernel/nsproxy.c:226\n\
  \    [<000000002de7bac4>] ksys_unshare+0x2fe/0x5c0 kernel/fork.c:2957\n    [<00000000349b12ba>]\
  \ __do_sys_unshare kernel/fork.c:3025 [inline]\n    [<00000000349b12ba>] __se_sys_unshare\
  \ kernel/fork.c:3023 [inline]\n    [<00000000349b12ba>] __x64_sys_unshare+0x12/0x20\
  \ kernel/fork.c:3023\n    [<000000006d178ef7>] do_syscall_64+0x2d/0x70 arch/x86/entry/common.c:46\n\
  \    [<00000000637076d4>] entry_SYSCALL_64_after_hwframe+0x44/0xa9\n\nFixes: 9ebeddef58c4\
  \ (\"rxrpc: rxrpc_peer needs to hold a ref on the rxrpc_local record\")\nSigned-off-by:\
  \ Takeshi Misawa <jeliantsurux@gmail.com>\nReported-and-tested-by: syzbot+305326672fed51b205f7@syzkaller.appspotmail.com\n\
  Signed-off-by: David Howells <dhowells@redhat.com>\nLink: https://lore.kernel.org/r/161183091692.3506637.3206605651502458810.stgit@warthog.procyon.org.uk\n\
  Signed-off-by: Jakub Kicinski <kuba@kernel.org>\n"
submodule:
- net/rxrpc
hunk_count: 1
covered_count: 0
