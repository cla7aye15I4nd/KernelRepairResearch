id: f0c4a4aba757549ae26c
bug_link: https://syzkaller.appspot.com/bug?extid=f0c4a4aba757549ae26c
title: 'WARNING: refcount bug in tipc_crypto_xmit'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: fd579a2ebbe4b7e6b388915a50d904e772a35c61
fix_commit: f29ccaa07cf3d35990f4d25028cc55470d29372b
datetime: '2025-05-29T12:07:26+02:00'
fix_commit_message: 'net: tipc: fix refcount warning in tipc_aead_encrypt


  syzbot reported a refcount warning [1] caused by calling get_net() on

  a network namespace that is being destroyed (refcount=0). This happens

  when a TIPC discovery timer fires during network namespace cleanup.


  The recently added get_net() call in commit e279024617134 ("net/tipc:

  fix slab-use-after-free Read in tipc_aead_encrypt_done") attempts to

  hold a reference to the network namespace. However, if the namespace

  is already being destroyed, its refcount might be zero, leading to the

  use-after-free warning.


  Replace get_net() with maybe_get_net(), which safely checks if the

  refcount is non-zero before incrementing it. If the namespace is being

  destroyed, return -ENODEV early, after releasing the bearer reference.


  [1]: https://lore.kernel.org/all/68342b55.a70a0220.253bc2.0091.GAE@google.com/T/#m12019cf9ae77e1954f666914640efa36d52704a2


  Reported-by: syzbot+f0c4a4aba757549ae26c@syzkaller.appspotmail.com

  Closes: https://lore.kernel.org/all/68342b55.a70a0220.253bc2.0091.GAE@google.com/T/#m12019cf9ae77e1954f666914640efa36d52704a2

  Fixes: e27902461713 ("net/tipc: fix slab-use-after-free Read in tipc_aead_encrypt_done")

  Signed-off-by: Charalampos Mitrodimas <charmitro@posteo.net>

  Reviewed-by: Tung Nguyen <tung.quang.nguyen@est.tech>

  Link: https://patch.msgid.link/20250527-net-tipc-warning-v2-1-df3dc398a047@posteo.net

  Signed-off-by: Paolo Abeni <pabeni@redhat.com>


  '
submodule:
- net/tipc
hunk_count: 1
covered_count: 1
