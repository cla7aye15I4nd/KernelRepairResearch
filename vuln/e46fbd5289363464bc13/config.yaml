id: e46fbd5289363464bc13
bug_link: https://syzkaller.appspot.com/bug?extid=e46fbd5289363464bc13
title: 'INFO: rcu detected stall in sys_close (5)'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 4e60de1e4769066aa9956c83545c8fa21847f326
fix_commit: 8c21ab1bae945686c602c5bfa4e3f3352c2452c5
datetime: '2023-08-31T11:21:52+02:00'
fix_commit_message: "net/sched: fq_pie: avoid stalls in fq_pie_timer()\n\nWhen setting\
  \ a high number of flows (limit being 65536),\nfq_pie_timer() is currently using\
  \ too much time as syzbot reported.\n\nAdd logic to yield the cpu every 2048 flows\
  \ (less than 150 usec\non debug kernels).\nIt should also help by not blocking qdisc\
  \ fast paths for too long.\nWorst case (65536 flows) would need 31 jiffies for a\
  \ complete scan.\n\nRelevant extract from syzbot report:\n\nrcu: INFO: rcu_preempt\
  \ detected expedited stalls on CPUs/tasks: { 0-.... } 2663 jiffies s: 873 root:\
  \ 0x1/.\nrcu: blocking rcu_node structures (internal RCU debug):\nSending NMI from\
  \ CPU 1 to CPUs 0:\nNMI backtrace for cpu 0\nCPU: 0 PID: 5177 Comm: syz-executor273\
  \ Not tainted 6.5.0-syzkaller-00453-g727dbda16b83 #0\nHardware name: Google Google\
  \ Compute Engine/Google Compute Engine, BIOS Google 07/26/2023\nRIP: 0010:check_kcov_mode\
  \ kernel/kcov.c:173 [inline]\nRIP: 0010:write_comp_data+0x21/0x90 kernel/kcov.c:236\n\
  Code: 2e 0f 1f 84 00 00 00 00 00 65 8b 05 01 b2 7d 7e 49 89 f1 89 c6 49 89 d2 81\
  \ e6 00 01 00 00 49 89 f8 65 48 8b 14 25 80 b9 03 00 <a9> 00 01 ff 00 74 0e 85 f6\
  \ 74 59 8b 82 04 16 00 00 85 c0 74 4f 8b\nRSP: 0018:ffffc90000007bb8 EFLAGS: 00000206\n\
  RAX: 0000000000000101 RBX: ffffc9000dc0d140 RCX: ffffffff885893b0\nRDX: ffff88807c075940\
  \ RSI: 0000000000000100 RDI: 0000000000000001\nRBP: 0000000000000000 R08: 0000000000000001\
  \ R09: 0000000000000000\nR10: 0000000000000000 R11: 0000000000000000 R12: ffffc9000dc0d178\n\
  R13: 0000000000000000 R14: 0000000000000000 R15: 0000000000000000\nFS:  0000555555d54380(0000)\
  \ GS:ffff8880b9800000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000\
  \ CR0: 0000000080050033\nCR2: 00007f6b442f6130 CR3: 000000006fe1c000 CR4: 00000000003506f0\n\
  DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000\
  \ DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n <NMI>\n </NMI>\n <IRQ>\n\
  \ pie_calculate_probability+0x480/0x850 net/sched/sch_pie.c:415\n fq_pie_timer+0x1da/0x4f0\
  \ net/sched/sch_fq_pie.c:387\n call_timer_fn+0x1a0/0x580 kernel/time/timer.c:1700\n\
  \nFixes: ec97ecf1ebe4 (\"net: sched: add Flow Queue PIE packet scheduler\")\nLink:\
  \ https://lore.kernel.org/lkml/00000000000017ad3f06040bf394@google.com/\nReported-by:\
  \ syzbot+e46fbd5289363464bc13@syzkaller.appspotmail.com\nSigned-off-by: Eric Dumazet\
  \ <edumazet@google.com>\nReviewed-by: Michal Kubiak <michal.kubiak@intel.com>\n\
  Reviewed-by: Jamal Hadi Salim <jhs@mojatatu.com>\nLink: https://lore.kernel.org/r/20230829123541.3745013-1-edumazet@google.com\n\
  Signed-off-by: Paolo Abeni <pabeni@redhat.com>\n"
submodule:
- net/sched
hunk_count: 2
covered_count: 2
