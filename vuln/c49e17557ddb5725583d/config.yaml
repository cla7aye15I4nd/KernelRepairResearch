id: c49e17557ddb5725583d
bug_link: https://syzkaller.appspot.com/bug?extid=c49e17557ddb5725583d
title: possible deadlock in bpf_trace_printk
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 66d6a4bf94f402301ce7832072705e23d5948761
fix_commit: 05b24ff9b2cfabfcfd951daaa915a036ab53c9e1
datetime: '2022-09-21T18:05:44-07:00'
fix_commit_message: "bpf: Prevent bpf program recursion for raw tracepoint probes\n\
  \nWe got report from sysbot [1] about warnings that were caused by\nbpf program\
  \ attached to contention_begin raw tracepoint triggering\nthe same tracepoint by\
  \ using bpf_trace_printk helper that takes\ntrace_printk_lock lock.\n\n Call Trace:\n\
  \  <TASK>\n  ? trace_event_raw_event_bpf_trace_printk+0x5f/0x90\n  bpf_trace_printk+0x2b/0xe0\n\
  \  bpf_prog_a9aec6167c091eef_prog+0x1f/0x24\n  bpf_trace_run2+0x26/0x90\n  native_queued_spin_lock_slowpath+0x1c6/0x2b0\n\
  \  _raw_spin_lock_irqsave+0x44/0x50\n  bpf_trace_printk+0x3f/0xe0\n  bpf_prog_a9aec6167c091eef_prog+0x1f/0x24\n\
  \  bpf_trace_run2+0x26/0x90\n  native_queued_spin_lock_slowpath+0x1c6/0x2b0\n  _raw_spin_lock_irqsave+0x44/0x50\n\
  \  bpf_trace_printk+0x3f/0xe0\n  bpf_prog_a9aec6167c091eef_prog+0x1f/0x24\n  bpf_trace_run2+0x26/0x90\n\
  \  native_queued_spin_lock_slowpath+0x1c6/0x2b0\n  _raw_spin_lock_irqsave+0x44/0x50\n\
  \  bpf_trace_printk+0x3f/0xe0\n  bpf_prog_a9aec6167c091eef_prog+0x1f/0x24\n  bpf_trace_run2+0x26/0x90\n\
  \  native_queued_spin_lock_slowpath+0x1c6/0x2b0\n  _raw_spin_lock_irqsave+0x44/0x50\n\
  \  __unfreeze_partials+0x5b/0x160\n  ...\n\nThe can be reproduced by attaching bpf\
  \ program as raw tracepoint on\ncontention_begin tracepoint. The bpf prog calls\
  \ bpf_trace_printk\nhelper. Then by running perf bench the spin lock code is forced\
  \ to\ntake slow path and call contention_begin tracepoint.\n\nFixing this by skipping\
  \ execution of the bpf program if it's\nalready running, Using bpf prog 'active'\
  \ field, which is being\ncurrently used by trampoline programs for the same reason.\n\
  \nMoving bpf_prog_inc_misses_counter to syscall.c because\ntrampoline.c is compiled\
  \ in just for CONFIG_BPF_JIT option.\n\nReviewed-by: Stanislav Fomichev <sdf@google.com>\n\
  Reported-by: syzbot+2251879aa068ad9c960d@syzkaller.appspotmail.com\n[1] https://lore.kernel.org/bpf/YxhFe3EwqchC%2FfYf@krava/T/#t\n\
  Signed-off-by: Jiri Olsa <jolsa@kernel.org>\nLink: https://lore.kernel.org/r/20220916071914.7156-1-jolsa@kernel.org\n\
  Signed-off-by: Alexei Starovoitov <ast@kernel.org>\n"
submodule:
- include/linux
- kernel/bpf
- kernel/trace
hunk_count: 7
covered_count: 0
