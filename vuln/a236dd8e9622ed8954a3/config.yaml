id: a236dd8e9622ed8954a3
bug_link: https://syzkaller.appspot.com/bug?extid=a236dd8e9622ed8954a3
title: 'KASAN: use-after-free Write in sctp_auth_shkey_hold (2)'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 2568a7e0832ee30b0a351016d03062ab4e0e0a3f
fix_commit: 022152aaebe116a25c39818a07e175a8cd3c1e11
datetime: '2022-09-30T12:36:40+01:00'
fix_commit_message: "sctp: handle the error returned from sctp_auth_asoc_init_active_key\n\
  \nWhen it returns an error from sctp_auth_asoc_init_active_key(), the\nactive_key\
  \ is actually not updated. The old sh_key will be freeed\nwhile it's still used\
  \ as active key in asoc. Then an use-after-free\nwill be triggered when sending\
  \ patckets, as found by syzbot:\n\n  sctp_auth_shkey_hold+0x22/0xa0 net/sctp/auth.c:112\n\
  \  sctp_set_owner_w net/sctp/socket.c:132 [inline]\n  sctp_sendmsg_to_asoc+0xbd5/0x1a20\
  \ net/sctp/socket.c:1863\n  sctp_sendmsg+0x1053/0x1d50 net/sctp/socket.c:2025\n\
  \  inet_sendmsg+0x99/0xe0 net/ipv4/af_inet.c:819\n  sock_sendmsg_nosec net/socket.c:714\
  \ [inline]\n  sock_sendmsg+0xcf/0x120 net/socket.c:734\n\nThis patch is to fix it\
  \ by not replacing the sh_key when it returns\nerrors from sctp_auth_asoc_init_active_key()\
  \ in sctp_auth_set_key().\nFor sctp_auth_set_active_key(), old active_key_id will\
  \ be set back\nto asoc->active_key_id when the same thing happens.\n\nFixes: 58acd1009226\
  \ (\"sctp: update active_key for asoc when old key is being replaced\")\nReported-by:\
  \ syzbot+a236dd8e9622ed8954a3@syzkaller.appspotmail.com\nSigned-off-by: Xin Long\
  \ <lucien.xin@gmail.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>\n"
submodule:
- net/sctp
hunk_count: 2
covered_count: 2
