id: cdb5dd11c97cc532efad
bug_link: https://syzkaller.appspot.com/bug?extid=cdb5dd11c97cc532efad
title: 'KASAN: use-after-free Read in remove_wait_queue (3)'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: fb3b0673b7d5b477ed104949450cd511337ba3c6
fix_commit: a06247c6804f1a7c86a2e5398a4c1f1db1471848
datetime: '2022-01-18T12:09:57+01:00'
fix_commit_message: 'psi: Fix uaf issue when psi trigger is destroyed while being
  polled


  With write operation on psi files replacing old trigger with a new one,

  the lifetime of its waitqueue is totally arbitrary. Overwriting an

  existing trigger causes its waitqueue to be freed and pending poll()

  will stumble on trigger->event_wait which was destroyed.

  Fix this by disallowing to redefine an existing psi trigger. If a write

  operation is used on a file descriptor with an already existing psi

  trigger, the operation will fail with EBUSY error.

  Also bypass a check for psi_disabled in the psi_trigger_destroy as the

  flag can be flipped after the trigger is created, leading to a memory

  leak.


  Fixes: 0e94682b73bf ("psi: introduce psi monitor")

  Reported-by: syzbot+cdb5dd11c97cc532efad@syzkaller.appspotmail.com

  Suggested-by: Linus Torvalds <torvalds@linux-foundation.org>

  Analyzed-by: Eric Biggers <ebiggers@kernel.org>

  Signed-off-by: Suren Baghdasaryan <surenb@google.com>

  Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>

  Reviewed-by: Eric Biggers <ebiggers@google.com>

  Acked-by: Johannes Weiner <hannes@cmpxchg.org>

  Cc: stable@vger.kernel.org

  Link: https://lore.kernel.org/r/20220111232309.1786347-1-surenb@google.com

  '
submodule:
- Documentation/accounting
- include/linux
- kernel/cgroup
- kernel/sched
hunk_count: 13
covered_count: 5
