id: 0fecc032fa134afd49df
bug_link: https://syzkaller.appspot.com/bug?extid=0fecc032fa134afd49df
title: WARNING in btrfs_put_transaction (2)
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 9d274c19a71b3a276949933859610721a453946b
fix_commit: fb33eb2ef0d88e75564983ef057b44c5b7e4fded
datetime: '2024-06-05T18:06:54+02:00'
fix_commit_message: 'btrfs: fix leak of qgroup extent records after transaction abort


  Qgroup extent records are created when delayed ref heads are created and

  then released after accounting extents at btrfs_qgroup_account_extents(),

  called during the transaction commit path.


  If a transaction is aborted we free the qgroup records by calling

  btrfs_qgroup_destroy_extent_records() at btrfs_destroy_delayed_refs(),

  unless we don''t have delayed references. We are incorrectly assuming

  that no delayed references means we don''t have qgroup extents records.


  We can currently have no delayed references because we ran them all

  during a transaction commit and the transaction was aborted after that

  due to some error in the commit path.


  So fix this by ensuring we btrfs_qgroup_destroy_extent_records() at

  btrfs_destroy_delayed_refs() even if we don''t have any delayed references.


  Reported-by: syzbot+0fecc032fa134afd49df@syzkaller.appspotmail.com

  Link: https://lore.kernel.org/linux-btrfs/0000000000004e7f980619f91835@google.com/

  Fixes: 81f7eb00ff5b ("btrfs: destroy qgroup extent records on transaction abort")

  CC: stable@vger.kernel.org # 6.1+

  Reviewed-by: Josef Bacik <josef@toxicpanda.com>

  Reviewed-by: Qu Wenruo <wqu@suse.com>

  Signed-off-by: Filipe Manana <fdmanana@suse.com>

  Signed-off-by: David Sterba <dsterba@suse.com>

  '
submodule:
- fs/btrfs
hunk_count: 1
covered_count: 0
