id: 92c5daf9a23f04ccfc99
bug_link: https://syzkaller.appspot.com/bug?extid=92c5daf9a23f04ccfc99
title: 'BUG: assuming non migratable context at ./include/linux/filter.h:LINE'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: dd500e4aecf25e48e874ca7628697969df679493
fix_commit: 17ce3e5949bc37557305ad46316f41c7875d6366
datetime: '2025-07-23T18:58:03-07:00'
fix_commit_message: "bpf: Disable migration in nf_hook_run_bpf().\n\nsyzbot reported\
  \ that the netfilter bpf prog can be called without\nmigration disabled in xmit\
  \ path.\n\nThen the assertion in __bpf_prog_run() fails, triggering the splat\n\
  below. [0]\n\nLet's use bpf_prog_run_pin_on_cpu() in nf_hook_run_bpf().\n\n[0]:\n\
  BUG: assuming non migratable context at ./include/linux/filter.h:703\nin_atomic():\
  \ 0, irqs_disabled(): 0, migration_disabled() 0 pid: 5829, name: sshd-session\n\
  3 locks held by sshd-session/5829:\n #0: ffff88807b4e4218 (sk_lock-AF_INET){+.+.}-{0:0},\
  \ at: lock_sock include/net/sock.h:1667 [inline]\n #0: ffff88807b4e4218 (sk_lock-AF_INET){+.+.}-{0:0},\
  \ at: tcp_sendmsg+0x20/0x50 net/ipv4/tcp.c:1395\n #1: ffffffff8e5c4e00 (rcu_read_lock){....}-{1:3},\
  \ at: rcu_lock_acquire include/linux/rcupdate.h:331 [inline]\n #1: ffffffff8e5c4e00\
  \ (rcu_read_lock){....}-{1:3}, at: rcu_read_lock include/linux/rcupdate.h:841 [inline]\n\
  \ #1: ffffffff8e5c4e00 (rcu_read_lock){....}-{1:3}, at: __ip_queue_xmit+0x69/0x26c0\
  \ net/ipv4/ip_output.c:470\n #2: ffffffff8e5c4e00 (rcu_read_lock){....}-{1:3}, at:\
  \ rcu_lock_acquire include/linux/rcupdate.h:331 [inline]\n #2: ffffffff8e5c4e00\
  \ (rcu_read_lock){....}-{1:3}, at: rcu_read_lock include/linux/rcupdate.h:841 [inline]\n\
  \ #2: ffffffff8e5c4e00 (rcu_read_lock){....}-{1:3}, at: nf_hook+0xb2/0x680 include/linux/netfilter.h:241\n\
  CPU: 0 UID: 0 PID: 5829 Comm: sshd-session Not tainted 6.16.0-rc6-syzkaller-00002-g155a3c003e55\
  \ #0 PREEMPT(full)\nHardware name: Google Google Compute Engine/Google Compute Engine,\
  \ BIOS Google 05/07/2025\nCall Trace:\n <TASK>\n __dump_stack lib/dump_stack.c:94\
  \ [inline]\n dump_stack_lvl+0x16c/0x1f0 lib/dump_stack.c:120\n __cant_migrate kernel/sched/core.c:8860\
  \ [inline]\n __cant_migrate+0x1c7/0x250 kernel/sched/core.c:8834\n __bpf_prog_run\
  \ include/linux/filter.h:703 [inline]\n bpf_prog_run include/linux/filter.h:725\
  \ [inline]\n nf_hook_run_bpf+0x83/0x1e0 net/netfilter/nf_bpf_link.c:20\n nf_hook_entry_hookfn\
  \ include/linux/netfilter.h:157 [inline]\n nf_hook_slow+0xbb/0x200 net/netfilter/core.c:623\n\
  \ nf_hook+0x370/0x680 include/linux/netfilter.h:272\n NF_HOOK_COND include/linux/netfilter.h:305\
  \ [inline]\n ip_output+0x1bc/0x2a0 net/ipv4/ip_output.c:433\n dst_output include/net/dst.h:459\
  \ [inline]\n ip_local_out net/ipv4/ip_output.c:129 [inline]\n __ip_queue_xmit+0x1d7d/0x26c0\
  \ net/ipv4/ip_output.c:527\n __tcp_transmit_skb+0x2686/0x3e90 net/ipv4/tcp_output.c:1479\n\
  \ tcp_transmit_skb net/ipv4/tcp_output.c:1497 [inline]\n tcp_write_xmit+0x1274/0x84e0\
  \ net/ipv4/tcp_output.c:2838\n __tcp_push_pending_frames+0xaf/0x390 net/ipv4/tcp_output.c:3021\n\
  \ tcp_push+0x225/0x700 net/ipv4/tcp.c:759\n tcp_sendmsg_locked+0x1870/0x42b0 net/ipv4/tcp.c:1359\n\
  \ tcp_sendmsg+0x2e/0x50 net/ipv4/tcp.c:1396\n inet_sendmsg+0xb9/0x140 net/ipv4/af_inet.c:851\n\
  \ sock_sendmsg_nosec net/socket.c:712 [inline]\n __sock_sendmsg net/socket.c:727\
  \ [inline]\n sock_write_iter+0x4aa/0x5b0 net/socket.c:1131\n new_sync_write fs/read_write.c:593\
  \ [inline]\n vfs_write+0x6c7/0x1150 fs/read_write.c:686\n ksys_write+0x1f8/0x250\
  \ fs/read_write.c:738\n do_syscall_x64 arch/x86/entry/syscall_64.c:63 [inline]\n\
  \ do_syscall_64+0xcd/0x4c0 arch/x86/entry/syscall_64.c:94\n entry_SYSCALL_64_after_hwframe+0x77/0x7f\n\
  RIP: 0033:0x7fe7d365d407\nCode: 48 89 fa 4c 89 df e8 38 aa 00 00 8b 93 08 03 00\
  \ 00 59 5e 48 83 f8 fc 74 1a 5b c3 0f 1f 84 00 00 00 00 00 48 8b 44 24 10 0f 05\
  \ <5b> c3 0f 1f 80 00 00 00 00 83 e2 39 83 fa 08 75 de e8 23 ff ff ff\nRSP:\n\n\
  Fixes: fd9c663b9ad67 (\"bpf: minimal support for programs hooked into netfilter\
  \ framework\")\nReported-by: syzbot+40f772d37250b6d10efc@syzkaller.appspotmail.com\n\
  Closes: https://lore.kernel.org/all/6879466d.a00a0220.3af5df.0022.GAE@google.com/\n\
  Signed-off-by: Kuniyuki Iwashima <kuniyu@google.com>\nSigned-off-by: Martin KaFai\
  \ Lau <martin.lau@kernel.org>\nTested-by: syzbot+40f772d37250b6d10efc@syzkaller.appspotmail.com\n\
  Acked-by: Florian Westphal <fw@strlen.de>\nLink: https://patch.msgid.link/20250722224041.112292-1-kuniyu@google.com\n"
submodule:
- net/netfilter
hunk_count: 1
covered_count: 1
