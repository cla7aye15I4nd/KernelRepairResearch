id: b825d87fe2d043e3e652
bug_link: https://syzkaller.appspot.com/bug?extid=b825d87fe2d043e3e652
title: possible deadlock in sco_conn_del
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 2910431ab0e500dfc5df12299bb15eef0f30b43e
fix_commit: a2ac591cb4d83e1f2d4b4adb3c14b2c79764650a
datetime: '2023-05-19T15:37:45-07:00'
fix_commit_message: 'Bluetooth: Fix UAF in hci_conn_hash_flush again


  Commit 06149746e720 ("Bluetooth: hci_conn: Add support for linking

  multiple hcon") reintroduced a previously fixed bug [1] ("KASAN:

  slab-use-after-free Read in hci_conn_hash_flush"). This bug was

  originally fixed by commit 5dc7d23e167e ("Bluetooth: hci_conn: Fix

  possible UAF").


  The hci_conn_unlink function was added to avoid invalidating the link

  traversal caused by successive hci_conn_del operations releasing extra

  connections. However, currently hci_conn_unlink itself also releases

  extra connections, resulted in the reintroduced bug.


  This patch follows a more robust solution for cleaning up all

  connections, by repeatedly removing the first connection until there are

  none left. This approach does not rely on the inner workings of

  hci_conn_del and ensures proper cleanup of all connections.


  Meanwhile, we need to make sure that hci_conn_del never fails. Indeed it

  doesn''t, as it now always returns zero. To make this a bit clearer, this

  patch also changes its return type to void.


  Reported-by: syzbot+8bb72f86fc823817bc5d@syzkaller.appspotmail.com

  Closes: https://lore.kernel.org/linux-bluetooth/000000000000aa920505f60d25ad@google.com/

  Fixes: 06149746e720 ("Bluetooth: hci_conn: Add support for linking multiple hcon")

  Signed-off-by: Ruihan Li <lrh2000@pku.edu.cn>

  Co-developed-by: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>

  Signed-off-by: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>

  '
submodule:
- include/net/bluetooth
- net/bluetooth
hunk_count: 5
covered_count: 1
