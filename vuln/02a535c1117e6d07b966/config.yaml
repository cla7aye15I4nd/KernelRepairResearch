id: 02a535c1117e6d07b966
bug_link: https://syzkaller.appspot.com/bug?extid=02a535c1117e6d07b966
title: 'KCSAN: data-race in vm_area_dup / vma_interval_tree_remove (2)'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 9ebcfadb0610322ac537dd7aa5d9cbc2b2894c68
fix_commit: cda099b37d7165fc73a63961739acf026444cde2
datetime: '2020-06-29T12:04:47-07:00'
fix_commit_message: "fork: Annotate a data race in vm_area_dup()\n\nstruct vm_area_struct\
  \ could be accessed concurrently as noticed by\nKCSAN,\n\n write to 0xffff9cf8bba08ad8\
  \ of 8 bytes by task 14263 on cpu 35:\n  vma_interval_tree_insert+0x101/0x150:\n\
  \  rb_insert_augmented_cached at include/linux/rbtree_augmented.h:58\n  (inlined\
  \ by) vma_interval_tree_insert at mm/interval_tree.c:23\n  __vma_link_file+0x6e/0xe0\n\
  \  __vma_link_file at mm/mmap.c:629\n  vma_link+0xa2/0x120\n  mmap_region+0x753/0xb90\n\
  \  do_mmap+0x45c/0x710\n  vm_mmap_pgoff+0xc0/0x130\n  ksys_mmap_pgoff+0x1d1/0x300\n\
  \  __x64_sys_mmap+0x33/0x40\n  do_syscall_64+0x91/0xc44\n  entry_SYSCALL_64_after_hwframe+0x49/0xbe\n\
  \n read to 0xffff9cf8bba08a80 of 200 bytes by task 14262 on cpu 122:\n  vm_area_dup+0x6a/0xe0\n\
  \  vm_area_dup at kernel/fork.c:362\n  __split_vma+0x72/0x2a0\n  __split_vma at\
  \ mm/mmap.c:2661\n  split_vma+0x5a/0x80\n  mprotect_fixup+0x368/0x3f0\n  do_mprotect_pkey+0x263/0x420\n\
  \  __x64_sys_mprotect+0x51/0x70\n  do_syscall_64+0x91/0xc44\n  entry_SYSCALL_64_after_hwframe+0x49/0xbe\n\
  \nvm_area_dup() blindly copies all fields of original VMA to the new one.\nThis\
  \ includes coping vm_area_struct::shared.rb which is normally\nprotected by i_mmap_lock.\
  \ But this is fine because the read value will\nbe overwritten on the following\
  \ __vma_link_file() under proper\nprotection. Thus, mark it as an intentional data\
  \ race and insert a few\nassertions for the fields that should not be modified concurrently.\n\
  \nSigned-off-by: Qian Cai <cai@lca.pw>\nSigned-off-by: Paul E. McKenney <paulmck@kernel.org>\n"
submodule:
- kernel
hunk_count: 1
covered_count: 1
