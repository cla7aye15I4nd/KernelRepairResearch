id: 721aa903751db87aa244
bug_link: https://syzkaller.appspot.com/bug?extid=721aa903751db87aa244
title: WARNING in tracepoint_add_func
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: b62613b431bdababc90bf1440b2c7427172d94f4
fix_commit: 9913d5745bd720c4266805c8d29952a3702e4eca
datetime: '2021-06-29T11:51:25-04:00'
fix_commit_message: 'tracepoint: Add tracepoint_probe_register_may_exist() for BPF
  tracing


  All internal use cases for tracepoint_probe_register() is set to not ever

  be called with the same function and data. If it is, it is considered a

  bug, as that means the accounting of handling tracepoints is corrupted.

  If the function and data for a tracepoint is already registered when

  tracepoint_probe_register() is called, it will call WARN_ON_ONCE() and

  return with EEXISTS.


  The BPF system call can end up calling tracepoint_probe_register() with

  the same data, which now means that this can trigger the warning because

  of a user space process. As WARN_ON_ONCE() should not be called because

  user space called a system call with bad data, there needs to be a way to

  register a tracepoint without triggering a warning.


  Enter tracepoint_probe_register_may_exist(), which can be called, but will

  not cause a WARN_ON() if the probe already exists. It will still error out

  with EEXIST, which will then be sent to the user space that performed the

  BPF system call.


  This keeps the previous testing for issues with other users of the

  tracepoint code, while letting BPF call it with duplicated data and not

  warn about it.


  Link: https://lore.kernel.org/lkml/20210626135845.4080-1-penguin-kernel@I-love.SAKURA.ne.jp/

  Link: https://syzkaller.appspot.com/bug?id=41f4318cf01762389f4d1c1c459da4f542fe5153


  Cc: stable@vger.kernel.org

  Fixes: c4f6699dfcb85 ("bpf: introduce BPF_RAW_TRACEPOINT")

  Reported-by: syzbot <syzbot+721aa903751db87aa244@syzkaller.appspotmail.com>

  Reported-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>

  Tested-by: syzbot+721aa903751db87aa244@syzkaller.appspotmail.com

  Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>

  '
submodule:
- include/linux
- kernel
- kernel/trace
hunk_count: 6
covered_count: 4
