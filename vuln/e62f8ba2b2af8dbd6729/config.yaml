id: e62f8ba2b2af8dbd6729
bug_link: https://syzkaller.appspot.com/bug?extid=e62f8ba2b2af8dbd6729
title: 'KASAN: use-after-free Read in finish_task_switch'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 8b56ee91ffc88ea01400c012e10fe22a9d233265
fix_commit: 26b471c7e2f7befd0f59c35b257749ca57e0ed70
datetime: '2018-09-20T18:54:08+02:00'
fix_commit_message: 'KVM: nVMX: Fix bad cleanup on error of get/set nested state IOCTLs


  The handlers of IOCTLs in kvm_arch_vcpu_ioctl() are expected to set

  their return value in "r" local var and break out of switch block

  when they encounter some error.

  This is because vcpu_load() is called before the switch block which

  have a proper cleanup of vcpu_put() afterwards.


  However, KVM_{GET,SET}_NESTED_STATE IOCTLs handlers just return

  immediately on error without performing above mentioned cleanup.


  Thus, change these handlers to behave as expected.


  Fixes: 8fcc4b5923af ("kvm: nVMX: Introduce KVM_CAP_NESTED_STATE")


  Reviewed-by: Mark Kanda <mark.kanda@oracle.com>

  Reviewed-by: Patrick Colp <patrick.colp@oracle.com>

  Signed-off-by: Liran Alon <liran.alon@oracle.com>

  Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>

  '
submodule:
- arch/x86/kvm
hunk_count: 2
covered_count: 0
