id: b4d3fd1dfd53e90afd79
bug_link: https://syzkaller.appspot.com/bug?extid=b4d3fd1dfd53e90afd79
title: 'KASAN: out-of-bounds Read in i801_isr'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 8f0cdec8b5fd94135d643662506ee94ae9e98785
fix_commit: e4d8716c3dcec47f1557024add24e1f3c09eb24b
datetime: '2021-05-27T21:56:42+02:00'
fix_commit_message: 'i2c: i801: Don''t generate an interrupt on bus reset


  Now that the i2c-i801 driver supports interrupts, setting the KILL bit

  in a attempt to recover from a timed out transaction triggers an

  interrupt. Unfortunately, the interrupt handler (i801_isr) is not

  prepared for this situation and will try to process the interrupt as

  if it was signaling the end of a successful transaction. In the case

  of a block transaction, this can result in an out-of-range memory

  access.


  This condition was reproduced several times by syzbot:

  https://syzkaller.appspot.com/bug?extid=ed71512d469895b5b34e

  https://syzkaller.appspot.com/bug?extid=8c8dedc0ba9e03f6c79e

  https://syzkaller.appspot.com/bug?extid=c8ff0b6d6c73d81b610e

  https://syzkaller.appspot.com/bug?extid=33f6c360821c399d69eb

  https://syzkaller.appspot.com/bug?extid=be15dc0b1933f04b043a

  https://syzkaller.appspot.com/bug?extid=b4d3fd1dfd53e90afd79


  So disable interrupts while trying to reset the bus. Interrupts will

  be enabled again for the following transaction.


  Fixes: 636752bcb517 ("i2c-i801: Enable IRQ for SMBus transactions")

  Reported-by: syzbot+b4d3fd1dfd53e90afd79@syzkaller.appspotmail.com

  Signed-off-by: Jean Delvare <jdelvare@suse.de>

  Acked-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>

  Cc: Jarkko Nikula <jarkko.nikula@linux.intel.com>

  Tested-by: Jarkko Nikula <jarkko.nikula@linux.intel.com>

  Signed-off-by: Wolfram Sang <wsa@kernel.org>

  '
submodule:
- drivers/i2c/busses
hunk_count: 1
covered_count: 0
