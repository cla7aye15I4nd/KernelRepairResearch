id: aad231d51b1923158444
bug_link: https://syzkaller.appspot.com/bug?extid=aad231d51b1923158444
title: 'KASAN: use-after-free Read in sctp_epaddr_lookup_transport'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 986103e7920cabc0b910749e77ae5589d3934d52
fix_commit: fb6df5a6234c38a9c551559506a49a677ac6f07a
datetime: '2018-12-03T15:54:41-08:00'
fix_commit_message: 'sctp: kfree_rcu asoc


  In sctp_hash_transport/sctp_epaddr_lookup_transport, it dereferences

  a transport''s asoc under rcu_read_lock while asoc is freed not after

  a grace period, which leads to a use-after-free panic.


  This patch fixes it by calling kfree_rcu to make asoc be freed after

  a grace period.


  Note that only the asoc''s memory is delayed to free in the patch, it

  won''t cause sk to linger longer.


  Thanks Neil and Marcelo to make this clear.


  Fixes: 7fda702f9315 ("sctp: use new rhlist interface on sctp transport rhashtable")

  Fixes: cd2b70875058 ("sctp: check duplicate node before inserting a new transport")

  Reported-by: syzbot+0b05d8aa7cb185107483@syzkaller.appspotmail.com

  Reported-by: syzbot+aad231d51b1923158444@syzkaller.appspotmail.com

  Suggested-by: Neil Horman <nhorman@tuxdriver.com>

  Signed-off-by: Xin Long <lucien.xin@gmail.com>

  Acked-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>

  Acked-by: Neil Horman <nhorman@tuxdriver.com>

  Signed-off-by: David S. Miller <davem@davemloft.net>

  '
submodule:
- include/net/sctp
- net/sctp
hunk_count: 2
covered_count: 1
