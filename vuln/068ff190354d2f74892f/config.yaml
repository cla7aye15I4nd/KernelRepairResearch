id: 068ff190354d2f74892f
bug_link: https://syzkaller.appspot.com/bug?extid=068ff190354d2f74892f
title: 'KMSAN: uninit-value in io_recv'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: a9c83a0ab66a5b02e914daed502fb8d3a8d3d619
fix_commit: c6e60a0a68b7e6b3c7e33863a16e8e88ba9eee6f
datetime: '2025-01-02T16:40:08-07:00'
fix_commit_message: "io_uring/net: always initialize kmsg->msg.msg_inq upfront\n\n\
  syzbot reports that ->msg_inq may get used uinitialized from the\nfollowing path:\n\
  \nBUG: KMSAN: uninit-value in io_recv_buf_select io_uring/net.c:1094 [inline]\n\
  BUG: KMSAN: uninit-value in io_recv+0x930/0x1f90 io_uring/net.c:1158\n io_recv_buf_select\
  \ io_uring/net.c:1094 [inline]\n io_recv+0x930/0x1f90 io_uring/net.c:1158\n io_issue_sqe+0x420/0x2130\
  \ io_uring/io_uring.c:1740\n io_queue_sqe io_uring/io_uring.c:1950 [inline]\n io_req_task_submit+0xfa/0x1d0\
  \ io_uring/io_uring.c:1374\n io_handle_tw_list+0x55f/0x5c0 io_uring/io_uring.c:1057\n\
  \ tctx_task_work_run+0x109/0x3e0 io_uring/io_uring.c:1121\n tctx_task_work+0x6d/0xc0\
  \ io_uring/io_uring.c:1139\n task_work_run+0x268/0x310 kernel/task_work.c:239\n\
  \ io_run_task_work+0x43a/0x4a0 io_uring/io_uring.h:343\n io_cqring_wait io_uring/io_uring.c:2527\
  \ [inline]\n __do_sys_io_uring_enter io_uring/io_uring.c:3439 [inline]\n __se_sys_io_uring_enter+0x204f/0x4ce0\
  \ io_uring/io_uring.c:3330\n __x64_sys_io_uring_enter+0x11f/0x1a0 io_uring/io_uring.c:3330\n\
  \ x64_sys_call+0xce5/0x3c30 arch/x86/include/generated/asm/syscalls_64.h:427\n do_syscall_x64\
  \ arch/x86/entry/common.c:52 [inline]\n do_syscall_64+0xcd/0x1e0 arch/x86/entry/common.c:83\n\
  \ entry_SYSCALL_64_after_hwframe+0x77/0x7f\n\nand it is correct, as it's never initialized\
  \ upfront. Hence the first\nsubmission can end up using it uninitialized, if the\
  \ recv wasn't\nsuccessful and the networking stack didn't honor ->msg_get_inq being\
  \ set\nand filling in the output value of ->msg_inq as requested.\n\nSet it to 0\
  \ upfront when it's allocated, just to silence this KMSAN\nwarning. There's no side\
  \ effect of using it uninitialized, it'll just\npotentially cause the next receive\
  \ to use a recv value hint that's not\naccurate.\n\nFixes: c6f32c7d9e09 (\"io_uring/net:\
  \ get rid of ->prep_async() for receive side\")\nReported-by: syzbot+068ff190354d2f74892f@syzkaller.appspotmail.com\n\
  Signed-off-by: Jens Axboe <axboe@kernel.dk>\n"
submodule:
- io_uring
hunk_count: 1
covered_count: 1
