id: 221d75710bde87fa0e97
bug_link: https://syzkaller.appspot.com/bug?extid=221d75710bde87fa0e97
title: 'INFO: task hung in lock_mount'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 29417d292bd0fa174d20360326abaf6444a23c3b
fix_commit: a6a491c048882e7e424d407d32cba0b52d9ef2bf
datetime: '2023-05-06T10:10:07-07:00'
fix_commit_message: "nilfs2: fix infinite loop in nilfs_mdt_get_block()\n\nIf the\
  \ disk image that nilfs2 mounts is corrupted and a virtual block\naddress obtained\
  \ by block lookup for a metadata file is invalid,\nnilfs_bmap_lookup_at_level()\
  \ may return the same internal return code as\n-ENOENT, meaning the block does not\
  \ exist in the metadata file.\n\nThis duplication of return codes confuses nilfs_mdt_get_block(),\
  \ causing\nit to read and create a metadata block indefinitely.\n\nIn particular,\
  \ if this happens to the inode metadata file, ifile,\nsemaphore i_rwsem can be left\
  \ held, causing task hangs in lock_mount.\n\nFix this issue by making nilfs_bmap_lookup_at_level()\
  \ treat virtual block\naddress translation failures with -ENOENT as metadata corruption\
  \ instead\nof returning the error code.\n\nLink: https://lkml.kernel.org/r/20230430193046.6769-1-konishi.ryusuke@gmail.com\n\
  Signed-off-by: Ryusuke Konishi <konishi.ryusuke@gmail.com>\nTested-by: Ryusuke Konishi\
  \ <konishi.ryusuke@gmail.com>\nReported-by: syzbot+221d75710bde87fa0e97@syzkaller.appspotmail.com\n\
  \  Link: https://syzkaller.appspot.com/bug?extid=221d75710bde87fa0e97\nCc: <stable@vger.kernel.org>\n\
  Signed-off-by: Andrew Morton <akpm@linux-foundation.org>\n"
submodule:
- fs/nilfs2
hunk_count: 1
covered_count: 1
