id: fadc0aaf497e6a493b9f
bug_link: https://syzkaller.appspot.com/bug?extid=fadc0aaf497e6a493b9f
title: possible deadlock in md_open
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 858560b27645e7e97aca37ee8f232cccd658fbd2
fix_commit: 7df835a32a8bedf7ce88efcfa7c9b245b52ff139
datetime: '2021-09-22T08:45:58-07:00'
fix_commit_message: 'md: fix a lock order reversal in md_alloc


  Commit b0140891a8cea3 ("md: Fix race when creating a new md device.")

  not only moved assigning mddev->gendisk before calling add_disk, which

  fixes the races described in the commit log, but also added a

  mddev->open_mutex critical section over add_disk and creation of the

  md kobj.  Adding a kobject after add_disk is racy vs deleting the gendisk

  right after adding it, but md already prevents against that by holding

  a mddev->active reference.


  On the other hand taking this lock added a lock order reversal with what

  is not disk->open_mutex (used to be bdev->bd_mutex when the commit was

  added) for partition devices, which need that lock for the internal open

  for the partition scan, and a recent commit also takes it for

  non-partitioned devices, leading to further lockdep splatter.


  Fixes: b0140891a8ce ("md: Fix race when creating a new md device.")

  Fixes: d62633873590 ("block: support delayed holder registration")

  Reported-by: syzbot+fadc0aaf497e6a493b9f@syzkaller.appspotmail.com

  Signed-off-by: Christoph Hellwig <hch@lst.de>

  Tested-by: syzbot+fadc0aaf497e6a493b9f@syzkaller.appspotmail.com

  Reviewed-by: NeilBrown <neilb@suse.de>

  Signed-off-by: Song Liu <songliubraving@fb.com>

  '
submodule:
- drivers/md
hunk_count: 2
covered_count: 2
