id: 4d6330e14407721955eb
bug_link: https://syzkaller.appspot.com/bug?extid=4d6330e14407721955eb
title: WARNING in __mark_chain_precision (3)
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 8477fe1de9a631d634ccfda7fe147eba90f55732
fix_commit: 482d548d40b0af9af730e4869903d4433e44f014
datetime: '2023-12-09T18:43:20-08:00'
fix_commit_message: 'bpf: handle fake register spill to stack with BPF_ST_MEM instruction


  When verifier validates BPF_ST_MEM instruction that stores known

  constant to stack (e.g., *(u64 *)(r10 - 8) = 123), it effectively spills

  a fake register with a constant (but initially imprecise) value to

  a stack slot. Because read-side logic treats it as a proper register

  fill from stack slot, we need to mark such stack slot initialization as

  INSN_F_STACK_ACCESS instruction to stop precision backtracking from

  missing it.


  Fixes: 41f6f64e6999 ("bpf: support non-r10 register spill/fill to/from stack in
  precision tracking")

  Signed-off-by: Andrii Nakryiko <andrii@kernel.org>

  Acked-by: Eduard Zingerman <eddyz87@gmail.com>

  Link: https://lore.kernel.org/r/20231209010958.66758-1-andrii@kernel.org

  Signed-off-by: Alexei Starovoitov <ast@kernel.org>

  '
submodule:
- kernel/bpf
hunk_count: 1
covered_count: 0
