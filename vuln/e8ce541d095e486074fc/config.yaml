id: e8ce541d095e486074fc
bug_link: https://syzkaller.appspot.com/bug?extid=e8ce541d095e486074fc
title: 'BUG: unable to handle kernel paging request in ip6_fragment'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 0ab03f353d3613ea49d1f924faf98559003670a8
fix_commit: ef0efcd3bd3fd0589732b67fb586ffd3c8705806
datetime: '2019-04-03T21:42:20-07:00'
fix_commit_message: 'ipv6: Fix dangling pointer when ipv6 fragment


  At the beginning of ip6_fragment func, the prevhdr pointer is

  obtained in the ip6_find_1stfragopt func.

  However, all the pointers pointing into skb header may change

  when calling skb_checksum_help func with

  skb->ip_summed = CHECKSUM_PARTIAL condition.

  The prevhdr pointe will be dangling if it is not reloaded after

  calling __skb_linearize func in skb_checksum_help func.


  Here, I add a variable, nexthdr_offset, to evaluate the offset,

  which does not changes even after calling __skb_linearize func.


  Fixes: 405c92f7a541 ("ipv6: add defensive check for CHECKSUM_PARTIAL skbs in ip_fragment")

  Signed-off-by: Junwei Hu <hujunwei4@huawei.com>

  Reported-by: Wenhao Zhang <zhangwenhao8@huawei.com>

  Reported-by: syzbot+e8ce541d095e486074fc@syzkaller.appspotmail.com

  Reviewed-by: Zhiqiang Liu <liuzhiqiang26@huawei.com>

  Acked-by: Martin KaFai Lau <kafai@fb.com>

  Signed-off-by: David S. Miller <davem@davemloft.net>

  '
submodule:
- net/ipv6
hunk_count: 3
covered_count: 0
