id: 7a0d9d0b26efefe61780
bug_link: https://syzkaller.appspot.com/bug?extid=7a0d9d0b26efefe61780
title: possible deadlock in shmem_fallocate (4)
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 97a6f772f36b7f52bcfa56a581bbd2470cffe23d
fix_commit: 3e338d3c95c735dc3265a86016bb4c022ec7cadc
datetime: '2020-07-31T14:41:43+02:00'
fix_commit_message: "staging: android: ashmem: Fix lockdep warning for write operation\n\
  \nsyzbot report [1] describes a deadlock when write operation against an\nashmem\
  \ fd executed at the time when ashmem is shrinking its cache results\nin the following\
  \ lock sequence:\n\nPossible unsafe locking scenario:\n\n        CPU0          \
  \          CPU1\n        ----                    ----\n   lock(fs_reclaim);\n  \
  \                              lock(&sb->s_type->i_mutex_key#13);\n            \
  \                    lock(fs_reclaim);\n   lock(&sb->s_type->i_mutex_key#13);\n\n\
  kswapd takes fs_reclaim and then inode_lock while generic_perform_write\ntakes inode_lock\
  \ and then fs_reclaim. However ashmem does not support\nwriting into backing shmem\
  \ with a write syscall. The only way to change\nits content is to mmap it and operate\
  \ on mapped memory. Therefore the race\nthat lockdep is warning about is not valid.\
  \ Resolve this by introducing a\nseparate lockdep class for the backing shmem inodes.\n\
  \n[1]: https://lkml.kernel.org/lkml/0000000000000b5f9d059aa2037f@google.com/\n\n\
  Reported-by: syzbot+7a0d9d0b26efefe61780@syzkaller.appspotmail.com\nSigned-off-by:\
  \ Suren Baghdasaryan <surenb@google.com>\nCc: stable <stable@vger.kernel.org>\n\
  Reviewed-by: Joel Fernandes (Google) <joel@joelfernandes.org>\nLink: https://lore.kernel.org/r/20200730192632.3088194-1-surenb@google.com\n\
  Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>\n"
submodule:
- drivers/staging/android
hunk_count: 3
covered_count: 1
