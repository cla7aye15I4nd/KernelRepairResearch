id: 71b95eda637a2088bd6b
bug_link: https://syzkaller.appspot.com/bug?extid=71b95eda637a2088bd6b
title: WARNING in io_sq_offload_create
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 9753c642a53bc4fbdef06d372d389dce7d8cddc2
fix_commit: a09c17240bdf2e9fa6d0591afa9448b59785f7d4
datetime: '2024-09-16T03:12:21-06:00'
fix_commit_message: "io_uring/sqpoll: retain test for whether the CPU is valid\n\n\
  A recent commit ensured that SQPOLL cannot be setup with a CPU that\nisn't in the\
  \ current tasks cpuset, but it also dropped testing whether\nthe CPU is valid in\
  \ the first place. Without that, if a task passes in\na CPU value that is too high,\
  \ the following KASAN splat can get\ntriggered:\n\nBUG: KASAN: stack-out-of-bounds\
  \ in io_sq_offload_create+0x858/0xaa4\nRead of size 8 at addr ffff800089bc7b90 by\
  \ task wq-aff.t/1391\n\nCPU: 4 UID: 1000 PID: 1391 Comm: wq-aff.t Not tainted 6.11.0-rc7-00227-g371c468f4db6\
  \ #7080\nHardware name: linux,dummy-virt (DT)\nCall trace:\n dump_backtrace.part.0+0xcc/0xe0\n\
  \ show_stack+0x14/0x1c\n dump_stack_lvl+0x58/0x74\n print_report+0x16c/0x4c8\n kasan_report+0x9c/0xe4\n\
  \ __asan_report_load8_noabort+0x1c/0x24\n io_sq_offload_create+0x858/0xaa4\n io_uring_setup+0x1394/0x17c4\n\
  \ __arm64_sys_io_uring_setup+0x6c/0x180\n invoke_syscall+0x6c/0x260\n el0_svc_common.constprop.0+0x158/0x224\n\
  \ do_el0_svc+0x3c/0x5c\n el0_svc+0x34/0x70\n el0t_64_sync_handler+0x118/0x124\n\
  \ el0t_64_sync+0x168/0x16c\n\nThe buggy address belongs to stack of task wq-aff.t/1391\n\
  \ and is located at offset 48 in frame:\n io_sq_offload_create+0x0/0xaa4\n\nThis\
  \ frame has 1 object:\n [32, 40) 'allowed_mask'\n\nThe buggy address belongs to\
  \ the virtual mapping at\n [ffff800089bc0000, ffff800089bc9000) created by:\n kernel_clone+0x124/0x7e0\n\
  \nThe buggy address belongs to the physical page:\npage: refcount:1 mapcount:0 mapping:0000000000000000\
  \ index:0xffff0000d740af80 pfn:0x11740a\nmemcg:ffff0000c2706f02\nflags: 0xbffe00000000000(node=0|zone=2|lastcpupid=0x1fff)\n\
  raw: 0bffe00000000000 0000000000000000 dead000000000122 0000000000000000\nraw: ffff0000d740af80\
  \ 0000000000000000 00000001ffffffff ffff0000c2706f02\npage dumped because: kasan:\
  \ bad access detected\n\nMemory state around the buggy address:\n ffff800089bc7a80:\
  \ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n ffff800089bc7b00: 00 00 00 00\
  \ 00 00 00 00 00 00 00 00 f1 f1 f1 f1\n>ffff800089bc7b80: 00 f3 f3 f3 00 00 00 00\
  \ 00 00 00 00 00 00 00 00\n                         ^\n ffff800089bc7c00: 00 00\
  \ 00 00 00 00 00 00 00 00 00 00 f1 f1 f1 f1\n ffff800089bc7c80: 00 00 00 00 00 00\
  \ 00 00 00 00 00 00 00 00 00 f3\n\nReported-by: kernel test robot <oliver.sang@intel.com>\n\
  Closes: https://lore.kernel.org/oe-lkp/202409161632.cbeeca0d-lkp@intel.com\nFixes:\
  \ f011c9cf04c0 (\"io_uring/sqpoll: do not allow pinning outside of cpuset\")\nTested-by:\
  \ Felix Moessbauer <felix.moessbauer@siemens.com>\nSigned-off-by: Jens Axboe <axboe@kernel.dk>\n"
submodule:
- io_uring
hunk_count: 1
covered_count: 1
