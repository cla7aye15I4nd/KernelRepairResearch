id: 1145ec2e23165570c3ac
bug_link: https://syzkaller.appspot.com/bug?extid=1145ec2e23165570c3ac
title: general protection fault in put_pid
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 1ac25013fb9e4ed595cd608a406191e93520881e
fix_commit: a8e911d13540487942d53137c156bd7707f66e5d
datetime: '2019-02-01T15:46:23-08:00'
fix_commit_message: "x86_64: increase stack size for KASAN_EXTRA\n\nIf the kernel\
  \ is configured with KASAN_EXTRA, the stack size is\nincreasted significantly because\
  \ this option sets \"-fstack-reuse\" to\n\"none\" in GCC [1].  As a result, it triggers\
  \ stack overrun quite often\nwith 32k stack size compiled using GCC 8.  For example,\
  \ this reproducer\n\n  https://github.com/linux-test-project/ltp/blob/master/testcases/kernel/syscalls/madvise/madvise06.c\n\
  \ntriggers a \"corrupted stack end detected inside scheduler\" very reliably\nwith\
  \ CONFIG_SCHED_STACK_END_CHECK enabled.\n\nThere are just too many functions that\
  \ could have a large stack with\nKASAN_EXTRA due to large local variables that have\
  \ been called over and\nover again without being able to reuse the stacks.  Some\
  \ noticiable ones\nare\n\n  size\n  7648 shrink_page_list\n  3584 xfs_rmap_convert\n\
  \  3312 migrate_page_move_mapping\n  3312 dev_ethtool\n  3200 migrate_misplaced_transhuge_page\n\
  \  3168 copy_process\n\nThere are other 49 functions are over 2k in size while compiling\
  \ kernel\nwith \"-Wframe-larger-than=\" even with a related minimal config on this\n\
  machine.  Hence, it is too much work to change Makefiles for each object\nto compile\
  \ without \"-fsanitize-address-use-after-scope\" individually.\n\n[1] https://gcc.gnu.org/bugzilla/show_bug.cgi?id=81715#c23\n\
  \nAlthough there is a patch in GCC 9 to help the situation, GCC 9 probably\nwon't\
  \ be released in a few months and then it probably take another\n6-month to 1-year\
  \ for all major distros to include it as a default.\nHence, the stack usage with\
  \ KASAN_EXTRA can be revisited again in 2020\nwhen GCC 9 is everywhere.  Until then,\
  \ this patch will help users avoid\nstack overrun.\n\nThis has already been fixed\
  \ for arm64 for the same reason via\n6e8830674ea (\"arm64: kasan: Increase stack\
  \ size for KASAN_EXTRA\").\n\nLink: http://lkml.kernel.org/r/20190109215209.2903-1-cai@lca.pw\n\
  Signed-off-by: Qian Cai <cai@lca.pw>\nCc: Thomas Gleixner <tglx@linutronix.de>\n\
  Cc: Ingo Molnar <mingo@redhat.com>\nCc: Borislav Petkov <bp@alien8.de>\nCc: \"H.\
  \ Peter Anvin\" <hpa@zytor.com>\nCc: Andrey Ryabinin <aryabinin@virtuozzo.com>\n\
  Cc: Alexander Potapenko <glider@google.com>\nCc: Dmitry Vyukov <dvyukov@google.com>\n\
  Signed-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds\
  \ <torvalds@linux-foundation.org>\n"
submodule:
- arch/x86/include/asm
hunk_count: 1
covered_count: 0
