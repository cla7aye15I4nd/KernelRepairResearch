======================================================
WARNING: possible circular locking dependency detected
6.15.0-rc5-syzkaller-00275-gbec6f00f120e #0 Not tainted
------------------------------------------------------
syz-executor/6142 is trying to acquire lock:
ffff88806a6e0948 ((wq_completion)ocfs2_wq){+.+.}-{0:0}, at: touch_wq_lockdep_map+0xb5/0x180 kernel/workqueue.c:3907

but task is already holding lock:
ffff8880329c80e0 (&type->s_umount_key#68){++++}-{4:4}, at: __super_lock fs/super.c:56 [inline]
ffff8880329c80e0 (&type->s_umount_key#68){++++}-{4:4}, at: __super_lock_excl fs/super.c:71 [inline]
ffff8880329c80e0 (&type->s_umount_key#68){++++}-{4:4}, at: deactivate_super+0xa9/0xe0 fs/super.c:505

which lock already depends on the new lock.


the existing dependency chain (in reverse order) is:

-> #2 (&type->s_umount_key#68){++++}-{4:4}:
       lock_acquire+0x120/0x360 kernel/locking/lockdep.c:5866
       down_read+0x46/0x2e0 kernel/locking/rwsem.c:1524
       ocfs2_finish_quota_recovery+0x12c/0x1e60 fs/ocfs2/quota_local.c:603
       ocfs2_complete_recovery+0x15b6/0x2160 fs/ocfs2/journal.c:1357
       process_one_work kernel/workqueue.c:3238 [inline]
       process_scheduled_works+0xade/0x17a0 kernel/workqueue.c:3319
       worker_thread+0x8a0/0xda0 kernel/workqueue.c:3400
       kthread+0x711/0x8a0 kernel/kthread.c:464
       ret_from_fork+0x4e/0x80 arch/x86/kernel/process.c:153
       ret_from_fork_asm+0x1a/0x30 arch/x86/entry/entry_64.S:245

-> #1 ((work_completion)(&journal->j_recovery_work)){+.+.}-{0:0}:
       lock_acquire+0x120/0x360 kernel/locking/lockdep.c:5866
       process_one_work kernel/workqueue.c:3214 [inline]
       process_scheduled_works+0xa09/0x17a0 kernel/workqueue.c:3319
       worker_thread+0x8a0/0xda0 kernel/workqueue.c:3400
       kthread+0x711/0x8a0 kernel/kthread.c:464
       ret_from_fork+0x4e/0x80 arch/x86/kernel/process.c:153
       ret_from_fork_asm+0x1a/0x30 arch/x86/entry/entry_64.S:245

-> #0 ((wq_completion)ocfs2_wq){+.+.}-{0:0}:
       check_prev_add kernel/locking/lockdep.c:3166 [inline]
       check_prevs_add kernel/locking/lockdep.c:3285 [inline]
       validate_chain+0xb9b/0x2140 kernel/locking/lockdep.c:3909
       __lock_acquire+0xaac/0xd20 kernel/locking/lockdep.c:5235
       lock_acquire+0x120/0x360 kernel/locking/lockdep.c:5866
       touch_wq_lockdep_map+0xcb/0x180 kernel/workqueue.c:3907
       __flush_workqueue+0x121/0x14b0 kernel/workqueue.c:3949
       ocfs2_shutdown_local_alloc+0xe7/0xa10 fs/ocfs2/localalloc.c:380
       ocfs2_dismount_volume+0x1f9/0x8d0 fs/ocfs2/super.c:1822
       generic_shutdown_super+0x135/0x2c0 fs/super.c:642
       kill_block_super+0x44/0x90 fs/super.c:1710
       deactivate_locked_super+0xbc/0x130 fs/super.c:473
       cleanup_mnt+0x425/0x4c0 fs/namespace.c:1431
       task_work_run+0x1d4/0x260 kernel/task_work.c:227
       resume_user_mode_work+0x5e/0x80 include/linux/resume_user_mode.h:50
       exit_to_user_mode_loop kernel/entry/common.c:114 [inline]
       exit_to_user_mode_prepare include/linux/entry-common.h:329 [inline]
       __syscall_exit_to_user_mode_work kernel/entry/common.c:207 [inline]
       syscall_exit_to_user_mode+0x9a/0x120 kernel/entry/common.c:218
       do_syscall_64+0x103/0x210 arch/x86/entry/syscall_64.c:100
       entry_SYSCALL_64_after_hwframe+0x77/0x7f

other info that might help us debug this:

Chain exists of:
  (wq_completion)ocfs2_wq --> (work_completion)(&journal->j_recovery_work) --> &type->s_umount_key#68

 Possible unsafe locking scenario:

       CPU0                    CPU1
       ----                    ----
  lock(&type->s_umount_key#68);
                               lock((work_completion)(&journal->j_recovery_work));
                               lock(&type->s_umount_key#68);
  lock((wq_completion)ocfs2_wq);

 *** DEADLOCK ***

1 lock held by syz-executor/6142:
 #0: ffff8880329c80e0 (&type->s_umount_key#68){++++}-{4:4}, at: __super_lock fs/super.c:56 [inline]
 #0: ffff8880329c80e0 (&type->s_umount_key#68){++++}-{4:4}, at: __super_lock_excl fs/super.c:71 [inline]
 #0: ffff8880329c80e0 (&type->s_umount_key#68){++++}-{4:4}, at: deactivate_super+0xa9/0xe0 fs/super.c:505

stack backtrace:
CPU: 0 UID: 0 PID: 6142 Comm: syz-executor Not tainted 6.15.0-rc5-syzkaller-00275-gbec6f00f120e #0 PREEMPT(full) 
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 05/07/2025
Call Trace:
 <TASK>
 dump_stack_lvl+0x189/0x250 lib/dump_stack.c:120
 print_circular_bug+0x2ee/0x310 kernel/locking/lockdep.c:2079
 check_noncircular+0x134/0x160 kernel/locking/lockdep.c:2211
 check_prev_add kernel/locking/lockdep.c:3166 [inline]
 check_prevs_add kernel/locking/lockdep.c:3285 [inline]
 validate_chain+0xb9b/0x2140 kernel/locking/lockdep.c:3909
 __lock_acquire+0xaac/0xd20 kernel/locking/lockdep.c:5235
 lock_acquire+0x120/0x360 kernel/locking/lockdep.c:5866
 touch_wq_lockdep_map+0xcb/0x180 kernel/workqueue.c:3907
 __flush_workqueue+0x121/0x14b0 kernel/workqueue.c:3949
 ocfs2_shutdown_local_alloc+0xe7/0xa10 fs/ocfs2/localalloc.c:380
 ocfs2_dismount_volume+0x1f9/0x8d0 fs/ocfs2/super.c:1822
 generic_shutdown_super+0x135/0x2c0 fs/super.c:642
 kill_block_super+0x44/0x90 fs/super.c:1710
 deactivate_locked_super+0xbc/0x130 fs/super.c:473
 cleanup_mnt+0x425/0x4c0 fs/namespace.c:1431
 task_work_run+0x1d4/0x260 kernel/task_work.c:227
 resume_user_mode_work+0x5e/0x80 include/linux/resume_user_mode.h:50
 exit_to_user_mode_loop kernel/entry/common.c:114 [inline]
 exit_to_user_mode_prepare include/linux/entry-common.h:329 [inline]
 __syscall_exit_to_user_mode_work kernel/entry/common.c:207 [inline]
 syscall_exit_to_user_mode+0x9a/0x120 kernel/entry/common.c:218
 do_syscall_64+0x103/0x210 arch/x86/entry/syscall_64.c:100
 entry_SYSCALL_64_after_hwframe+0x77/0x7f
RIP: 0033:0x7f1c84d8fc97
Code: a8 ff ff ff f7 d8 64 89 01 48 83 c8 ff c3 0f 1f 44 00 00 31 f6 e9 09 00 00 00 66 0f 1f 84 00 00 00 00 00 b8 a6 00 00 00 0f 05 <48> 3d 00 f0 ff ff 77 01 c3 48 c7 c2 a8 ff ff ff f7 d8 64 89 02 b8
RSP: 002b:00007ffcc3325268 EFLAGS: 00000246 ORIG_RAX: 00000000000000a6
RAX: 0000000000000000 RBX: 00007f1c84e1089d RCX: 00007f1c84d8fc97
RDX: 0000000000000000 RSI: 0000000000000009 RDI: 00007ffcc3325320
RBP: 00007ffcc3325320 R08: 0000000000000000 R09: 0000000000000000
R10: 00000000ffffffff R11: 0000000000000246 R12: 00007ffcc33263b0
R13: 00007f1c84e1089d R14: 0000000000029ecf R15: 00007ffcc33263f0
 </TASK>
ocfs2: Unmounting device (7,3) on (node local)
