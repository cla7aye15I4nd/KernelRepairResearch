id: 0c8ce1da0ac31abbadcd
bug_link: https://syzkaller.appspot.com/bug?extid=0c8ce1da0ac31abbadcd
title: 'KMSAN: uninit-value in virtio_transport_recv_pkt'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 8999ce4cfc87e61b4143ec2e7b93d8e92e11fa7f
fix_commit: 34c4effacfc329aeca5635a69fd9e0f6c90b4101
datetime: '2023-11-07T18:56:06-08:00'
fix_commit_message: "virtio/vsock: Fix uninit-value in virtio_transport_recv_pkt()\n\
  \nKMSAN reported the following uninit-value access issue:\n\n=====================================================\n\
  BUG: KMSAN: uninit-value in virtio_transport_recv_pkt+0x1dfb/0x26a0 net/vmw_vsock/virtio_transport_common.c:1421\n\
  \ virtio_transport_recv_pkt+0x1dfb/0x26a0 net/vmw_vsock/virtio_transport_common.c:1421\n\
  \ vsock_loopback_work+0x3bb/0x5a0 net/vmw_vsock/vsock_loopback.c:120\n process_one_work\
  \ kernel/workqueue.c:2630 [inline]\n process_scheduled_works+0xff6/0x1e60 kernel/workqueue.c:2703\n\
  \ worker_thread+0xeca/0x14d0 kernel/workqueue.c:2784\n kthread+0x3cc/0x520 kernel/kthread.c:388\n\
  \ ret_from_fork+0x66/0x80 arch/x86/kernel/process.c:147\n ret_from_fork_asm+0x11/0x20\
  \ arch/x86/entry/entry_64.S:304\n\nUninit was stored to memory at:\n virtio_transport_space_update\
  \ net/vmw_vsock/virtio_transport_common.c:1274 [inline]\n virtio_transport_recv_pkt+0x1ee8/0x26a0\
  \ net/vmw_vsock/virtio_transport_common.c:1415\n vsock_loopback_work+0x3bb/0x5a0\
  \ net/vmw_vsock/vsock_loopback.c:120\n process_one_work kernel/workqueue.c:2630\
  \ [inline]\n process_scheduled_works+0xff6/0x1e60 kernel/workqueue.c:2703\n worker_thread+0xeca/0x14d0\
  \ kernel/workqueue.c:2784\n kthread+0x3cc/0x520 kernel/kthread.c:388\n ret_from_fork+0x66/0x80\
  \ arch/x86/kernel/process.c:147\n ret_from_fork_asm+0x11/0x20 arch/x86/entry/entry_64.S:304\n\
  \nUninit was created at:\n slab_post_alloc_hook+0x105/0xad0 mm/slab.h:767\n slab_alloc_node\
  \ mm/slub.c:3478 [inline]\n kmem_cache_alloc_node+0x5a2/0xaf0 mm/slub.c:3523\n kmalloc_reserve+0x13c/0x4a0\
  \ net/core/skbuff.c:559\n __alloc_skb+0x2fd/0x770 net/core/skbuff.c:650\n alloc_skb\
  \ include/linux/skbuff.h:1286 [inline]\n virtio_vsock_alloc_skb include/linux/virtio_vsock.h:66\
  \ [inline]\n virtio_transport_alloc_skb+0x90/0x11e0 net/vmw_vsock/virtio_transport_common.c:58\n\
  \ virtio_transport_reset_no_sock net/vmw_vsock/virtio_transport_common.c:957 [inline]\n\
  \ virtio_transport_recv_pkt+0x1279/0x26a0 net/vmw_vsock/virtio_transport_common.c:1387\n\
  \ vsock_loopback_work+0x3bb/0x5a0 net/vmw_vsock/vsock_loopback.c:120\n process_one_work\
  \ kernel/workqueue.c:2630 [inline]\n process_scheduled_works+0xff6/0x1e60 kernel/workqueue.c:2703\n\
  \ worker_thread+0xeca/0x14d0 kernel/workqueue.c:2784\n kthread+0x3cc/0x520 kernel/kthread.c:388\n\
  \ ret_from_fork+0x66/0x80 arch/x86/kernel/process.c:147\n ret_from_fork_asm+0x11/0x20\
  \ arch/x86/entry/entry_64.S:304\n\nCPU: 1 PID: 10664 Comm: kworker/1:5 Not tainted\
  \ 6.6.0-rc3-00146-g9f3ebbef746f #3\nHardware name: QEMU Standard PC (i440FX + PIIX,\
  \ 1996), BIOS 1.16.2-1.fc38 04/01/2014\nWorkqueue: vsock-loopback vsock_loopback_work\n\
  =====================================================\n\nThe following simple reproducer\
  \ can cause the issue described above:\n\nint main(void)\n{\n  int sock;\n  struct\
  \ sockaddr_vm addr = {\n    .svm_family = AF_VSOCK,\n    .svm_cid = VMADDR_CID_ANY,\n\
  \    .svm_port = 1234,\n  };\n\n  sock = socket(AF_VSOCK, SOCK_STREAM, 0);\n  connect(sock,\
  \ (struct sockaddr *)&addr, sizeof(addr));\n  return 0;\n}\n\nThis issue occurs\
  \ because the `buf_alloc` and `fwd_cnt` fields of the\n`struct virtio_vsock_hdr`\
  \ are not initialized when a new skb is allocated\nin `virtio_transport_init_hdr()`.\
  \ This patch resolves the issue by\ninitializing these fields during allocation.\n\
  \nFixes: 71dc9ec9ac7d (\"virtio/vsock: replace virtio_vsock_pkt with sk_buff\")\n\
  Reported-and-tested-by: syzbot+0c8ce1da0ac31abbadcd@syzkaller.appspotmail.com\n\
  Closes: https://syzkaller.appspot.com/bug?extid=0c8ce1da0ac31abbadcd\nSigned-off-by:\
  \ Shigeru Yoshida <syoshida@redhat.com>\nReviewed-by: Stefano Garzarella <sgarzare@redhat.com>\n\
  Link: https://lore.kernel.org/r/20231104150531.257952-1-syoshida@redhat.com\nSigned-off-by:\
  \ Jakub Kicinski <kuba@kernel.org>\n"
submodule:
- net/vmw_vsock
hunk_count: 1
covered_count: 1
