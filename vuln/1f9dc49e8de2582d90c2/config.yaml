id: 1f9dc49e8de2582d90c2
bug_link: https://syzkaller.appspot.com/bug?extid=1f9dc49e8de2582d90c2
title: WARNING in ext4_write_inode
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 5680c39073611b1490a311d351d648f602aa8d13
fix_commit: 10a98cb16d80be3595fdb165fad898bb28b8b6d2
datetime: '2020-03-11T09:11:38-07:00'
fix_commit_message: "xfs: clear PF_MEMALLOC before exiting xfsaild thread\n\nLeaving\
  \ PF_MEMALLOC set when exiting a kthread causes it to remain set\nduring do_exit().\
  \  That can confuse things.  In particular, if BSD\nprocess accounting is enabled,\
  \ then do_exit() writes data to an\naccounting file.  If that file has FS_SYNC_FL\
  \ set, then this write\noccurs synchronously and can misbehave if PF_MEMALLOC is\
  \ set.\n\nFor example, if the accounting file is located on an XFS filesystem,\n\
  then a WARN_ON_ONCE() in iomap_do_writepage() is triggered and the data\ndoesn't\
  \ get written when it should.  Or if the accounting file is\nlocated on an ext4\
  \ filesystem without a journal, then a WARN_ON_ONCE()\nin ext4_write_inode() is\
  \ triggered and the inode doesn't get written.\n\nFix this in xfsaild() by using\
  \ the helper functions to save and restore\nPF_MEMALLOC.\n\nThis can be reproduced\
  \ as follows in the kvm-xfstests test appliance\nmodified to add the 'acct' Debian\
  \ package, and with kvm-xfstests's\nrecommended kconfig modified to add CONFIG_BSD_PROCESS_ACCT=y:\n\
  \n        mkfs.xfs -f /dev/vdb\n        mount /vdb\n        touch /vdb/file\n  \
  \      chattr +S /vdb/file\n        accton /vdb/file\n        mkfs.xfs -f /dev/vdc\n\
  \        mount /vdc\n        umount /vdc\n\nIt causes:\n\tWARNING: CPU: 1 PID: 336\
  \ at fs/iomap/buffered-io.c:1534\n\tCPU: 1 PID: 336 Comm: xfsaild/vdc Not tainted\
  \ 5.6.0-rc5 #3\n\tHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS ?-20191223_100556-anatol\
  \ 04/01/2014\n\tRIP: 0010:iomap_do_writepage+0x16b/0x1f0 fs/iomap/buffered-io.c:1534\n\
  \t[...]\n\tCall Trace:\n\t write_cache_pages+0x189/0x4d0 mm/page-writeback.c:2238\n\
  \t iomap_writepages+0x1c/0x33 fs/iomap/buffered-io.c:1642\n\t xfs_vm_writepages+0x65/0x90\
  \ fs/xfs/xfs_aops.c:578\n\t do_writepages+0x41/0xe0 mm/page-writeback.c:2344\n\t\
  \ __filemap_fdatawrite_range+0xd2/0x120 mm/filemap.c:421\n\t file_write_and_wait_range+0x71/0xc0\
  \ mm/filemap.c:760\n\t xfs_file_fsync+0x7a/0x2b0 fs/xfs/xfs_file.c:114\n\t generic_write_sync\
  \ include/linux/fs.h:2867 [inline]\n\t xfs_file_buffered_aio_write+0x379/0x3b0 fs/xfs/xfs_file.c:691\n\
  \t call_write_iter include/linux/fs.h:1901 [inline]\n\t new_sync_write+0x130/0x1d0\
  \ fs/read_write.c:483\n\t __kernel_write+0x54/0xe0 fs/read_write.c:515\n\t do_acct_process+0x122/0x170\
  \ kernel/acct.c:522\n\t slow_acct_process kernel/acct.c:581 [inline]\n\t acct_process+0x1d4/0x27c\
  \ kernel/acct.c:607\n\t do_exit+0x83d/0xbc0 kernel/exit.c:791\n\t kthread+0xf1/0x140\
  \ kernel/kthread.c:257\n\t ret_from_fork+0x27/0x50 arch/x86/entry/entry_64.S:352\n\
  \nThis bug was originally reported by syzbot at\nhttps://lore.kernel.org/r/0000000000000e7156059f751d7b@google.com.\n\
  \nReported-by: syzbot+1f9dc49e8de2582d90c2@syzkaller.appspotmail.com\nSigned-off-by:\
  \ Eric Biggers <ebiggers@google.com>\nReviewed-by: Darrick J. Wong <darrick.wong@oracle.com>\n\
  Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>\nReviewed-by: Christoph\
  \ Hellwig <hch@lst.de>\n"
submodule:
- fs/xfs
hunk_count: 2
covered_count: 0
