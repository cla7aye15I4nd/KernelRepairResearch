id: 84fe685c02cd112a2ac3
bug_link: https://syzkaller.appspot.com/bug?extid=84fe685c02cd112a2ac3
title: 'KASAN: stack-out-of-bounds Read in profile_pc'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 6c0483dbfe7223f2b8390e3d5fe942629d3317b7
fix_commit: 093d9603b60093a9aaae942db56107f6432a5dca
datetime: '2024-06-28T14:27:22-07:00'
fix_commit_message: "x86: stop playing stack games in profile_pc()\n\nThe 'profile_pc()'\
  \ function is used for timer-based profiling, which\nisn't really all that relevant\
  \ any more to begin with, but it also ends\nup making assumptions based on the stack\
  \ layout that aren't necessarily\nvalid.\n\nBasically, the code tries to account\
  \ the time spent in spinlocks to the\ncaller rather than the spinlock, and while\
  \ I support that as a concept,\nit's not worth the code complexity or the KASAN\
  \ warnings when no serious\nprofiling is done using timers anyway these days.\n\n\
  And the code really does depend on stack layout that is only true in the\nsimplest\
  \ of cases.  We've lost the comment at some point (I think when\nthe 32-bit and\
  \ 64-bit code was unified), but it used to say:\n\n\tAssume the lock function has\
  \ either no stack frame or a copy\n\tof eflags from PUSHF.\n\nwhich explains why\
  \ it just blindly loads a word or two straight off the\nstack pointer and then takes\
  \ a minimal look at the values to just check\nif they might be eflags or the return\
  \ pc:\n\n\tEflags always has bits 22 and up cleared unlike kernel addresses\n\n\
  but that basic stack layout assumption assumes that there isn't any lock\ndebugging\
  \ etc going on that would complicate the code and cause a stack\nframe.\n\nIt causes\
  \ KASAN unhappiness reported for years by syzkaller [1] and\nothers [2].\n\nWith\
  \ no real practical reason for this any more, just remove the code.\n\nJust for\
  \ historical interest, here's some background commits relating to\nthis code from\
  \ 2006:\n\n  0cb91a229364 (\"i386: Account spinlocks to the caller during profiling\
  \ for !FP kernels\")\n  31679f38d886 (\"Simplify profile_pc on x86-64\")\n\nand\
  \ a code unification from 2009:\n\n  ef4512882dbe (\"x86: time_32/64.c unify profile_pc\"\
  )\n\nbut the basics of this thing actually goes back to before the git tree.\n\n\
  Link: https://syzkaller.appspot.com/bug?extid=84fe685c02cd112a2ac3 [1]\nLink: https://lore.kernel.org/all/CAK55_s7Xyq=nh97=K=G1sxueOFrJDAvPOJAL4TPTCAYvmxO9_A@mail.gmail.com/\
  \ [2]\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\n"
submodule:
- arch/x86/kernel
hunk_count: 1
covered_count: 1
