id: e2fcaf6485d69d5a8ad5
bug_link: https://syzkaller.appspot.com/bug?extid=e2fcaf6485d69d5a8ad5
title: 'INFO: task hung in loop_control_ioctl'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 0da03cab87e6323ff2e05b14bc7d5c6fcc531efd
fix_commit: 1dded9acf6dc9a34cd27fcf8815507e4e65b3c4f
datetime: '2018-11-08T06:30:36-07:00'
fix_commit_message: 'loop: Avoid circular locking dependency between loop_ctl_mutex
  and bd_mutex


  Code in loop_change_fd() drops reference to the old file (and also the

  new file in a failure case) under loop_ctl_mutex. Similarly to a

  situation in loop_set_fd() this can create a circular locking dependency

  if this was the last reference holding the file open. Delay dropping of

  the file reference until we have released loop_ctl_mutex.


  Reported-by: Tetsuo Handa <penguin-kernel@i-love.sakura.ne.jp>

  Signed-off-by: Jan Kara <jack@suse.cz>

  Signed-off-by: Jens Axboe <axboe@kernel.dk>

  '
submodule:
- drivers/block
hunk_count: 4
covered_count: 0
