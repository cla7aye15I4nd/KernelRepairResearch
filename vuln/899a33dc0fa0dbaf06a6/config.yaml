id: 899a33dc0fa0dbaf06a6
bug_link: https://syzkaller.appspot.com/bug?extid=899a33dc0fa0dbaf06a6
title: 'KASAN: use-after-free Read in h5_reset_rx'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 4a67e5d4adbf3b419f17924322f468ac5cb8c14f
fix_commit: 56897b217a1d0a91c9920cb418d6b3fe922f590a
datetime: '2019-02-26T09:55:39+01:00'
fix_commit_message: "Bluetooth: hci_ldisc: Postpone HCI_UART_PROTO_READY bit set in\
  \ hci_uart_set_proto()\n\ntask A:                                task B:\nhci_uart_set_proto\
  \                     flush_to_ldisc\n - p->open(hu) -> h5_open  //alloc h5  - receive_buf\n\
  \ - set_bit HCI_UART_PROTO_READY         - tty_port_default_receive_buf\n - hci_uart_register_dev\
  \                 - tty_ldisc_receive_buf\n                                    \
  \      - hci_uart_tty_receive\n\t\t\t\t           - test_bit HCI_UART_PROTO_READY\n\
  \t\t\t\t            - h5_recv\n - clear_bit HCI_UART_PROTO_READY             while()\
  \ {\n - p->open(hu) -> h5_close //free h5\n\t\t\t\t              - h5_rx_3wire_hdr\n\
  \t\t\t\t               - h5_reset()  //use-after-free\n                        \
  \                      }\n\nIt could use ioctl to set hci uart proto, but there\
  \ is\na use-after-free issue when hci_uart_register_dev() fail in\nhci_uart_set_proto(),\
  \ see stack above, fix this by setting\nHCI_UART_PROTO_READY bit only when hci_uart_register_dev()\n\
  return success.\n\nReported-by: syzbot+899a33dc0fa0dbaf06a6@syzkaller.appspotmail.com\n\
  Signed-off-by: Kefeng Wang <wangkefeng.wang@huawei.com>\nReviewed-by: Jeremy Cline\
  \ <jcline@redhat.com>\nSigned-off-by: Marcel Holtmann <marcel@holtmann.org>\n"
submodule:
- drivers/bluetooth
hunk_count: 1
covered_count: 1
