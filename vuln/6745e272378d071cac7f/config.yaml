id: 6745e272378d071cac7f
bug_link: https://syzkaller.appspot.com/bug?extid=6745e272378d071cac7f
title: 'KASAN: use-after-free Read in eth_type_trans'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 4e4f4ce6abf5f6a8df0561776d3a790d60d519d0
fix_commit: 96aa1b22bd6bb9fccf62f6261f390ed6f3e7967f
datetime: '2020-06-01T12:01:46-07:00'
fix_commit_message: 'tun: correct header offsets in napi frags mode


  Tun in IFF_NAPI_FRAGS mode calls napi_gro_frags. Unlike netif_rx and

  netif_gro_receive, this expects skb->data to point to the mac layer.


  But skb_probe_transport_header, __skb_get_hash_symmetric, and

  xdp_do_generic in tun_get_user need skb->data to point to the network

  header. Flow dissection also needs skb->protocol set, so

  eth_type_trans has to be called.


  Ensure the link layer header lies in linear as eth_type_trans pulls

  ETH_HLEN. Then take the same code paths for frags as for not frags.

  Push the link layer header back just before calling napi_gro_frags.


  By pulling up to ETH_HLEN from frag0 into linear, this disables the

  frag0 optimization in the special case when IFF_NAPI_FRAGS is used

  with zero length iov[0] (and thus empty skb->linear).


  Fixes: 90e33d459407 ("tun: enable napi_gro_frags() for TUN/TAP driver")

  Signed-off-by: Willem de Bruijn <willemb@google.com>

  Acked-by: Petar Penkov <ppenkov@google.com>

  Signed-off-by: David S. Miller <davem@davemloft.net>

  '
submodule:
- drivers/net
hunk_count: 2
covered_count: 1
