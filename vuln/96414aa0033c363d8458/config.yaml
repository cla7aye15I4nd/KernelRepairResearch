id: 96414aa0033c363d8458
bug_link: https://syzkaller.appspot.com/bug?extid=96414aa0033c363d8458
title: 'KASAN: use-after-free Read in l2cap_chan_close'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 8746f135bb01872ff412d408ea1aa9ebd328c1f5
fix_commit: f9c70bdc279b191da8d60777c627702c06e4a37d
datetime: '2020-06-23T14:30:07+02:00'
fix_commit_message: "Bluetooth: add a mutex lock to avoid UAF in do_enale_set\n\n\
  In the case we set or free the global value listen_chan in\ndifferent threads, we\
  \ can encounter the UAF problems because\nthe method is not protected by any lock,\
  \ add one to avoid\nthis bug.\n\nBUG: KASAN: use-after-free in l2cap_chan_close+0x48/0x990\n\
  net/bluetooth/l2cap_core.c:730\nRead of size 8 at addr ffff888096950000 by task\
  \ kworker/1:102/2868\n\nCPU: 1 PID: 2868 Comm: kworker/1:102 Not tainted 5.5.0-syzkaller\
  \ #0\nHardware name: Google Google Compute Engine/Google Compute Engine,\nBIOS Google\
  \ 01/01/2011\nWorkqueue: events do_enable_set\nCall Trace:\n __dump_stack lib/dump_stack.c:77\
  \ [inline]\n dump_stack+0x1fb/0x318 lib/dump_stack.c:118\n print_address_description+0x74/0x5c0\
  \ mm/kasan/report.c:374\n __kasan_report+0x149/0x1c0 mm/kasan/report.c:506\n kasan_report+0x26/0x50\
  \ mm/kasan/common.c:641\n __asan_report_load8_noabort+0x14/0x20 mm/kasan/generic_report.c:135\n\
  \ l2cap_chan_close+0x48/0x990 net/bluetooth/l2cap_core.c:730\n do_enable_set+0x660/0x900\
  \ net/bluetooth/6lowpan.c:1074\n process_one_work+0x7f5/0x10f0 kernel/workqueue.c:2264\n\
  \ worker_thread+0xbbc/0x1630 kernel/workqueue.c:2410\n kthread+0x332/0x350 kernel/kthread.c:255\n\
  \ ret_from_fork+0x24/0x30 arch/x86/entry/entry_64.S:352\n\nAllocated by task 2870:\n\
  \ save_stack mm/kasan/common.c:72 [inline]\n set_track mm/kasan/common.c:80 [inline]\n\
  \ __kasan_kmalloc+0x118/0x1c0 mm/kasan/common.c:515\n kasan_kmalloc+0x9/0x10 mm/kasan/common.c:529\n\
  \ kmem_cache_alloc_trace+0x221/0x2f0 mm/slab.c:3551\n kmalloc include/linux/slab.h:555\
  \ [inline]\n kzalloc include/linux/slab.h:669 [inline]\n l2cap_chan_create+0x50/0x320\
  \ net/bluetooth/l2cap_core.c:446\n chan_create net/bluetooth/6lowpan.c:640 [inline]\n\
  \ bt_6lowpan_listen net/bluetooth/6lowpan.c:959 [inline]\n do_enable_set+0x6a4/0x900\
  \ net/bluetooth/6lowpan.c:1078\n process_one_work+0x7f5/0x10f0 kernel/workqueue.c:2264\n\
  \ worker_thread+0xbbc/0x1630 kernel/workqueue.c:2410\n kthread+0x332/0x350 kernel/kthread.c:255\n\
  \ ret_from_fork+0x24/0x30 arch/x86/entry/entry_64.S:352\n\nFreed by task 2870:\n\
  \ save_stack mm/kasan/common.c:72 [inline]\n set_track mm/kasan/common.c:80 [inline]\n\
  \ kasan_set_free_info mm/kasan/common.c:337 [inline]\n __kasan_slab_free+0x12e/0x1e0\
  \ mm/kasan/common.c:476\n kasan_slab_free+0xe/0x10 mm/kasan/common.c:485\n __cache_free\
  \ mm/slab.c:3426 [inline]\n kfree+0x10d/0x220 mm/slab.c:3757\n l2cap_chan_destroy\
  \ net/bluetooth/l2cap_core.c:484 [inline]\n kref_put include/linux/kref.h:65 [inline]\n\
  \ l2cap_chan_put+0x170/0x190 net/bluetooth/l2cap_core.c:498\n do_enable_set+0x66c/0x900\
  \ net/bluetooth/6lowpan.c:1075\n process_one_work+0x7f5/0x10f0 kernel/workqueue.c:2264\n\
  \ worker_thread+0xbbc/0x1630 kernel/workqueue.c:2410\n kthread+0x332/0x350 kernel/kthread.c:255\n\
  \ ret_from_fork+0x24/0x30 arch/x86/entry/entry_64.S:352\n\nThe buggy address belongs\
  \ to the object at ffff888096950000\n which belongs to the cache kmalloc-2k of size\
  \ 2048\nThe buggy address is located 0 bytes inside of\n 2048-byte region [ffff888096950000,\
  \ ffff888096950800)\nThe buggy address belongs to the page:\npage:ffffea00025a5400\
  \ refcount:1 mapcount:0 mapping:ffff8880aa400e00 index:0x0\nflags: 0xfffe0000000200(slab)\n\
  raw: 00fffe0000000200 ffffea00027d1548 ffffea0002397808 ffff8880aa400e00\nraw: 0000000000000000\
  \ ffff888096950000 0000000100000001 0000000000000000\npage dumped because: kasan:\
  \ bad access detected\n\nMemory state around the buggy address:\n ffff88809694ff00:\
  \ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n ffff88809694ff80: 00 00 00 00\
  \ 00 00 00 00 00 00 00 00 00 00 00 00\n>ffff888096950000: fb fb fb fb fb fb fb fb\
  \ fb fb fb fb fb fb fb fb\n                   ^\n ffff888096950080: fb fb fb fb\
  \ fb fb fb fb fb fb fb fb fb fb fb fb\n ffff888096950100: fb fb fb fb fb fb fb fb\
  \ fb fb fb fb fb fb fb fb\n==================================================================\n\
  \nReported-by: syzbot+96414aa0033c363d8458@syzkaller.appspotmail.com\nSigned-off-by:\
  \ Lihong Kou <koulihong@huawei.com>\nSigned-off-by: Marcel Holtmann <marcel@holtmann.org>\n"
submodule:
- net/bluetooth
hunk_count: 3
covered_count: 3
