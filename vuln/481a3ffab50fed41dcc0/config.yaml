id: 481a3ffab50fed41dcc0
bug_link: https://syzkaller.appspot.com/bug?extid=481a3ffab50fed41dcc0
title: 'KASAN: slab-out-of-bounds Read in f2fs_build_segment_manager'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 6a257471fa42c8c9c04a875cd3a2a22db148e0f0
fix_commit: 3a22e9ac71585bcb7667e44641f1bbb25295f0ce
datetime: '2020-09-29T02:12:41-07:00'
fix_commit_message: "f2fs: fix to do sanity check on segment/section count\n\nAs syzbot\
  \ reported:\n\nBUG: KASAN: slab-out-of-bounds in init_min_max_mtime fs/f2fs/segment.c:4710\
  \ [inline]\nBUG: KASAN: slab-out-of-bounds in f2fs_build_segment_manager+0x9302/0xa6d0\
  \ fs/f2fs/segment.c:4792\nRead of size 8 at addr ffff8880a1b934a8 by task syz-executor682/6878\n\
  \nCPU: 1 PID: 6878 Comm: syz-executor682 Not tainted 5.9.0-rc6-syzkaller #0\nHardware\
  \ name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011\n\
  Call Trace:\n __dump_stack lib/dump_stack.c:77 [inline]\n dump_stack+0x198/0x1fd\
  \ lib/dump_stack.c:118\n print_address_description.constprop.0.cold+0xae/0x497 mm/kasan/report.c:383\n\
  \ __kasan_report mm/kasan/report.c:513 [inline]\n kasan_report.cold+0x1f/0x37 mm/kasan/report.c:530\n\
  \ init_min_max_mtime fs/f2fs/segment.c:4710 [inline]\n f2fs_build_segment_manager+0x9302/0xa6d0\
  \ fs/f2fs/segment.c:4792\n f2fs_fill_super+0x381a/0x6e80 fs/f2fs/super.c:3633\n\
  \ mount_bdev+0x32e/0x3f0 fs/super.c:1417\n legacy_get_tree+0x105/0x220 fs/fs_context.c:592\n\
  \ vfs_get_tree+0x89/0x2f0 fs/super.c:1547\n do_new_mount fs/namespace.c:2875 [inline]\n\
  \ path_mount+0x1387/0x20a0 fs/namespace.c:3192\n do_mount fs/namespace.c:3205 [inline]\n\
  \ __do_sys_mount fs/namespace.c:3413 [inline]\n __se_sys_mount fs/namespace.c:3390\
  \ [inline]\n __x64_sys_mount+0x27f/0x300 fs/namespace.c:3390\n do_syscall_64+0x2d/0x70\
  \ arch/x86/entry/common.c:46\n entry_SYSCALL_64_after_hwframe+0x44/0xa9\n\nThe root\
  \ cause is: if segs_per_sec is larger than one, and segment count\nin last section\
  \ is less than segs_per_sec, we will suffer out-of-boundary\nmemory access on sit_i->sentries[]\
  \ in init_min_max_mtime().\n\nFix this by adding sanity check among segment count,\
  \ section count and\nsegs_per_sec value in sanity_check_raw_super().\n\nReported-by:\
  \ syzbot+481a3ffab50fed41dcc0@syzkaller.appspotmail.com\nSigned-off-by: Chao Yu\
  \ <yuchao0@huawei.com>\nSigned-off-by: Jaegeuk Kim <jaegeuk@kernel.org>\n"
submodule:
- fs/f2fs
hunk_count: 1
covered_count: 0
