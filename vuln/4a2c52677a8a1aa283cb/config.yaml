id: 4a2c52677a8a1aa283cb
bug_link: https://syzkaller.appspot.com/bug?extid=4a2c52677a8a1aa283cb
title: 'KMSAN: uninit-value in ip_tunnel_xmit (2)'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 4e3bbb33e6f36e4b05be1b1b9b02e3dd5aaa3e69
fix_commit: fdafed459998e2be0e877e6189b24cb7a0183224
datetime: '2020-10-13T18:35:29-07:00'
fix_commit_message: 'ip_gre: set dev->hard_header_len and dev->needed_headroom properly


  GRE tunnel has its own header_ops, ipgre_header_ops, and sets it

  conditionally. When it is set, it assumes the outer IP header is

  already created before ipgre_xmit().


  This is not true when we send packets through a raw packet socket,

  where L2 headers are supposed to be constructed by user. Packet

  socket calls dev_validate_header() to validate the header. But

  GRE tunnel does not set dev->hard_header_len, so that check can

  be simply bypassed, therefore uninit memory could be passed down

  to ipgre_xmit(). Similar for dev->needed_headroom.


  dev->hard_header_len is supposed to be the length of the header

  created by dev->header_ops->create(), so it should be used whenever

  header_ops is set, and dev->needed_headroom should be used when it

  is not set.


  Reported-and-tested-by: syzbot+4a2c52677a8a1aa283cb@syzkaller.appspotmail.com

  Cc: William Tu <u9012063@gmail.com>

  Acked-by: Willem de Bruijn <willemb@google.com>

  Signed-off-by: Cong Wang <xiyou.wangcong@gmail.com>

  Acked-by: Xie He <xie.he.0141@gmail.com>

  Signed-off-by: Jakub Kicinski <kuba@kernel.org>

  '
submodule:
- net/ipv4
hunk_count: 4
covered_count: 1
