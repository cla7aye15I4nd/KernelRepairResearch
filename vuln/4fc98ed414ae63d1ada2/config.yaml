id: 4fc98ed414ae63d1ada2
bug_link: https://syzkaller.appspot.com/bug?extid=4fc98ed414ae63d1ada2
title: 'INFO: task hung in z_erofs_runqueue'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 3fc3e45fcdeaad4b7660b560fcbc827eb733f58e
fix_commit: 9e2f9d34dd12e6e5b244ec488bcebd0c2d566c50
datetime: '2024-09-10T15:26:15+08:00'
fix_commit_message: "erofs: handle overlapped pclusters out of crafted images properly\n\
  \nsyzbot reported a task hang issue due to a deadlock case where it is\nwaiting\
  \ for the folio lock of a cached folio that will be used for\ncache I/Os.\n\nAfter\
  \ looking into the crafted fuzzed image, I found it's formed with\nseveral overlapped\
  \ big pclusters as below:\n\n Ext:   logical offset   |  length :     physical offset\
  \    |  length\n   0:        0..   16384 |   16384 :     151552..    167936 |  \
  \ 16384\n   1:    16384..   32768 |   16384 :     155648..    172032 |   16384\n\
  \   2:    32768..   49152 |   16384 :  537223168.. 537239552 |   16384\n...\n\n\
  Here, extent 0/1 are physically overlapped although it's entirely\n_impossible_\
  \ for normal filesystem images generated by mkfs.\n\nFirst, managed folios containing\
  \ compressed data will be marked as\nup-to-date and then unlocked immediately (unlike\
  \ in-place folios) when\ncompressed I/Os are complete.  If physical blocks are not\
  \ submitted in\nthe incremental order, there should be separate BIOs to avoid dependency\n\
  issues.  However, the current code mis-arranges z_erofs_fill_bio_vec()\nand BIO\
  \ submission which causes unexpected BIO waits.\n\nSecond, managed folios will be\
  \ connected to their own pclusters for\nefficient inter-queries.  However, this\
  \ is somewhat hard to implement\neasily if overlapped big pclusters exist.  Again,\
  \ these only appear in\nfuzzed images so let's simply fall back to temporary short-lived\
  \ pages\nfor correctness.\n\nAdditionally, it justifies that referenced managed\
  \ folios cannot be\ntruncated for now and reverts part of commit 2080ca1ed3e4 (\"\
  erofs: tidy\nup `struct z_erofs_bvec`\") for simplicity although it shouldn't be\
  \ any\ndifference.\n\nReported-by: syzbot+4fc98ed414ae63d1ada2@syzkaller.appspotmail.com\n\
  Reported-by: syzbot+de04e06b28cfecf2281c@syzkaller.appspotmail.com\nReported-by:\
  \ syzbot+c8c8238b394be4a1087d@syzkaller.appspotmail.com\nTested-by: syzbot+4fc98ed414ae63d1ada2@syzkaller.appspotmail.com\n\
  Closes: https://lore.kernel.org/r/0000000000002fda01061e334873@google.com\nFixes:\
  \ 8e6c8fa9f2e9 (\"erofs: enable big pcluster feature\")\nSigned-off-by: Gao Xiang\
  \ <hsiangkao@linux.alibaba.com>\nLink: https://lore.kernel.org/r/20240910070847.3356592-1-hsiangkao@linux.alibaba.com\n"
submodule:
- fs/erofs
hunk_count: 7
covered_count: 7
