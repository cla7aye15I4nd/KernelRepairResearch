id: f82b36bffae7ef78b6a7
bug_link: https://syzkaller.appspot.com/bug?extid=f82b36bffae7ef78b6a7
title: 'KASAN: slab-use-after-free Read in lockref_get_not_dead (2)'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: b831f83e40a24f07c8dcba5be408d93beedc820f
fix_commit: 4e32c25b58b945f976435bbe51f39b32d714052e
datetime: '2024-09-06T11:08:58-07:00'
fix_commit_message: 'libfs: fix get_stashed_dentry()


  get_stashed_dentry() tries to optimistically retrieve a stashed dentry

  from a provided location.  It needs to ensure to hold rcu lock before it

  dereference the stashed location to prevent UAF issues.  Use

  rcu_dereference() instead of READ_ONCE() it''s effectively equivalent

  with some lockdep bells and whistles and it communicates clearly that

  this expects rcu protection.


  Link: https://lore.kernel.org/r/20240906-vfs-hotfix-5959800ffa68@brauner

  Fixes: 07fd7c329839 ("libfs: add path_from_stashed()")

  Reported-by: syzbot+f82b36bffae7ef78b6a7@syzkaller.appspotmail.com

  Fixes: syzbot+f82b36bffae7ef78b6a7@syzkaller.appspotmail.com

  Reported-by: syzbot+cbe4b96e1194b0e34db6@syzkaller.appspotmail.com

  Fixes: syzbot+cbe4b96e1194b0e34db6@syzkaller.appspotmail.com

  Signed-off-by: Christian Brauner <brauner@kernel.org>

  Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

  '
submodule:
- fs
hunk_count: 2
covered_count: 2
