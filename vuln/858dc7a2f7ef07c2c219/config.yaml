id: 858dc7a2f7ef07c2c219
bug_link: https://syzkaller.appspot.com/bug?extid=858dc7a2f7ef07c2c219
title: 'KASAN: vmalloc-out-of-bounds Write in imageblit'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 4fc2d3cd6d3a487a9fb79ebc81f7ae86a7dace7a
fix_commit: 3b0c406124719b625b1aba431659f5cdc24a982c
datetime: '2021-07-21T12:41:28+02:00'
fix_commit_message: 'tty: Fix out-of-bound vmalloc access in imageblit


  This issue happens when a userspace program does an ioctl

  FBIOPUT_VSCREENINFO passing the fb_var_screeninfo struct

  containing only the fields xres, yres, and bits_per_pixel

  with values.


  If this struct is the same as the previous ioctl, the

  vc_resize() detects it and doesn''t call the resize_screen(),

  leaving the fb_var_screeninfo incomplete. And this leads to

  the updatescrollmode() calculates a wrong value to

  fbcon_display->vrows, which makes the real_y() return a

  wrong value of y, and that value, eventually, causes

  the imageblit to access an out-of-bound address value.


  To solve this issue I made the resize_screen() be called

  even if the screen does not need any resizing, so it will

  "fix and fill" the fb_var_screeninfo independently.


  Cc: stable <stable@vger.kernel.org> # after 5.15-rc2 is out, give it time to bake

  Reported-and-tested-by: syzbot+858dc7a2f7ef07c2c219@syzkaller.appspotmail.com

  Signed-off-by: Igor Matheus Andrade Torrente <igormtorrente@gmail.com>

  Link: https://lore.kernel.org/r/20210628134509.15895-1-igormtorrente@gmail.com

  Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

  '
submodule:
- drivers/tty/vt
hunk_count: 1
covered_count: 0
