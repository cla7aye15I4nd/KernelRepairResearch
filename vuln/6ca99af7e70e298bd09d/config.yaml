id: 6ca99af7e70e298bd09d
bug_link: https://syzkaller.appspot.com/bug?extid=6ca99af7e70e298bd09d
title: 'BUG: corrupted list in nft_obj_del'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: cd77e75b5e4632d05d61fec5383052713c8ede2b
fix_commit: 335178d5429c4cee61b58f4ac80688f556630818
datetime: '2020-01-16T14:22:33+01:00'
fix_commit_message: "netfilter: nf_tables: fix flowtable list del corruption\n\nsyzbot\
  \ reported following crash:\n\n  list_del corruption, ffff88808c9bb000->prev is\
  \ LIST_POISON2 (dead000000000122)\n  [..]\n  Call Trace:\n   __list_del_entry include/linux/list.h:131\
  \ [inline]\n   list_del_rcu include/linux/rculist.h:148 [inline]\n   nf_tables_commit+0x1068/0x3b30\
  \ net/netfilter/nf_tables_api.c:7183\n   [..]\n\nThe commit transaction list has:\n\
  \nNFT_MSG_NEWTABLE\nNFT_MSG_NEWFLOWTABLE\nNFT_MSG_DELFLOWTABLE\nNFT_MSG_DELTABLE\n\
  \nA missing generation check during DELTABLE processing causes it to queue\nthe\
  \ DELFLOWTABLE operation a second time, so we corrupt the list here:\n\n  case NFT_MSG_DELFLOWTABLE:\n\
  \     list_del_rcu(&nft_trans_flowtable(trans)->list);\n     nf_tables_flowtable_notify(&trans->ctx,\n\
  \nbecause we have two different DELFLOWTABLE transactions for the same\nflowtable.\
  \  We then call list_del_rcu() twice for the same flowtable->list.\n\nThe object\
  \ handling seems to suffer from the same bug so add a generation\ncheck too and\
  \ only queue delete transactions for flowtables/objects that\nare still active in\
  \ the next generation.\n\nReported-by: syzbot+37a6804945a3a13b1572@syzkaller.appspotmail.com\n\
  Fixes: 3b49e2e94e6eb (\"netfilter: nf_tables: add flow table netlink frontend\"\
  )\nSigned-off-by: Florian Westphal <fw@strlen.de>\nSigned-off-by: Pablo Neira Ayuso\
  \ <pablo@netfilter.org>\n"
submodule:
- net/netfilter
hunk_count: 1
covered_count: 0
