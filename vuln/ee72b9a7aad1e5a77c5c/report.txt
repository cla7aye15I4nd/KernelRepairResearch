======================================================
WARNING: possible circular locking dependency detected
6.11.0-rc4-syzkaller-00008-g6e4436539ae1 #0 Not tainted
------------------------------------------------------
syz.3.592/7867 is trying to acquire lock:
ffff88807bb63fc8 (&ea_inode->i_rwsem#8/1){+.+.}-{3:3}, at: inode_lock include/linux/fs.h:799 [inline]
ffff88807bb63fc8 (&ea_inode->i_rwsem#8/1){+.+.}-{3:3}, at: ext4_xattr_inode_iget+0x3fe/0x580 fs/ext4/xattr.c:461

but task is already holding lock:
ffff88807bb60c80 (&ei->i_data_sem/3){++++}-{3:3}, at: ext4_truncate+0x991/0x11a0 fs/ext4/inode.c:4213

which lock already depends on the new lock.


the existing dependency chain (in reverse order) is:

-> #1 (&ei->i_data_sem/3){++++}-{3:3}:
       lock_acquire+0x1ed/0x550 kernel/locking/lockdep.c:5759
       down_write+0x99/0x220 kernel/locking/rwsem.c:1579
       ext4_update_i_disksize fs/ext4/ext4.h:3395 [inline]
       ext4_xattr_inode_write fs/ext4/xattr.c:1452 [inline]
       ext4_xattr_inode_lookup_create+0x1707/0x1f90 fs/ext4/xattr.c:1602
       ext4_xattr_ibody_set+0x214/0x730 fs/ext4/xattr.c:2269
       ext4_xattr_set_handle+0xba6/0x1580 fs/ext4/xattr.c:2446
       ext4_xattr_set+0x241/0x3d0 fs/ext4/xattr.c:2560
       __vfs_setxattr+0x46a/0x4a0 fs/xattr.c:200
       __vfs_setxattr_noperm+0x12e/0x660 fs/xattr.c:234
       vfs_setxattr+0x221/0x430 fs/xattr.c:321
       do_setxattr fs/xattr.c:629 [inline]
       path_setxattr+0x37e/0x4d0 fs/xattr.c:658
       __do_sys_setxattr fs/xattr.c:676 [inline]
       __se_sys_setxattr fs/xattr.c:672 [inline]
       __x64_sys_setxattr+0xbb/0xd0 fs/xattr.c:672
       do_syscall_x64 arch/x86/entry/common.c:52 [inline]
       do_syscall_64+0xf3/0x230 arch/x86/entry/common.c:83
       entry_SYSCALL_64_after_hwframe+0x77/0x7f

-> #0 (&ea_inode->i_rwsem#8/1){+.+.}-{3:3}:
       check_prev_add kernel/locking/lockdep.c:3133 [inline]
       check_prevs_add kernel/locking/lockdep.c:3252 [inline]
       validate_chain+0x18e0/0x5900 kernel/locking/lockdep.c:3868
       __lock_acquire+0x137a/0x2040 kernel/locking/lockdep.c:5142
       lock_acquire+0x1ed/0x550 kernel/locking/lockdep.c:5759
       down_write+0x99/0x220 kernel/locking/rwsem.c:1579
       inode_lock include/linux/fs.h:799 [inline]
       ext4_xattr_inode_iget+0x3fe/0x580 fs/ext4/xattr.c:461
       ext4_xattr_inode_get+0x167/0x490 fs/ext4/xattr.c:535
       ext4_xattr_move_to_block fs/ext4/xattr.c:2642 [inline]
       ext4_xattr_make_inode_space fs/ext4/xattr.c:2744 [inline]
       ext4_expand_extra_isize_ea+0xf21/0x1cf0 fs/ext4/xattr.c:2836
       __ext4_expand_extra_isize+0x2fb/0x3e0 fs/ext4/inode.c:5861
       ext4_try_to_expand_extra_isize fs/ext4/inode.c:5904 [inline]
       __ext4_mark_inode_dirty+0x524/0x880 fs/ext4/inode.c:5982
       ext4_ext_truncate+0x9f/0x2b0 fs/ext4/extents.c:4432
       ext4_truncate+0xa18/0x11a0 fs/ext4/inode.c:4218
       ext4_evict_inode+0x90f/0xf50 fs/ext4/inode.c:258
       evict+0x534/0x950 fs/inode.c:704
       __dentry_kill+0x20d/0x630 fs/dcache.c:610
       dput+0x19f/0x2b0 fs/dcache.c:852
       do_renameat2+0xda1/0x13f0 fs/namei.c:5125
       __do_sys_renameat2 fs/namei.c:5157 [inline]
       __se_sys_renameat2 fs/namei.c:5154 [inline]
       __x64_sys_renameat2+0xce/0xe0 fs/namei.c:5154
       do_syscall_x64 arch/x86/entry/common.c:52 [inline]
       do_syscall_64+0xf3/0x230 arch/x86/entry/common.c:83
       entry_SYSCALL_64_after_hwframe+0x77/0x7f

other info that might help us debug this:

 Possible unsafe locking scenario:

       CPU0                    CPU1
       ----                    ----
  lock(&ei->i_data_sem/3);
                               lock(&ea_inode->i_rwsem#8/1);
                               lock(&ei->i_data_sem/3);
  lock(&ea_inode->i_rwsem#8/1);

 *** DEADLOCK ***

7 locks held by syz.3.592/7867:
 #0: ffff8880566ca420 (sb_writers#4){++++}-{0:0}, at: mnt_want_write+0x3f/0x90 fs/namespace.c:515
 #1: ffff8880566ca730 (&type->s_vfs_rename_key#4){+.+.}-{3:3}, at: lock_rename fs/namei.c:3151 [inline]
 #1: ffff8880566ca730 (&type->s_vfs_rename_key#4){+.+.}-{3:3}, at: do_renameat2+0x5cf/0x13f0 fs/namei.c:5058
 #2: ffff88805959c9c0 (&type->i_mutex_dir_key#3/1){+.+.}-{3:3}, at: inode_lock_nested include/linux/fs.h:834 [inline]
 #2: ffff88805959c9c0 (&type->i_mutex_dir_key#3/1){+.+.}-{3:3}, at: lock_two_directories+0x145/0x220 fs/namei.c:3117
 #3: ffff88807bb603f8 (&type->i_mutex_dir_key#3/5){+.+.}-{3:3}, at: inode_lock_nested include/linux/fs.h:834 [inline]
 #3: ffff88807bb603f8 (&type->i_mutex_dir_key#3/5){+.+.}-{3:3}, at: lock_two_directories+0x16f/0x220 fs/namei.c:3118
 #4: ffff8880566ca610 (sb_internal){++++}-{0:0}, at: __sb_start_write include/linux/fs.h:1675 [inline]
 #4: ffff8880566ca610 (sb_internal){++++}-{0:0}, at: sb_start_intwrite include/linux/fs.h:1858 [inline]
 #4: ffff8880566ca610 (sb_internal){++++}-{0:0}, at: ext4_evict_inode+0x2f4/0xf50 fs/ext4/inode.c:212
 #5: ffff88807bb60c80 (&ei->i_data_sem/3){++++}-{3:3}, at: ext4_truncate+0x991/0x11a0 fs/ext4/inode.c:4213
 #6: ffff88807bb60ac0 (&ei->xattr_sem){++++}-{3:3}, at: ext4_write_trylock_xattr fs/ext4/xattr.h:162 [inline]
 #6: ffff88807bb60ac0 (&ei->xattr_sem){++++}-{3:3}, at: ext4_try_to_expand_extra_isize fs/ext4/inode.c:5901 [inline]
 #6: ffff88807bb60ac0 (&ei->xattr_sem){++++}-{3:3}, at: __ext4_mark_inode_dirty+0x491/0x880 fs/ext4/inode.c:5982

stack backtrace:
CPU: 1 UID: 0 PID: 7867 Comm: syz.3.592 Not tainted 6.11.0-rc4-syzkaller-00008-g6e4436539ae1 #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 08/06/2024
Call Trace:
 <TASK>
 __dump_stack lib/dump_stack.c:93 [inline]
 dump_stack_lvl+0x241/0x360 lib/dump_stack.c:119
 check_noncircular+0x36a/0x4a0 kernel/locking/lockdep.c:2186
 check_prev_add kernel/locking/lockdep.c:3133 [inline]
 check_prevs_add kernel/locking/lockdep.c:3252 [inline]
 validate_chain+0x18e0/0x5900 kernel/locking/lockdep.c:3868
 __lock_acquire+0x137a/0x2040 kernel/locking/lockdep.c:5142
 lock_acquire+0x1ed/0x550 kernel/locking/lockdep.c:5759
 down_write+0x99/0x220 kernel/locking/rwsem.c:1579
 inode_lock include/linux/fs.h:799 [inline]
 ext4_xattr_inode_iget+0x3fe/0x580 fs/ext4/xattr.c:461
 ext4_xattr_inode_get+0x167/0x490 fs/ext4/xattr.c:535
 ext4_xattr_move_to_block fs/ext4/xattr.c:2642 [inline]
 ext4_xattr_make_inode_space fs/ext4/xattr.c:2744 [inline]
 ext4_expand_extra_isize_ea+0xf21/0x1cf0 fs/ext4/xattr.c:2836
 __ext4_expand_extra_isize+0x2fb/0x3e0 fs/ext4/inode.c:5861
 ext4_try_to_expand_extra_isize fs/ext4/inode.c:5904 [inline]
 __ext4_mark_inode_dirty+0x524/0x880 fs/ext4/inode.c:5982
 ext4_ext_truncate+0x9f/0x2b0 fs/ext4/extents.c:4432
 ext4_truncate+0xa18/0x11a0 fs/ext4/inode.c:4218
 ext4_evict_inode+0x90f/0xf50 fs/ext4/inode.c:258
 evict+0x534/0x950 fs/inode.c:704
 __dentry_kill+0x20d/0x630 fs/dcache.c:610
 dput+0x19f/0x2b0 fs/dcache.c:852
 do_renameat2+0xda1/0x13f0 fs/namei.c:5125
 __do_sys_renameat2 fs/namei.c:5157 [inline]
 __se_sys_renameat2 fs/namei.c:5154 [inline]
 __x64_sys_renameat2+0xce/0xe0 fs/namei.c:5154
 do_syscall_x64 arch/x86/entry/common.c:52 [inline]
 do_syscall_64+0xf3/0x230 arch/x86/entry/common.c:83
 entry_SYSCALL_64_after_hwframe+0x77/0x7f
RIP: 0033:0x7f2d0df79e79
Code: ff ff c3 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 40 00 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 a8 ff ff ff f7 d8 64 89 01 48
RSP: 002b:00007f2d0ee09038 EFLAGS: 00000246 ORIG_RAX: 000000000000013c
RAX: ffffffffffffffda RBX: 00007f2d0e115f80 RCX: 00007f2d0df79e79
RDX: 0000000000000005 RSI: 0000000020000080 RDI: 0000000000000006
RBP: 00007f2d0dfe7916 R08: 0000000000000000 R09: 0000000000000000
R10: 00000000200000c0 R11: 0000000000000246 R12: 0000000000000000
R13: 0000000000000000 R14: 00007f2d0e115f80 R15: 00007ffeceaa3af8
 </TASK>
