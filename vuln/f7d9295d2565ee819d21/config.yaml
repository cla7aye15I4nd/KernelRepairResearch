id: f7d9295d2565ee819d21
bug_link: https://syzkaller.appspot.com/bug?extid=f7d9295d2565ee819d21
title: general protection fault in pm_qos_update_target
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: dca947d4d26dbf925a64a6cfb2ddbc035e831a3d
fix_commit: 3c3201f8c7bb77eb53b08a3ca8d9a4ddc500b4c0
datetime: '2022-03-22T20:56:42+01:00'
fix_commit_message: 'ALSA: pcm: Fix races among concurrent prepare and hw_params/hw_free
  calls


  Like the previous fixes to hw_params and hw_free ioctl races, we need

  to paper over the concurrent prepare ioctl calls against hw_params and

  hw_free, too.


  This patch implements the locking with the existing

  runtime->buffer_mutex for prepare ioctls.  Unlike the previous case

  for snd_pcm_hw_hw_params() and snd_pcm_hw_free(), snd_pcm_prepare() is

  performed to the linked streams, hence the lock can''t be applied

  simply on the top.  For tracking the lock in each linked substream, we

  modify snd_pcm_action_group() slightly and apply the buffer_mutex for

  the case stream_lock=false (formerly there was no lock applied)

  there.


  Cc: <stable@vger.kernel.org>

  Reviewed-by: Jaroslav Kysela <perex@perex.cz>

  Link: https://lore.kernel.org/r/20220322170720.3529-4-tiwai@suse.de

  Signed-off-by: Takashi Iwai <tiwai@suse.de>

  '
submodule:
- sound/core
hunk_count: 3
covered_count: 0
