id: abdba5bc6de135d7622f00756da97998425b6de5
bug_link: https://syzkaller.appspot.com/bug?extid=abdba5bc6de135d7622f00756da97998425b6de5
title: 'INFO: task hung in lo_ioctl'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: c8a83a6b54d0ca078de036aafb3f6af58c1dc5eb
fix_commit: 04906b2f542c23626b0ef6219b808406f8dddbe9
datetime: '2019-01-15T07:30:56-07:00'
fix_commit_message: "blockdev: Fix livelocks on loop device\n\nbd_set_size() updates\
  \ also block device's block size. This is somewhat\nunexpected from its name and\
  \ at this point, only blkdev_open() uses this\nfunctionality. Furthermore, this\
  \ can result in changing block size under\na filesystem mounted on a loop device\
  \ which leads to livelocks inside\n__getblk_gfp() like:\n\nSending NMI from CPU\
  \ 0 to CPUs 1:\nNMI backtrace for cpu 1\nCPU: 1 PID: 10863 Comm: syz-executor0 Not\
  \ tainted 4.18.0-rc5+ #151\nHardware name: Google Google Compute Engine/Google Compute\
  \ Engine, BIOS Google\n01/01/2011\nRIP: 0010:__sanitizer_cov_trace_pc+0x3f/0x50\
  \ kernel/kcov.c:106\n...\nCall Trace:\n init_page_buffers+0x3e2/0x530 fs/buffer.c:904\n\
  \ grow_dev_page fs/buffer.c:947 [inline]\n grow_buffers fs/buffer.c:1009 [inline]\n\
  \ __getblk_slow fs/buffer.c:1036 [inline]\n __getblk_gfp+0x906/0xb10 fs/buffer.c:1313\n\
  \ __bread_gfp+0x2d/0x310 fs/buffer.c:1347\n sb_bread include/linux/buffer_head.h:307\
  \ [inline]\n fat12_ent_bread+0x14e/0x3d0 fs/fat/fatent.c:75\n fat_ent_read_block\
  \ fs/fat/fatent.c:441 [inline]\n fat_alloc_clusters+0x8ce/0x16e0 fs/fat/fatent.c:489\n\
  \ fat_add_cluster+0x7a/0x150 fs/fat/inode.c:101\n __fat_get_block fs/fat/inode.c:148\
  \ [inline]\n...\n\nTrivial reproducer for the problem looks like:\n\ntruncate -s\
  \ 1G /tmp/image\nlosetup /dev/loop0 /tmp/image\nmkfs.ext4 -b 1024 /dev/loop0\nmount\
  \ -t ext4 /dev/loop0 /mnt\nlosetup -c /dev/loop0\nl /mnt\n\nFix the problem by moving\
  \ initialization of a block device block size\ninto a separate function and call\
  \ it when needed.\n\nThanks to Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>\
  \ for help with\ndebugging the problem.\n\nReported-by: syzbot+9933e4476f365f5d5a1b@syzkaller.appspotmail.com\n\
  Signed-off-by: Jan Kara <jack@suse.cz>\nSigned-off-by: Jens Axboe <axboe@kernel.dk>\n"
submodule:
- fs
hunk_count: 4
covered_count: 0
