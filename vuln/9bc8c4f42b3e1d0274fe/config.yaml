id: 9bc8c4f42b3e1d0274fe
bug_link: https://syzkaller.appspot.com/bug?extid=9bc8c4f42b3e1d0274fe
title: 'KASAN: slab-out-of-bounds Read in selinux_xfrm_alloc_user'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 171d449a028573b2f0acdc7f31ecbb045391b320
fix_commit: a1a7e3a36e01ca6e67014f8cf673cb8e47be5550
datetime: '2020-02-12T11:06:32+01:00'
fix_commit_message: "xfrm: add the missing verify_sec_ctx_len check in xfrm_add_acquire\n\
  \nWithout doing verify_sec_ctx_len() check in xfrm_add_acquire(), it may be\nout-of-bounds\
  \ to access uctx->ctx_str with uctx->ctx_len, as noticed by\nsyz:\n\n  BUG: KASAN:\
  \ slab-out-of-bounds in selinux_xfrm_alloc_user+0x237/0x430\n  Read of size 768\
  \ at addr ffff8880123be9b4 by task syz-executor.1/11650\n\n  Call Trace:\n   dump_stack+0xe8/0x16e\n\
  \   print_address_description.cold.3+0x9/0x23b\n   kasan_report.cold.4+0x64/0x95\n\
  \   memcpy+0x1f/0x50\n   selinux_xfrm_alloc_user+0x237/0x430\n   security_xfrm_policy_alloc+0x5c/0xb0\n\
  \   xfrm_policy_construct+0x2b1/0x650\n   xfrm_add_acquire+0x21d/0xa10\n   xfrm_user_rcv_msg+0x431/0x6f0\n\
  \   netlink_rcv_skb+0x15a/0x410\n   xfrm_netlink_rcv+0x6d/0x90\n   netlink_unicast+0x50e/0x6a0\n\
  \   netlink_sendmsg+0x8ae/0xd40\n   sock_sendmsg+0x133/0x170\n   ___sys_sendmsg+0x834/0x9a0\n\
  \   __sys_sendmsg+0x100/0x1e0\n   do_syscall_64+0xe5/0x660\n   entry_SYSCALL_64_after_hwframe+0x6a/0xdf\n\
  \nSo fix it by adding the missing verify_sec_ctx_len check there.\n\nFixes: 980ebd25794f\
  \ (\"[IPSEC]: Sync series - acquire insert\")\nReported-by: Hangbin Liu <liuhangbin@gmail.com>\n\
  Signed-off-by: Xin Long <lucien.xin@gmail.com>\nSigned-off-by: Steffen Klassert\
  \ <steffen.klassert@secunet.com>\n"
submodule:
- net/xfrm
hunk_count: 1
covered_count: 1
