id: 9765367bb86a19d38732
bug_link: https://syzkaller.appspot.com/bug?extid=9765367bb86a19d38732
title: general protection fault in jffs2_parse_param
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 89f40d0a9656aa73bf4a6d905d28952381b6cb53
fix_commit: a61df3c413e49b0042f9caf774c58512d1cc71b7
datetime: '2020-12-13T21:57:21+01:00'
fix_commit_message: "jffs2: Fix NULL pointer dereference in rp_size fs option parsing\n\
  \nsyzkaller found the following JFFS2 splat:\n\n  Unable to handle kernel paging\
  \ request at virtual address dfffa00000000001\n  Mem abort info:\n    ESR = 0x96000004\n\
  \    EC = 0x25: DABT (current EL), IL = 32 bits\n    SET = 0, FnV = 0\n    EA =\
  \ 0, S1PTW = 0\n  Data abort info:\n    ISV = 0, ISS = 0x00000004\n    CM = 0, WnR\
  \ = 0\n  [dfffa00000000001] address between user and kernel address ranges\n  Internal\
  \ error: Oops: 96000004 [#1] SMP\n  Dumping ftrace buffer:\n     (ftrace buffer\
  \ empty)\n  Modules linked in:\n  CPU: 0 PID: 12745 Comm: syz-executor.5 Tainted:\
  \ G S                5.9.0-rc8+ #98\n  Hardware name: linux,dummy-virt (DT)\n  pstate:\
  \ 20400005 (nzCv daif +PAN -UAO BTYPE=--)\n  pc : jffs2_parse_param+0x138/0x308\
  \ fs/jffs2/super.c:206\n  lr : jffs2_parse_param+0x108/0x308 fs/jffs2/super.c:205\n\
  \  sp : ffff000022a57910\n  x29: ffff000022a57910 x28: 0000000000000000\n  x27:\
  \ ffff000057634008 x26: 000000000000d800\n  x25: 000000000000d800 x24: ffff0000271a9000\n\
  \  x23: ffffa0001adb5dc0 x22: ffff000023fdcf00\n  x21: 1fffe0000454af2c x20: ffff000024cc9400\n\
  \  x19: 0000000000000000 x18: 0000000000000000\n  x17: 0000000000000000 x16: ffffa000102dbdd0\n\
  \  x15: 0000000000000000 x14: ffffa000109e44bc\n  x13: ffffa00010a3a26c x12: ffff80000476e0b3\n\
  \  x11: 1fffe0000476e0b2 x10: ffff80000476e0b2\n  x9 : ffffa00010a3ad60 x8 : ffff000023b70593\n\
  \  x7 : 0000000000000003 x6 : 00000000f1f1f1f1\n  x5 : ffff000023fdcf00 x4 : 0000000000000002\n\
  \  x3 : ffffa00010000000 x2 : 0000000000000001\n  x1 : dfffa00000000000 x0 : 0000000000000008\n\
  \  Call trace:\n   jffs2_parse_param+0x138/0x308 fs/jffs2/super.c:206\n   vfs_parse_fs_param+0x234/0x4e8\
  \ fs/fs_context.c:117\n   vfs_parse_fs_string+0xe8/0x148 fs/fs_context.c:161\n \
  \  generic_parse_monolithic+0x17c/0x208 fs/fs_context.c:201\n   parse_monolithic_mount_data+0x7c/0xa8\
  \ fs/fs_context.c:649\n   do_new_mount fs/namespace.c:2871 [inline]\n   path_mount+0x548/0x1da8\
  \ fs/namespace.c:3192\n   do_mount+0x124/0x138 fs/namespace.c:3205\n   __do_sys_mount\
  \ fs/namespace.c:3413 [inline]\n   __se_sys_mount fs/namespace.c:3390 [inline]\n\
  \   __arm64_sys_mount+0x164/0x238 fs/namespace.c:3390\n   __invoke_syscall arch/arm64/kernel/syscall.c:36\
  \ [inline]\n   invoke_syscall arch/arm64/kernel/syscall.c:48 [inline]\n   el0_svc_common.constprop.0+0x15c/0x598\
  \ arch/arm64/kernel/syscall.c:149\n   do_el0_svc+0x60/0x150 arch/arm64/kernel/syscall.c:195\n\
  \   el0_svc+0x34/0xb0 arch/arm64/kernel/entry-common.c:226\n   el0_sync_handler+0xc8/0x5b4\
  \ arch/arm64/kernel/entry-common.c:236\n   el0_sync+0x15c/0x180 arch/arm64/kernel/entry.S:663\n\
  \  Code: d2d40001 f2fbffe1 91002260 d343fc02 (38e16841)\n  ---[ end trace 4edf690313deda44\
  \ ]---\n\nThis is because since ec10a24f10c8, the option parsing happens before\n\
  fill_super and so the MTD device isn't associated with the filesystem.\nDefer the\
  \ size check until there is a valid association.\n\nFixes: ec10a24f10c8 (\"vfs:\
  \ Convert jffs2 to use the new mount API\")\nCc: <stable@vger.kernel.org>\nCc: David\
  \ Howells <dhowells@redhat.com>\nSigned-off-by: Jamie Iles <jamie@nuviainc.com>\n\
  Signed-off-by: Richard Weinberger <richard@nod.at>\n"
submodule:
- fs/jffs2
hunk_count: 2
covered_count: 1
