id: bd051aba086537515cdb
bug_link: https://syzkaller.appspot.com/bug?extid=bd051aba086537515cdb
title: possible deadlock in team_vlan_rx_add_vid
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: f7b2a56e1f3dcbdb4cf09b2b63e859ffe0e09df8
fix_commit: 471b83bd8bbe4e89743683ef8ecb78f7029d8288
datetime: '2018-10-04T13:55:40-07:00'
fix_commit_message: "team: Forbid enslaving team device to itself\n\nteam's ndo_add_slave()\
  \ acquires 'team->lock' and later tries to open the\nnewly enslaved device via dev_open().\
  \ This emits a 'NETDEV_UP' event\nthat causes the VLAN driver to add VLAN 0 on the\
  \ team device. team's\nndo_vlan_rx_add_vid() will also try to acquire 'team->lock'\
  \ and\ndeadlock.\n\nFix this by checking early at the enslavement function that\
  \ a team\ndevice is not being enslaved to itself.\n\nA similar check was added to\
  \ the bond driver in commit 09a89c219baf\n(\"bonding: disallow enslaving a bond\
  \ to itself\").\n\nWARNING: possible recursive locking detected\n4.18.0-rc7+ #176\
  \ Not tainted\n--------------------------------------------\nsyz-executor4/6391\
  \ is trying to acquire lock:\n(____ptrval____) (&team->lock){+.+.}, at: team_vlan_rx_add_vid+0x3b/0x1e0\
  \ drivers/net/team/team.c:1868\n\nbut task is already holding lock:\n(____ptrval____)\
  \ (&team->lock){+.+.}, at: team_add_slave+0xdb/0x1c30 drivers/net/team/team.c:1947\n\
  \nother info that might help us debug this:\n Possible unsafe locking scenario:\n\
  \n       CPU0\n       ----\n  lock(&team->lock);\n  lock(&team->lock);\n\n *** DEADLOCK\
  \ ***\n\n May be due to missing lock nesting notation\n\n2 locks held by syz-executor4/6391:\n\
  \ #0: (____ptrval____) (rtnl_mutex){+.+.}, at: rtnl_lock net/core/rtnetlink.c:77\
  \ [inline]\n #0: (____ptrval____) (rtnl_mutex){+.+.}, at: rtnetlink_rcv_msg+0x412/0xc30\
  \ net/core/rtnetlink.c:4662\n #1: (____ptrval____) (&team->lock){+.+.}, at: team_add_slave+0xdb/0x1c30\
  \ drivers/net/team/team.c:1947\n\nstack backtrace:\nCPU: 1 PID: 6391 Comm: syz-executor4\
  \ Not tainted 4.18.0-rc7+ #176\nHardware name: Google Google Compute Engine/Google\
  \ Compute Engine, BIOS Google 01/01/2011\nCall Trace:\n __dump_stack lib/dump_stack.c:77\
  \ [inline]\n dump_stack+0x1c9/0x2b4 lib/dump_stack.c:113\n print_deadlock_bug kernel/locking/lockdep.c:1765\
  \ [inline]\n check_deadlock kernel/locking/lockdep.c:1809 [inline]\n validate_chain\
  \ kernel/locking/lockdep.c:2405 [inline]\n __lock_acquire.cold.64+0x1fb/0x486 kernel/locking/lockdep.c:3435\n\
  \ lock_acquire+0x1e4/0x540 kernel/locking/lockdep.c:3924\n __mutex_lock_common kernel/locking/mutex.c:757\
  \ [inline]\n __mutex_lock+0x176/0x1820 kernel/locking/mutex.c:894\n mutex_lock_nested+0x16/0x20\
  \ kernel/locking/mutex.c:909\n team_vlan_rx_add_vid+0x3b/0x1e0 drivers/net/team/team.c:1868\n\
  \ vlan_add_rx_filter_info+0x14a/0x1d0 net/8021q/vlan_core.c:210\n __vlan_vid_add\
  \ net/8021q/vlan_core.c:278 [inline]\n vlan_vid_add+0x63e/0x9d0 net/8021q/vlan_core.c:308\n\
  \ vlan_device_event.cold.12+0x2a/0x2f net/8021q/vlan.c:381\n notifier_call_chain+0x180/0x390\
  \ kernel/notifier.c:93\n __raw_notifier_call_chain kernel/notifier.c:394 [inline]\n\
  \ raw_notifier_call_chain+0x2d/0x40 kernel/notifier.c:401\n call_netdevice_notifiers_info+0x3f/0x90\
  \ net/core/dev.c:1735\n call_netdevice_notifiers net/core/dev.c:1753 [inline]\n\
  \ dev_open+0x173/0x1b0 net/core/dev.c:1433\n team_port_add drivers/net/team/team.c:1219\
  \ [inline]\n team_add_slave+0xa8b/0x1c30 drivers/net/team/team.c:1948\n do_set_master+0x1c9/0x220\
  \ net/core/rtnetlink.c:2248\n do_setlink+0xba4/0x3e10 net/core/rtnetlink.c:2382\n\
  \ rtnl_setlink+0x2a9/0x400 net/core/rtnetlink.c:2636\n rtnetlink_rcv_msg+0x46e/0xc30\
  \ net/core/rtnetlink.c:4665\n netlink_rcv_skb+0x172/0x440 net/netlink/af_netlink.c:2455\n\
  \ rtnetlink_rcv+0x1c/0x20 net/core/rtnetlink.c:4683\n netlink_unicast_kernel net/netlink/af_netlink.c:1317\
  \ [inline]\n netlink_unicast+0x5a0/0x760 net/netlink/af_netlink.c:1343\n netlink_sendmsg+0xa18/0xfd0\
  \ net/netlink/af_netlink.c:1908\n sock_sendmsg_nosec net/socket.c:642 [inline]\n\
  \ sock_sendmsg+0xd5/0x120 net/socket.c:652\n ___sys_sendmsg+0x7fd/0x930 net/socket.c:2126\n\
  \ __sys_sendmsg+0x11d/0x290 net/socket.c:2164\n __do_sys_sendmsg net/socket.c:2173\
  \ [inline]\n __se_sys_sendmsg net/socket.c:2171 [inline]\n __x64_sys_sendmsg+0x78/0xb0\
  \ net/socket.c:2171\n do_syscall_64+0x1b9/0x820 arch/x86/entry/common.c:290\n entry_SYSCALL_64_after_hwframe+0x49/0xbe\n\
  RIP: 0033:0x456b29\nCode: fd b4 fb ff c3 66 2e 0f 1f 84 00 00 00 00 00 66 90 48\
  \ 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d\
  \ 01 f0 ff ff 0f 83 cb b4 fb ff c3 66 2e 0f 1f 84 00 00 00 00\nRSP: 002b:00007f9706bf8c78\
  \ EFLAGS: 00000246 ORIG_RAX: 000000000000002e\nRAX: ffffffffffffffda RBX: 00007f9706bf96d4\
  \ RCX: 0000000000456b29\nRDX: 0000000000000000 RSI: 0000000020000240 RDI: 0000000000000004\n\
  RBP: 00000000009300a0 R08: 0000000000000000 R09: 0000000000000000\nR10: 0000000000000000\
  \ R11: 0000000000000246 R12: 00000000ffffffff\nR13: 00000000004d3548 R14: 00000000004c8227\
  \ R15: 0000000000000000\n\nFixes: 87002b03baab (\"net: introduce vlan_vid_[add/del]\
  \ and use them instead of direct [add/kill]_vid ndo calls\")\nSigned-off-by: Ido\
  \ Schimmel <idosch@mellanox.com>\nReported-and-tested-by: syzbot+bd051aba086537515cdb@syzkaller.appspotmail.com\n\
  Signed-off-by: David S. Miller <davem@davemloft.net>\n"
submodule:
- drivers/net/team
hunk_count: 1
covered_count: 1
