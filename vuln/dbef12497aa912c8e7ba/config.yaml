id: dbef12497aa912c8e7ba
bug_link: https://syzkaller.appspot.com/bug?extid=dbef12497aa912c8e7ba
title: WARNING in vcpu_enter_guest (2)
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 44fc40a015af7511408f7b447e2c0c2da056fd95
fix_commit: dea0d5a2fde62237ff14c41cb05dd151cebf84c0
datetime: '2022-10-27T05:22:01-04:00'
fix_commit_message: 'KVM: x86: Exempt pending triple fault from event injection sanity
  check


  Exempt pending triple faults, a.k.a. KVM_REQ_TRIPLE_FAULT, when asserting

  that KVM didn''t attempt to queue a new exception during event injection.

  KVM needs to emulate the injection itself when emulating Real Mode due to

  lack of unrestricted guest support (VMX) and will queue a triple fault if

  that emulation fails.


  Ideally the assertion would more precisely filter out the emulated Real

  Mode triple fault case, but rmode.vm86_active is buried in vcpu_vmx and

  can''t be queried without a new kvm_x86_ops.  And unlike "regular"

  exceptions, triple fault cannot put the vCPU into an infinite loop; the

  triple fault will force either an exit to userspace or a nested VM-Exit,

  and triple fault after nested VM-Exit will force an exit to userspace.

  I.e. there is no functional issue, so just suppress the warning for

  triple faults.


  Opportunistically convert the warning to a one-time thing, when it

  fires, it fires _a lot_, and is usually user triggerable, i.e. can be

  used to spam the kernel log.


  Fixes: 7055fb113116 ("KVM: x86: Treat pending TRIPLE_FAULT requests as pending exceptions")

  Reported-by: kernel test robot <yujie.liu@intel.com>

  Link: https://lore.kernel.org/r/202209301338.aca913c3-yujie.liu@intel.com

  Signed-off-by: Sean Christopherson <seanjc@google.com>

  Message-Id: <20220930230008.1636044-1-seanjc@google.com>

  Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>

  '
submodule:
- arch/x86/kvm
hunk_count: 1
covered_count: 1
