id: 683f8cb11b94b1824c77
bug_link: https://syzkaller.appspot.com/bug?extid=683f8cb11b94b1824c77
title: 'KASAN: slab-use-after-free Read in skb_queue_purge_reason (2)'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 366ceff495f902182d42b6f41525c2474caf3f9a
fix_commit: 5df5dafc171b90d0b8d51547a82657cd5a1986c7
datetime: '2025-03-25T12:32:15-04:00'
fix_commit_message: "Bluetooth: hci_uart: Fix another race during initialization\n\
  \nDo not set 'HCI_UART_PROTO_READY' before call 'hci_uart_register_dev()'.\nPossible\
  \ race is when someone calls 'hci_tty_uart_close()' after this bit\nis set, but\
  \ 'hci_uart_register_dev()' wasn't done. This leads to access\nto uninitialized\
  \ fields. To fix it let's set this bit after device was\nregistered (as before patch\
  \ c411c62cc133) and to fix previous problem let's\nadd one more bit in addition\
  \ to 'HCI_UART_PROTO_READY' which allows to\nperform power up without original bit\
  \ set (pls see commit c411c62cc133).\n\nCrash backtrace from syzbot report:\n\n\
  RIP: 0010:skb_queue_empty_lockless include/linux/skbuff.h:1887 [inline]\nRIP: 0010:skb_queue_purge_reason+0x6d/0x140\
  \ net/core/skbuff.c:3936\n\nCall Trace:\n <TASK>\n skb_queue_purge include/linux/skbuff.h:3364\
  \ [inline]\n mrvl_close+0x2f/0x90 drivers/bluetooth/hci_mrvl.c:100\n hci_uart_tty_close+0xb6/0x120\
  \ drivers/bluetooth/hci_ldisc.c:557\n tty_ldisc_close drivers/tty/tty_ldisc.c:455\
  \ [inline]\n tty_ldisc_kill+0x66/0xc0 drivers/tty/tty_ldisc.c:613\n tty_ldisc_release+0xc9/0x120\
  \ drivers/tty/tty_ldisc.c:781\n tty_release_struct+0x10/0x80 drivers/tty/tty_io.c:1690\n\
  \ tty_release+0x4ef/0x640 drivers/tty/tty_io.c:1861\n __fput+0x86/0x2a0 fs/file_table.c:450\n\
  \ task_work_run+0x82/0xb0 kernel/task_work.c:239\n resume_user_mode_work include/linux/resume_user_mode.h:50\
  \ [inline]\n exit_to_user_mode_loop kernel/entry/common.c:114 [inline]\n exit_to_user_mode_prepare\
  \ include/linux/entry-common.h:329 [inline]\n __syscall_exit_to_user_mode_work kernel/entry/common.c:207\
  \ [inline]\n syscall_exit_to_user_mode+0xa3/0x1b0 kernel/entry/common.c:218\n do_syscall_64+0x9a/0x190\
  \ arch/x86/entry/common.c:89\n entry_SYSCALL_64_after_hwframe+0x77/0x7f\n\nSigned-off-by:\
  \ Arseniy Krasnov <avkrasnov@salutedevices.com>\nReported-by: syzbot+683f8cb11b94b1824c77@syzkaller.appspotmail.com\n\
  Tested-by: syzbot+683f8cb11b94b1824c77@syzkaller.appspotmail.com\nCloses: https://lore.kernel.org/linux-bluetooth/d159c57f-8490-4c26-79da-6ad3612c4a14@salutedevices.com/\n\
  Fixes: 366ceff495f9 (\"Bluetooth: hci_uart: fix race during initialization\")\n\
  Signed-off-by: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>\n"
submodule:
- drivers/bluetooth
hunk_count: 7
covered_count: 2
