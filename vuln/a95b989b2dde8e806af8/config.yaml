id: a95b989b2dde8e806af8
bug_link: https://syzkaller.appspot.com/bug?extid=a95b989b2dde8e806af8
title: 'KASAN: slab-out-of-bounds Read in fscache_alloc_cookie'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 169b803397499be85bdd1e3d07d6f5e3d4bd669e
fix_commit: 1ff22883b0b2f7a73eb2609ffe879c9fd96f6328
datetime: '2018-10-18T11:32:21+02:00'
fix_commit_message: 'fscache: Fix incomplete initialisation of inline key space


  The inline key in struct rxrpc_cookie is insufficiently initialized,

  zeroing only 3 of the 4 slots, therefore an index_key_len between 13 and 15

  bytes will end up hashing uninitialized memory because the memcpy only

  partially fills the last buf[] element.


  Fix this by clearing fscache_cookie objects on allocation rather than using

  the slab constructor to initialise them.  We''re going to pretty much fill

  in the entire struct anyway, so bringing it into our dcache writably

  shouldn''t incur much overhead.


  This removes the need to do clearance in fscache_set_key() (where we aren''t

  doing it correctly anyway).


  Also, we don''t need to set cookie->key_len in fscache_set_key() as we

  already did it in the only caller, so remove that.


  Fixes: ec0328e46d6e ("fscache: Maintain a catalogue of allocated cookies")

  Reported-by: syzbot+a95b989b2dde8e806af8@syzkaller.appspotmail.com

  Reported-by: Eric Sandeen <sandeen@redhat.com>

  Cc: stable <stable@vger.kernel.org>

  Signed-off-by: David Howells <dhowells@redhat.com>

  Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

  '
submodule:
- fs/fscache
hunk_count: 7
covered_count: 5
