id: 263726e59eab6b442723
bug_link: https://syzkaller.appspot.com/bug?extid=263726e59eab6b442723
title: 'linux-next test error: WARNING in rcu_core'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: b3c34245756adada8a50bdaedbb3965b071c7b0a
fix_commit: b8c8ba73c68bb3c3e9dad22f488b86c540c839f9
datetime: '2024-08-27T14:12:51+02:00'
fix_commit_message: 'slub: Introduce CONFIG_SLUB_RCU_DEBUG


  Currently, KASAN is unable to catch use-after-free in SLAB_TYPESAFE_BY_RCU

  slabs because use-after-free is allowed within the RCU grace period by

  design.


  Add a SLUB debugging feature which RCU-delays every individual

  kmem_cache_free() before either actually freeing the object or handing it

  off to KASAN, and change KASAN to poison freed objects as normal when this

  option is enabled.


  For now I''ve configured Kconfig.debug to default-enable this feature in the

  KASAN GENERIC and SW_TAGS modes; I''m not enabling it by default in HW_TAGS

  mode because I''m not sure if it might have unwanted performance degradation

  effects there.


  Note that this is mostly useful with KASAN in the quarantine-based GENERIC

  mode; SLAB_TYPESAFE_BY_RCU slabs are basically always also slabs with a

  ->ctor, and KASAN''s assign_tag() currently has to assign fixed tags for

  those, reducing the effectiveness of SW_TAGS/HW_TAGS mode.

  (A possible future extension of this work would be to also let SLUB call

  the ->ctor() on every allocation instead of only when the slab page is

  allocated; then tag-based modes would be able to assign new tags on every

  reallocation.)


  Tested-by: syzbot+263726e59eab6b442723@syzkaller.appspotmail.com

  Reviewed-by: Andrey Konovalov <andreyknvl@gmail.com>

  Acked-by: Marco Elver <elver@google.com>

  Acked-by: Vlastimil Babka <vbabka@suse.cz> #slab

  Signed-off-by: Jann Horn <jannh@google.com>

  Signed-off-by: Vlastimil Babka <vbabka@suse.cz>

  '
submodule:
- include/linux
- mm
- mm/kasan
hunk_count: 19
covered_count: 1
