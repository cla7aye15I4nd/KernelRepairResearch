id: 4dc041c686b7c816a71e
bug_link: https://syzkaller.appspot.com/bug?extid=4dc041c686b7c816a71e
title: possible deadlock in bpf_map_mmap
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 98671a0fd1f14e4a518ee06b19037c20014900eb
fix_commit: bc27c52eea189e8f7492d40739b7746d67b65beb
datetime: '2025-01-29T09:49:50-08:00'
fix_commit_message: "bpf: avoid holding freeze_mutex during mmap operation\n\nWe use\
  \ map->freeze_mutex to prevent races between map_freeze() and\nmemory mapping BPF\
  \ map contents with writable permissions. The way we\nnaively do this means we'll\
  \ hold freeze_mutex for entire duration of all\nthe mm and VMA manipulations, which\
  \ is completely unnecessary. This can\npotentially also lead to deadlocks, as reported\
  \ by syzbot in [0].\n\nSo, instead, hold freeze_mutex only during writeability checks,\
  \ bump\n(proactively) \"write active\" count for the map, unlock the mutex and\n\
  proceed with mmap logic. And only if something went wrong during mmap\nlogic, then\
  \ undo that \"write active\" counter increment.\n\n  [0] https://lore.kernel.org/bpf/678dcbc9.050a0220.303755.0066.GAE@google.com/\n\
  \nFixes: fc9702273e2e (\"bpf: Add mmap() support for BPF_MAP_TYPE_ARRAY\")\nReported-by:\
  \ syzbot+4dc041c686b7c816a71e@syzkaller.appspotmail.com\nSigned-off-by: Andrii Nakryiko\
  \ <andrii@kernel.org>\nLink: https://lore.kernel.org/r/20250129012246.1515826-2-andrii@kernel.org\n\
  Signed-off-by: Alexei Starovoitov <ast@kernel.org>\n"
submodule:
- kernel/bpf
hunk_count: 3
covered_count: 3
