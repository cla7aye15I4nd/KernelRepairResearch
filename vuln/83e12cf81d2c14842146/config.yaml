id: 83e12cf81d2c14842146
bug_link: https://syzkaller.appspot.com/bug?extid=83e12cf81d2c14842146
title: general protection fault in __x86_indirect_thunk_rbx
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 4316c3c685f5bd949e75eb99df09a18e45cc8e5c
fix_commit: d6367d6241371566597c9ab6efe4de0abf254eed
datetime: '2018-11-30T11:26:12-05:00'
fix_commit_message: 'fs/locks: use properly initialized file_lock when unlocking.


  Both locks_remove_posix() and locks_remove_flock() use a

  struct file_lock without calling locks_init_lock() on it.

  This means the various list_heads are not initialized, which

  will become a problem with a later patch.


  So change them both to initialize properly.  For flock locks,

  this involves using flock_make_lock(), and changing it to

  allow a file_lock to be passed in, so memory allocation isn''t

  always needed.


  Signed-off-by: NeilBrown <neilb@suse.com>

  Reviewed-by: J. Bruce Fields <bfields@redhat.com>

  Signed-off-by: Jeff Layton <jlayton@kernel.org>

  '
submodule:
- fs
hunk_count: 4
covered_count: 0
