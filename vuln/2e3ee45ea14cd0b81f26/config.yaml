id: 2e3ee45ea14cd0b81f26
bug_link: https://syzkaller.appspot.com/bug?extid=2e3ee45ea14cd0b81f26
title: 'BUG: sleeping function called from invalid context in munlock_vma_pages_range'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: d9770fcc1c0c5b3e77dfac83b47defa3981fa7cd
fix_commit: 023e1a8dd502405ba378a7fbb1ce62beb0616708
datetime: '2021-07-11T15:05:15-07:00'
fix_commit_message: 'mm/rmap: fix new bug: premature return from page_mlock_one()


  In the unlikely race case that page_mlock_one() finds VM_LOCKED has been

  cleared by the time it got page table lock, page_vma_mapped_walk_done()

  must be called before returning, either explicitly, or by a final call

  to page_vma_mapped_walk() - otherwise the page table remains locked.


  Fixes: cd62734ca60d ("mm/rmap: split try_to_munlock from try_to_unmap")

  Signed-off-by: Hugh Dickins <hughd@google.com>

  Reviewed-by: Alistair Popple <apopple@nvidia.com>

  Reviewed-by: Shakeel Butt <shakeelb@google.com>

  Reported-by: kernel test robot <oliver.sang@intel.com>

  Link: https://lore.kernel.org/lkml/20210711151446.GB4070@xsang-OptiPlex-9020/

  Link: https://lore.kernel.org/lkml/f71f8523-cba7-3342-40a7-114abc5d1f51@google.com/

  Cc: Andrew Morton <akpm@linux-foundation.org>

  Cc: Jason Gunthorpe <jgg@nvidia.com>

  Cc: Ralph Campbell <rcampbell@nvidia.com>

  Cc: Christoph Hellwig <hch@lst.de>

  Cc: Yang Shi <shy828301@gmail.com>

  Cc: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>

  Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

  '
submodule:
- mm
hunk_count: 1
covered_count: 0
