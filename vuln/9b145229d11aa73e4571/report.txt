======================================================
WARNING: possible circular locking dependency detected
6.16.0-rc1-syzkaller-00203-g4774cfe3543a #0 Not tainted
------------------------------------------------------
syz.8.2064/13782 is trying to acquire lock:
ffffffff8f8680e8 (uevent_sock_mutex){+.+.}-{4:4}, at: uevent_net_broadcast_untagged lib/kobject_uevent.c:317 [inline]
ffffffff8f8680e8 (uevent_sock_mutex){+.+.}-{4:4}, at: kobject_uevent_net_broadcast+0x27e/0x560 lib/kobject_uevent.c:410

but task is already holding lock:
ffff888024ea6278 (&q->q_usage_counter(io)#24){++++}-{0:0}, at: blk_mq_freeze_queue include/linux/blk-mq.h:934 [inline]
ffff888024ea6278 (&q->q_usage_counter(io)#24){++++}-{0:0}, at: loop_set_status+0x227/0xaf0 drivers/block/loop.c:1239

which lock already depends on the new lock.


the existing dependency chain (in reverse order) is:

-> #2 (&q->q_usage_counter(io)#24){++++}-{0:0}:
       lock_acquire+0x120/0x360 kernel/locking/lockdep.c:5871
       blk_alloc_queue+0x538/0x620 block/blk-core.c:461
       blk_mq_alloc_queue block/blk-mq.c:4396 [inline]
       __blk_mq_alloc_disk+0x162/0x340 block/blk-mq.c:4443
       loop_add+0x41b/0xad0 drivers/block/loop.c:2014
       loop_init+0x173/0x230 drivers/block/loop.c:2249
       do_one_initcall+0x233/0x820 init/main.c:1273
       do_initcall_level+0x137/0x1f0 init/main.c:1335
       do_initcalls+0x69/0xd0 init/main.c:1351
       kernel_init_freeable+0x3d9/0x570 init/main.c:1583
       kernel_init+0x1d/0x1d0 init/main.c:1473
       ret_from_fork+0x3fc/0x770 arch/x86/kernel/process.c:148
       ret_from_fork_asm+0x1a/0x30 arch/x86/entry/entry_64.S:245

-> #1 (fs_reclaim){+.+.}-{0:0}:
       lock_acquire+0x120/0x360 kernel/locking/lockdep.c:5871
       __fs_reclaim_acquire mm/page_alloc.c:4045 [inline]
       fs_reclaim_acquire+0x72/0x100 mm/page_alloc.c:4059
       might_alloc include/linux/sched/mm.h:318 [inline]
       slab_pre_alloc_hook mm/slub.c:4099 [inline]
       slab_alloc_node mm/slub.c:4177 [inline]
       kmem_cache_alloc_node_noprof+0x47/0x3c0 mm/slub.c:4249
       __alloc_skb+0x112/0x2d0 net/core/skbuff.c:660
       alloc_skb include/linux/skbuff.h:1336 [inline]
       alloc_uevent_skb+0x7d/0x230 lib/kobject_uevent.c:289
       uevent_net_broadcast_untagged lib/kobject_uevent.c:326 [inline]
       kobject_uevent_net_broadcast+0x2fa/0x560 lib/kobject_uevent.c:410
       kobject_uevent_env+0x55b/0x8c0 lib/kobject_uevent.c:608
       kobject_synth_uevent+0x527/0xb00 lib/kobject_uevent.c:207
       bus_uevent_store+0x115/0x170 drivers/base/bus.c:832
       kernfs_fop_write_iter+0x378/0x4f0 fs/kernfs/file.c:334
       new_sync_write fs/read_write.c:593 [inline]
       vfs_write+0x548/0xa90 fs/read_write.c:686
       ksys_write+0x145/0x250 fs/read_write.c:738
       do_syscall_x64 arch/x86/entry/syscall_64.c:63 [inline]
       do_syscall_64+0xfa/0x3b0 arch/x86/entry/syscall_64.c:94
       entry_SYSCALL_64_after_hwframe+0x77/0x7f

-> #0 (uevent_sock_mutex){+.+.}-{4:4}:
       check_prev_add kernel/locking/lockdep.c:3168 [inline]
       check_prevs_add kernel/locking/lockdep.c:3287 [inline]
       validate_chain+0xb9b/0x2140 kernel/locking/lockdep.c:3911
       __lock_acquire+0xab9/0xd20 kernel/locking/lockdep.c:5240
       lock_acquire+0x120/0x360 kernel/locking/lockdep.c:5871
       __mutex_lock_common kernel/locking/mutex.c:602 [inline]
       __mutex_lock+0x182/0xe80 kernel/locking/mutex.c:747
       uevent_net_broadcast_untagged lib/kobject_uevent.c:317 [inline]
       kobject_uevent_net_broadcast+0x27e/0x560 lib/kobject_uevent.c:410
       kobject_uevent_env+0x55b/0x8c0 lib/kobject_uevent.c:608
       loop_set_size drivers/block/loop.c:211 [inline]
       loop_set_status+0x4d3/0xaf0 drivers/block/loop.c:1254
       lo_ioctl+0xa5e/0x2410 drivers/block/loop.c:-1
       blkdev_ioctl+0x5a8/0x6d0 block/ioctl.c:704
       vfs_ioctl fs/ioctl.c:51 [inline]
       __do_sys_ioctl fs/ioctl.c:907 [inline]
       __se_sys_ioctl+0xf9/0x170 fs/ioctl.c:893
       do_syscall_x64 arch/x86/entry/syscall_64.c:63 [inline]
       do_syscall_64+0xfa/0x3b0 arch/x86/entry/syscall_64.c:94
       entry_SYSCALL_64_after_hwframe+0x77/0x7f

other info that might help us debug this:

Chain exists of:
  uevent_sock_mutex --> fs_reclaim --> &q->q_usage_counter(io)#24

 Possible unsafe locking scenario:

       CPU0                    CPU1
       ----                    ----
  lock(&q->q_usage_counter(io)#24);
                               lock(fs_reclaim);
                               lock(&q->q_usage_counter(io)#24);
  lock(uevent_sock_mutex);

 *** DEADLOCK ***

3 locks held by syz.8.2064/13782:
 #0: ffff888142749400 (&lo->lo_mutex){+.+.}-{4:4}, at: loop_set_status+0x2c/0xaf0 drivers/block/loop.c:1223
 #1: ffff888024ea6278 (&q->q_usage_counter(io)#24){++++}-{0:0}, at: blk_mq_freeze_queue include/linux/blk-mq.h:934 [inline]
 #1: ffff888024ea6278 (&q->q_usage_counter(io)#24){++++}-{0:0}, at: loop_set_status+0x227/0xaf0 drivers/block/loop.c:1239
 #2: ffff888024ea62b0 (&q->q_usage_counter(queue)#20){+.+.}-{0:0}, at: blk_mq_freeze_queue include/linux/blk-mq.h:934 [inline]
 #2: ffff888024ea62b0 (&q->q_usage_counter(queue)#20){+.+.}-{0:0}, at: loop_set_status+0x227/0xaf0 drivers/block/loop.c:1239

stack backtrace:
CPU: 0 UID: 0 PID: 13782 Comm: syz.8.2064 Not tainted 6.16.0-rc1-syzkaller-00203-g4774cfe3543a #0 PREEMPT(full) 
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 05/07/2025
Call Trace:
 <TASK>
 dump_stack_lvl+0x189/0x250 lib/dump_stack.c:120
 print_circular_bug+0x2ee/0x310 kernel/locking/lockdep.c:2046
 check_noncircular+0x134/0x160 kernel/locking/lockdep.c:2178
 check_prev_add kernel/locking/lockdep.c:3168 [inline]
 check_prevs_add kernel/locking/lockdep.c:3287 [inline]
 validate_chain+0xb9b/0x2140 kernel/locking/lockdep.c:3911
 __lock_acquire+0xab9/0xd20 kernel/locking/lockdep.c:5240
 lock_acquire+0x120/0x360 kernel/locking/lockdep.c:5871
 __mutex_lock_common kernel/locking/mutex.c:602 [inline]
 __mutex_lock+0x182/0xe80 kernel/locking/mutex.c:747
 uevent_net_broadcast_untagged lib/kobject_uevent.c:317 [inline]
 kobject_uevent_net_broadcast+0x27e/0x560 lib/kobject_uevent.c:410
 kobject_uevent_env+0x55b/0x8c0 lib/kobject_uevent.c:608
 loop_set_size drivers/block/loop.c:211 [inline]
 loop_set_status+0x4d3/0xaf0 drivers/block/loop.c:1254
 lo_ioctl+0xa5e/0x2410 drivers/block/loop.c:-1
 blkdev_ioctl+0x5a8/0x6d0 block/ioctl.c:704
 vfs_ioctl fs/ioctl.c:51 [inline]
 __do_sys_ioctl fs/ioctl.c:907 [inline]
 __se_sys_ioctl+0xf9/0x170 fs/ioctl.c:893
 do_syscall_x64 arch/x86/entry/syscall_64.c:63 [inline]
 do_syscall_64+0xfa/0x3b0 arch/x86/entry/syscall_64.c:94
 entry_SYSCALL_64_after_hwframe+0x77/0x7f
RIP: 0033:0x7ff7a1d8e929
Code: ff ff c3 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 40 00 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 a8 ff ff ff f7 d8 64 89 01 48
RSP: 002b:00007ff79f7f4038 EFLAGS: 00000246 ORIG_RAX: 0000000000000010
RAX: ffffffffffffffda RBX: 00007ff7a1fb6240 RCX: 00007ff7a1d8e929
RDX: 0000200000000200 RSI: 0000000000004c02 RDI: 0000000000000008
RBP: 00007ff7a1e10b39 R08: 0000000000000000 R09: 0000000000000000
R10: 0000000000000000 R11: 0000000000000246 R12: 0000000000000000
R13: 0000000000000000 R14: 00007ff7a1fb6240 R15: 00007ffd3064cfd8
 </TASK>
