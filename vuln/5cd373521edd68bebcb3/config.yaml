id: 5cd373521edd68bebcb3
bug_link: https://syzkaller.appspot.com/bug?extid=5cd373521edd68bebcb3
title: 'UBSAN: shift-out-of-bounds in pcl726_attach'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 300a0cfe9f375b2843bcb331bcfa7503475ef5dd
fix_commit: 96cb948408b3adb69df7e451ba7da9d21f814d00
datetime: '2025-08-19T12:56:16+02:00'
fix_commit_message: 'comedi: pcl726: Prevent invalid irq number


  The reproducer passed in an irq number(0x80008000) that was too large,

  which triggered the oob.


  Added an interrupt number check to prevent users from passing in an irq

  number that was too large.


  If `it->options[1]` is 31, then `1 << it->options[1]` is still invalid

  because it shifts a 1-bit into the sign bit (which is UB in C).

  Possible solutions include reducing the upper bound on the

  `it->options[1]` value to 30 or lower, or using `1U << it->options[1]`.


  The old code would just not attempt to request the IRQ if the

  `options[1]` value were invalid.  And it would still configure the

  device without interrupts even if the call to `request_irq` returned an

  error.  So it would be better to combine this test with the test below.


  Fixes: fff46207245c ("staging: comedi: pcl726: enable the interrupt support code")

  Cc: stable <stable@kernel.org> # 5.13+

  Reported-by: syzbot+5cd373521edd68bebcb3@syzkaller.appspotmail.com

  Closes: https://syzkaller.appspot.com/bug?extid=5cd373521edd68bebcb3

  Tested-by: syzbot+5cd373521edd68bebcb3@syzkaller.appspotmail.com

  Signed-off-by: Edward Adam Davis <eadavis@qq.com>

  Reviewed-by: Ian Abbott <abbotti@mev.co.uk>

  Link: https://lore.kernel.org/r/tencent_3C66983CC1369E962436264A50759176BF09@qq.com

  Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

  '
submodule:
- drivers/comedi/drivers
hunk_count: 1
covered_count: 1
