BTRFS info (device loop2): last unmount of filesystem 05246248-2a57-47e4-a3f3-b6c9b0cbca9e
assertion failed: percpu_counter_sum_positive(em_counter) == 0, in fs/btrfs/disk-io.c:1274
------------[ cut here ]------------
kernel BUG at fs/btrfs/disk-io.c:1274!
Oops: invalid opcode: 0000 [#1] PREEMPT SMP KASAN NOPTI
CPU: 0 PID: 5219 Comm: syz-executor.2 Not tainted 6.10.0-rc1-syzkaller-00267-gcc8ed4d0a848 #0
Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.16.2-debian-1.16.2-1 04/01/2014
RIP: 0010:btrfs_free_fs_info+0x3c6/0x470 fs/btrfs/disk-io.c:1274
Code: e9 3f 17 42 fe e8 da ae 03 fe b9 fa 04 00 00 48 c7 c2 c0 9b 76 8b 48 c7 c6 60 ad 76 8b 48 c7 c7 40 9c 76 8b e8 eb 4a e4 fd 90 <0f> 0b e8 03 e0 60 fe e9 60 fd ff ff e8 f9 df 60 fe e9 02 fd ff ff
RSP: 0018:ffffc90003787da8 EFLAGS: 00010286
RAX: 000000000000005a RBX: 0000000000000005 RCX: ffffffff816f3159
RDX: 0000000000000000 RSI: ffffffff816fbd56 RDI: 0000000000000005
RBP: ffff888069bd4000 R08: 0000000000000005 R09: 0000000000000000
R10: 0000000080000000 R11: 0000000000000000 R12: ffff888069bd50f0
R13: ffff88804abbce00 R14: ffffed1003e59a3d R15: ffff88804abbce40
FS:  0000000000000000(0000) GS:ffff88802c000000(0063) knlGS:00000000566d8400
CS:  0010 DS: 002b ES: 002b CR0: 0000000080050033
CR2: 000056172fd2cb70 CR3: 000000004a95a000 CR4: 0000000000350ef0
DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
Call Trace:
 <TASK>
 deactivate_locked_super+0xbe/0x1a0 fs/super.c:473
 deactivate_super+0xde/0x100 fs/super.c:506
 cleanup_mnt+0x222/0x450 fs/namespace.c:1267
 task_work_run+0x14e/0x250 kernel/task_work.c:180
 resume_user_mode_work include/linux/resume_user_mode.h:50 [inline]
 exit_to_user_mode_loop kernel/entry/common.c:114 [inline]
 exit_to_user_mode_prepare include/linux/entry-common.h:328 [inline]
 __syscall_exit_to_user_mode_work kernel/entry/common.c:207 [inline]
 syscall_exit_to_user_mode+0x278/0x2a0 kernel/entry/common.c:218
 __do_fast_syscall_32+0x80/0x120 arch/x86/entry/common.c:389
 do_fast_syscall_32+0x32/0x80 arch/x86/entry/common.c:411
 entry_SYSENTER_compat_after_hwframe+0x84/0x8e
RIP: 0023:0xf72b6579
Code: b8 01 10 06 03 74 b4 01 10 07 03 74 b0 01 10 08 03 74 d8 01 00 00 00 00 00 00 00 00 00 00 00 00 00 51 52 55 89 e5 0f 34 cd 80 <5d> 5a 59 c3 90 90 90 90 8d b4 26 00 00 00 00 8d b4 26 00 00 00 00
RSP: 002b:00000000ff822ae8 EFLAGS: 00000292 ORIG_RAX: 0000000000000034
RAX: 0000000000000000 RBX: 00000000ff822b90 RCX: 0000000000000009
RDX: 00000000f740cff4 RSI: 00000000f735d361 RDI: 00000000ff823c34
RBP: 00000000ff822b90 R08: 0000000000000000 R09: 0000000000000000
R10: 0000000000000000 R11: 0000000000000292 R12: 0000000000000000
R13: 0000000000000000 R14: 0000000000000000 R15: 0000000000000000
 </TASK>
Modules linked in:
---[ end trace 0000000000000000 ]---
RIP: 0010:btrfs_free_fs_info+0x3c6/0x470 fs/btrfs/disk-io.c:1274
Code: e9 3f 17 42 fe e8 da ae 03 fe b9 fa 04 00 00 48 c7 c2 c0 9b 76 8b 48 c7 c6 60 ad 76 8b 48 c7 c7 40 9c 76 8b e8 eb 4a e4 fd 90 <0f> 0b e8 03 e0 60 fe e9 60 fd ff ff e8 f9 df 60 fe e9 02 fd ff ff
RSP: 0018:ffffc90003787da8 EFLAGS: 00010286
RAX: 000000000000005a RBX: 0000000000000005 RCX: ffffffff816f3159
RDX: 0000000000000000 RSI: ffffffff816fbd56 RDI: 0000000000000005
RBP: ffff888069bd4000 R08: 0000000000000005 R09: 0000000000000000
R10: 0000000080000000 R11: 0000000000000000 R12: ffff888069bd50f0
R13: ffff88804abbce00 R14: ffffed1003e59a3d R15: ffff88804abbce40
FS:  0000000000000000(0000) GS:ffff88802c000000(0063) knlGS:00000000566d8400
CS:  0010 DS: 002b ES: 002b CR0: 0000000080050033
CR2: 000056172fd2cb70 CR3: 000000004a95a000 CR4: 0000000000350ef0
DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
----------------
Code disassembly (best guess), 2 bytes skipped:
   0:	10 06                	adc    %al,(%rsi)
   2:	03 74 b4 01          	add    0x1(%rsp,%rsi,4),%esi
   6:	10 07                	adc    %al,(%rdi)
   8:	03 74 b0 01          	add    0x1(%rax,%rsi,4),%esi
   c:	10 08                	adc    %cl,(%rax)
   e:	03 74 d8 01          	add    0x1(%rax,%rbx,8),%esi
  1e:	00 51 52             	add    %dl,0x52(%rcx)
  21:	55                   	push   %rbp
  22:	89 e5                	mov    %esp,%ebp
  24:	0f 34                	sysenter
  26:	cd 80                	int    $0x80
* 28:	5d                   	pop    %rbp <-- trapping instruction
  29:	5a                   	pop    %rdx
  2a:	59                   	pop    %rcx
  2b:	c3                   	ret
  2c:	90                   	nop
  2d:	90                   	nop
  2e:	90                   	nop
  2f:	90                   	nop
  30:	8d b4 26 00 00 00 00 	lea    0x0(%rsi,%riz,1),%esi
  37:	8d b4 26 00 00 00 00 	lea    0x0(%rsi,%riz,1),%esi
