id: a2cc273ad0e5a4c15302
bug_link: https://syzkaller.appspot.com/bug?extid=a2cc273ad0e5a4c15302
title: 'BUG: corrupted list in __folio_undo_large_rmappable'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 5596d9e8b553dacb0ac34bcf873cbbfb16c3ba3e
fix_commit: f708f6970cc9d6bac71da45c129482092e710537
datetime: '2024-07-09T15:41:11-07:00'
fix_commit_message: "mm/hugetlb: fix kernel NULL pointer dereference when migrating\
  \ hugetlb folio\n\nA kernel crash was observed when migrating hugetlb folio:\n\n\
  BUG: kernel NULL pointer dereference, address: 0000000000000008\nPGD 0 P4D 0\nOops:\
  \ Oops: 0002 [#1] PREEMPT SMP NOPTI\nCPU: 0 PID: 3435 Comm: bash Not tainted 6.10.0-rc6-00450-g8578ca01f21f\
  \ #66\nRIP: 0010:__folio_undo_large_rmappable+0x70/0xb0\nRSP: 0018:ffffb165c98a7b38\
  \ EFLAGS: 00000097\nRAX: fffffbbc44528090 RBX: 0000000000000000 RCX: 0000000000000000\n\
  RDX: ffffa30e000a2800 RSI: 0000000000000246 RDI: ffffa3153ffffcc0\nRBP: fffffbbc44528000\
  \ R08: 0000000000002371 R09: ffffffffbe4e5868\nR10: 0000000000000001 R11: 0000000000000001\
  \ R12: ffffa3153ffffcc0\nR13: fffffbbc44468000 R14: 0000000000000001 R15: 0000000000000001\n\
  FS:  00007f5b3a716740(0000) GS:ffffa3151fc00000(0000) knlGS:0000000000000000\nCS:\
  \  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 0000000000000008 CR3: 000000010959a000\
  \ CR4: 00000000000006f0\nCall Trace:\n <TASK>\n __folio_migrate_mapping+0x59e/0x950\n\
  \ __migrate_folio.constprop.0+0x5f/0x120\n move_to_new_folio+0xfd/0x250\n migrate_pages+0x383/0xd70\n\
  \ soft_offline_page+0x2ab/0x7f0\n soft_offline_page_store+0x52/0x90\n kernfs_fop_write_iter+0x12c/0x1d0\n\
  \ vfs_write+0x380/0x540\n ksys_write+0x64/0xe0\n do_syscall_64+0xb9/0x1d0\n entry_SYSCALL_64_after_hwframe+0x77/0x7f\n\
  RIP: 0033:0x7f5b3a514887\nRSP: 002b:00007ffe138fce68 EFLAGS: 00000246 ORIG_RAX:\
  \ 0000000000000001\nRAX: ffffffffffffffda RBX: 000000000000000c RCX: 00007f5b3a514887\n\
  RDX: 000000000000000c RSI: 0000556ab809ee10 RDI: 0000000000000001\nRBP: 0000556ab809ee10\
  \ R08: 00007f5b3a5d1460 R09: 000000007fffffff\nR10: 0000000000000000 R11: 0000000000000246\
  \ R12: 000000000000000c\nR13: 00007f5b3a61b780 R14: 00007f5b3a617600 R15: 00007f5b3a616a00\n\
  \nIt's because hugetlb folio is passed to __folio_undo_large_rmappable()\nunexpectedly.\
  \  large_rmappable flag is imperceptibly set to hugetlb folio\nsince commit f6a8dd98a2ce\
  \ (\"hugetlb: convert alloc_buddy_hugetlb_folio to\nuse a folio\").  Then commit\
  \ be9581ea8c05 (\"mm: fix crashes from deferred\nsplit racing folio migration\"\
  ) makes folio_migrate_mapping() call\nfolio_undo_large_rmappable() triggering the\
  \ bug.  Fix this issue by\nclearing large_rmappable flag for hugetlb folios.  They\
  \ don't need that\nflag set anyway.\n\nLink: https://lkml.kernel.org/r/20240709120433.4136700-1-linmiaohe@huawei.com\n\
  Fixes: f6a8dd98a2ce (\"hugetlb: convert alloc_buddy_hugetlb_folio to use a folio\"\
  )\nFixes: be9581ea8c05 (\"mm: fix crashes from deferred split racing folio migration\"\
  )\nSigned-off-by: Miaohe Lin <linmiaohe@huawei.com>\nCc: Hugh Dickins <hughd@google.com>\n\
  Cc: Matthew Wilcox (Oracle) <willy@infradead.org>\nCc: Muchun Song <muchun.song@linux.dev>\n\
  Cc: <stable@vger.kernel.org>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\n"
submodule:
- mm
hunk_count: 1
covered_count: 0
