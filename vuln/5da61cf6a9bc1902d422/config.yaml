id: 5da61cf6a9bc1902d422
bug_link: https://syzkaller.appspot.com/bug?extid=5da61cf6a9bc1902d422
title: WARNING in sock_i_ino
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: d06f925f13976ab82167c93467c70a337a0a3cda
fix_commit: 25a9c8a4431c364f97f75558cb346d2ad3f53fbb
datetime: '2023-06-27T09:37:41-07:00'
fix_commit_message: "netlink: Add __sock_i_ino() for __netlink_diag_dump().\n\nsyzbot\
  \ reported a warning in __local_bh_enable_ip(). [0]\n\nCommit 8d61f926d420 (\"netlink:\
  \ fix potential deadlock in\nnetlink_set_err()\") converted read_lock(&nl_table_lock)\
  \ to\nread_lock_irqsave() in __netlink_diag_dump() to prevent a deadlock.\n\nHowever,\
  \ __netlink_diag_dump() calls sock_i_ino() that uses\nread_lock_bh() and read_unlock_bh().\
  \  If CONFIG_TRACE_IRQFLAGS=y,\nread_unlock_bh() finally enables IRQ even though\
  \ it should stay\ndisabled until the following read_unlock_irqrestore().\n\nUsing\
  \ read_lock() in sock_i_ino() would trigger a lockdep splat\nin another place that\
  \ was fixed in commit f064af1e500a (\"net: fix\na lockdep splat\"), so let's add\
  \ __sock_i_ino() that would be safe\nto use under BH disabled.\n\n[0]:\nWARNING:\
  \ CPU: 0 PID: 5012 at kernel/softirq.c:376 __local_bh_enable_ip+0xbe/0x130 kernel/softirq.c:376\n\
  Modules linked in:\nCPU: 0 PID: 5012 Comm: syz-executor487 Not tainted 6.4.0-rc7-syzkaller-00202-g6f68fc395f49\
  \ #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google\
  \ 05/27/2023\nRIP: 0010:__local_bh_enable_ip+0xbe/0x130 kernel/softirq.c:376\nCode:\
  \ 45 bf 01 00 00 00 e8 91 5b 0a 00 e8 3c 15 3d 00 fb 65 8b 05 ec e9 b5 7e 85 c0\
  \ 74 58 5b 5d c3 65 8b 05 b2 b6 b4 7e 85 c0 75 a2 <0f> 0b eb 9e e8 89 15 3d 00 eb\
  \ 9f 48 89 ef e8 6f 49 18 00 eb a8 0f\nRSP: 0018:ffffc90003a1f3d0 EFLAGS: 00010046\n\
  RAX: 0000000000000000 RBX: 0000000000000201 RCX: 1ffffffff1cf5996\nRDX: 0000000000000000\
  \ RSI: 0000000000000201 RDI: ffffffff8805c6f3\nRBP: ffffffff8805c6f3 R08: 0000000000000001\
  \ R09: ffff8880152b03a3\nR10: ffffed1002a56074 R11: 0000000000000005 R12: 00000000000073e4\n\
  R13: dffffc0000000000 R14: 0000000000000002 R15: 0000000000000000\nFS:  0000555556726300(0000)\
  \ GS:ffff8880b9800000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000\
  \ CR0: 0000000080050033\nCR2: 000000000045ad50 CR3: 000000007c646000 CR4: 00000000003506f0\n\
  DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000\
  \ DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n <TASK>\n sock_i_ino+0x83/0xa0\
  \ net/core/sock.c:2559\n __netlink_diag_dump+0x45c/0x790 net/netlink/diag.c:171\n\
  \ netlink_diag_dump+0xd6/0x230 net/netlink/diag.c:207\n netlink_dump+0x570/0xc50\
  \ net/netlink/af_netlink.c:2269\n __netlink_dump_start+0x64b/0x910 net/netlink/af_netlink.c:2374\n\
  \ netlink_dump_start include/linux/netlink.h:329 [inline]\n netlink_diag_handler_dump+0x1ae/0x250\
  \ net/netlink/diag.c:238\n __sock_diag_cmd net/core/sock_diag.c:238 [inline]\n sock_diag_rcv_msg+0x31e/0x440\
  \ net/core/sock_diag.c:269\n netlink_rcv_skb+0x165/0x440 net/netlink/af_netlink.c:2547\n\
  \ sock_diag_rcv+0x2a/0x40 net/core/sock_diag.c:280\n netlink_unicast_kernel net/netlink/af_netlink.c:1339\
  \ [inline]\n netlink_unicast+0x547/0x7f0 net/netlink/af_netlink.c:1365\n netlink_sendmsg+0x925/0xe30\
  \ net/netlink/af_netlink.c:1914\n sock_sendmsg_nosec net/socket.c:724 [inline]\n\
  \ sock_sendmsg+0xde/0x190 net/socket.c:747\n ____sys_sendmsg+0x71c/0x900 net/socket.c:2503\n\
  \ ___sys_sendmsg+0x110/0x1b0 net/socket.c:2557\n __sys_sendmsg+0xf7/0x1c0 net/socket.c:2586\n\
  \ do_syscall_x64 arch/x86/entry/common.c:50 [inline]\n do_syscall_64+0x39/0xb0 arch/x86/entry/common.c:80\n\
  \ entry_SYSCALL_64_after_hwframe+0x63/0xcd\nRIP: 0033:0x7f5303aaabb9\nCode: 28 c3\
  \ e8 2a 14 00 00 66 2e 0f 1f 84 00 00 00 00 00 48 89 f8 48 89 f7 48 89 d6 48 89\
  \ ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1\
  \ c0 ff ff ff f7 d8 64 89 01 48\nRSP: 002b:00007ffc7506e548 EFLAGS: 00000246 ORIG_RAX:\
  \ 000000000000002e\nRAX: ffffffffffffffda RBX: 0000000000000000 RCX: 00007f5303aaabb9\n\
  RDX: 0000000000000000 RSI: 0000000020000180 RDI: 0000000000000003\nRBP: 00007f5303a6ed60\
  \ R08: 0000000000000000 R09: 0000000000000000\nR10: 0000000000000000 R11: 0000000000000246\
  \ R12: 00007f5303a6edf0\nR13: 0000000000000000 R14: 0000000000000000 R15: 0000000000000000\n\
  \ </TASK>\n\nFixes: 8d61f926d420 (\"netlink: fix potential deadlock in netlink_set_err()\"\
  )\nReported-by: syzbot+5da61cf6a9bc1902d422@syzkaller.appspotmail.com\nLink: https://syzkaller.appspot.com/bug?extid=5da61cf6a9bc1902d422\n\
  Suggested-by: Eric Dumazet <edumazet@google.com>\nSigned-off-by: Kuniyuki Iwashima\
  \ <kuniyu@amazon.com>\nReviewed-by: Eric Dumazet <edumazet@google.com>\nLink: https://lore.kernel.org/r/20230626164313.52528-1-kuniyu@amazon.com\n\
  Signed-off-by: Jakub Kicinski <kuba@kernel.org>\n"
submodule:
- include/net
- net/core
- net/netlink
hunk_count: 3
covered_count: 2
