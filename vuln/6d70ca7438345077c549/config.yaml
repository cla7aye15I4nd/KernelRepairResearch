id: 6d70ca7438345077c549
bug_link: https://syzkaller.appspot.com/bug?extid=6d70ca7438345077c549
title: 'KASAN: slab-out-of-bounds Write in bpf_prog_test_run_xdp'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 594d323485567d36674a8ff4f344d81a830de5ac
fix_commit: a6763080856f444868620ae065ac25cbac0c4922
datetime: '2022-02-03T09:42:29-08:00'
fix_commit_message: "bpf: test_run: Fix OOB access in bpf_prog_test_run_xdp\n\nFix\
  \ the following kasan issue reported by syzbot:\n\nBUG: KASAN: slab-out-of-bounds\
  \ in __skb_frag_set_page include/linux/skbuff.h:3242 [inline]\nBUG: KASAN: slab-out-of-bounds\
  \ in bpf_prog_test_run_xdp+0x10ac/0x1150 net/bpf/test_run.c:972\nWrite of size 8\
  \ at addr ffff888048c75000 by task syz-executor.5/23405\n\nCPU: 1 PID: 23405 Comm:\
  \ syz-executor.5 Not tainted 5.16.0-syzkaller #0\nHardware name: Google Compute\
  \ Engine/Google Compute Engine, BIOS Google 01/01/2011\nCall Trace:\n <TASK>\n __dump_stack\
  \ lib/dump_stack.c:88 [inline]\n dump_stack_lvl+0xcd/0x134 lib/dump_stack.c:106\n\
  \ print_address_description.constprop.0.cold+0x8d/0x336 mm/kasan/report.c:255\n\
  \ __kasan_report mm/kasan/report.c:442 [inline]\n kasan_report.cold+0x83/0xdf mm/kasan/report.c:459\n\
  \ __skb_frag_set_page include/linux/skbuff.h:3242 [inline]\n bpf_prog_test_run_xdp+0x10ac/0x1150\
  \ net/bpf/test_run.c:972\n bpf_prog_test_run kernel/bpf/syscall.c:3356 [inline]\n\
  \ __sys_bpf+0x1858/0x59a0 kernel/bpf/syscall.c:4658\n __do_sys_bpf kernel/bpf/syscall.c:4744\
  \ [inline]\n __se_sys_bpf kernel/bpf/syscall.c:4742 [inline]\n __x64_sys_bpf+0x75/0xb0\
  \ kernel/bpf/syscall.c:4742\n do_syscall_x64 arch/x86/entry/common.c:50 [inline]\n\
  \ do_syscall_64+0x35/0xb0 arch/x86/entry/common.c:80\n entry_SYSCALL_64_after_hwframe+0x44/0xae\n\
  RIP: 0033:0x7f4ea30dd059\nRSP: 002b:00007f4ea1a52168 EFLAGS: 00000246 ORIG_RAX:\
  \ 0000000000000141\nRAX: ffffffffffffffda RBX: 00007f4ea31eff60 RCX: 00007f4ea30dd059\n\
  RDX: 0000000000000048 RSI: 0000000020000000 RDI: 000000000000000a\nRBP: 00007f4ea313708d\
  \ R08: 0000000000000000 R09: 0000000000000000\nR10: 0000000000000000 R11: 0000000000000246\
  \ R12: 0000000000000000\nR13: 00007ffc8367c5af R14: 00007f4ea1a52300 R15: 0000000000022000\n\
  \ </TASK>\n\nAllocated by task 23405:\n kasan_save_stack+0x1e/0x50 mm/kasan/common.c:38\n\
  \ kasan_set_track mm/kasan/common.c:46 [inline]\n set_alloc_info mm/kasan/common.c:437\
  \ [inline]\n ____kasan_kmalloc mm/kasan/common.c:516 [inline]\n ____kasan_kmalloc\
  \ mm/kasan/common.c:475 [inline]\n __kasan_kmalloc+0xa9/0xd0 mm/kasan/common.c:525\n\
  \ kmalloc include/linux/slab.h:586 [inline]\n kzalloc include/linux/slab.h:715 [inline]\n\
  \ bpf_test_init.isra.0+0x9f/0x150 net/bpf/test_run.c:411\n bpf_prog_test_run_xdp+0x2f8/0x1150\
  \ net/bpf/test_run.c:941\n bpf_prog_test_run kernel/bpf/syscall.c:3356 [inline]\n\
  \ __sys_bpf+0x1858/0x59a0 kernel/bpf/syscall.c:4658\n __do_sys_bpf kernel/bpf/syscall.c:4744\
  \ [inline]\n __se_sys_bpf kernel/bpf/syscall.c:4742 [inline]\n __x64_sys_bpf+0x75/0xb0\
  \ kernel/bpf/syscall.c:4742\n do_syscall_x64 arch/x86/entry/common.c:50 [inline]\n\
  \ do_syscall_64+0x35/0xb0 arch/x86/entry/common.c:80\n entry_SYSCALL_64_after_hwframe+0x44/0xae\n\
  \nThe buggy address belongs to the object at ffff888048c74000\n which belongs to\
  \ the cache kmalloc-4k of size 4096\nThe buggy address is located 0 bytes to the\
  \ right of\n 4096-byte region [ffff888048c74000, ffff888048c75000)\nThe buggy address\
  \ belongs to the page:\npage:ffffea0001231c00 refcount:1 mapcount:0 mapping:0000000000000000\
  \ index:0x0 pfn:0x48c70\nhead:ffffea0001231c00 order:3 compound_mapcount:0 compound_pincount:0\n\
  flags: 0xfff00000010200(slab|head|node=0|zone=1|lastcpupid=0x7ff)\nraw: 00fff00000010200\
  \ dead000000000100 dead000000000122 ffff888010c42140\nraw: 0000000000000000 0000000080040004\
  \ 00000001ffffffff 0000000000000000\npage dumped because: kasan: bad access detected\n\
  page_owner tracks the page as allocated\n prep_new_page mm/page_alloc.c:2434 [inline]\n\
  \ get_page_from_freelist+0xa72/0x2f50 mm/page_alloc.c:4165\n __alloc_pages+0x1b2/0x500\
  \ mm/page_alloc.c:5389\n alloc_pages+0x1aa/0x310 mm/mempolicy.c:2271\n alloc_slab_page\
  \ mm/slub.c:1799 [inline]\n allocate_slab mm/slub.c:1944 [inline]\n new_slab+0x28a/0x3b0\
  \ mm/slub.c:2004\n ___slab_alloc+0x87c/0xe90 mm/slub.c:3018\n __slab_alloc.constprop.0+0x4d/0xa0\
  \ mm/slub.c:3105\n slab_alloc_node mm/slub.c:3196 [inline]\n __kmalloc_node_track_caller+0x2cb/0x360\
  \ mm/slub.c:4957\n kmalloc_reserve net/core/skbuff.c:354 [inline]\n __alloc_skb+0xde/0x340\
  \ net/core/skbuff.c:426\n alloc_skb include/linux/skbuff.h:1159 [inline]\n nsim_dev_trap_skb_build\
  \ drivers/net/netdevsim/dev.c:745 [inline]\n nsim_dev_trap_report drivers/net/netdevsim/dev.c:802\
  \ [inline]\n nsim_dev_trap_report_work+0x29a/0xbc0 drivers/net/netdevsim/dev.c:843\n\
  \ process_one_work+0x9ac/0x1650 kernel/workqueue.c:2307\n worker_thread+0x657/0x1110\
  \ kernel/workqueue.c:2454\n kthread+0x2e9/0x3a0 kernel/kthread.c:377\n ret_from_fork+0x1f/0x30\
  \ arch/x86/entry/entry_64.S:295\npage last free stack trace:\n reset_page_owner\
  \ include/linux/page_owner.h:24 [inline]\n free_pages_prepare mm/page_alloc.c:1352\
  \ [inline]\n free_pcp_prepare+0x374/0x870 mm/page_alloc.c:1404\n free_unref_page_prepare\
  \ mm/page_alloc.c:3325 [inline]\n free_unref_page+0x19/0x690 mm/page_alloc.c:3404\n\
  \ qlink_free mm/kasan/quarantine.c:157 [inline]\n qlist_free_all+0x6d/0x160 mm/kasan/quarantine.c:176\n\
  \ kasan_quarantine_reduce+0x180/0x200 mm/kasan/quarantine.c:283\n __kasan_slab_alloc+0xa2/0xc0\
  \ mm/kasan/common.c:447\n kasan_slab_alloc include/linux/kasan.h:260 [inline]\n\
  \ slab_post_alloc_hook mm/slab.h:732 [inline]\n slab_alloc_node mm/slub.c:3230 [inline]\n\
  \ slab_alloc mm/slub.c:3238 [inline]\n kmem_cache_alloc+0x202/0x3a0 mm/slub.c:3243\n\
  \ getname_flags.part.0+0x50/0x4f0 fs/namei.c:138\n getname_flags include/linux/audit.h:323\
  \ [inline]\n getname+0x8e/0xd0 fs/namei.c:217\n do_sys_openat2+0xf5/0x4d0 fs/open.c:1208\n\
  \ do_sys_open fs/open.c:1230 [inline]\n __do_sys_openat fs/open.c:1246 [inline]\n\
  \ __se_sys_openat fs/open.c:1241 [inline]\n __x64_sys_openat+0x13f/0x1f0 fs/open.c:1241\n\
  \ do_syscall_x64 arch/x86/entry/common.c:50 [inline]\n do_syscall_64+0x35/0xb0 arch/x86/entry/common.c:80\n\
  \ entry_SYSCALL_64_after_hwframe+0x44/0xae\n\nMemory state around the buggy address:\n\
  \ ffff888048c74f00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n ffff888048c74f80:\
  \ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n                   ^\n ffff888048c75080:\
  \ fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc\n ffff888048c75100: fc fc fc fc\
  \ fc fc fc fc fc fc fc fc fc fc fc fc\n==================================================================\n\
  \nFixes: 1c19499825246 (\"bpf: introduce frags support to bpf_prog_test_run_xdp()\"\
  )\nReported-by: syzbot+6d70ca7438345077c549@syzkaller.appspotmail.com\nSigned-off-by:\
  \ Lorenzo Bianconi <lorenzo@kernel.org>\nSigned-off-by: Alexei Starovoitov <ast@kernel.org>\n\
  Link: https://lore.kernel.org/bpf/688c26f9dd6e885e58e8e834ede3f0139bb7fa95.1643835097.git.lorenzo@kernel.org\n"
submodule:
- net/bpf
hunk_count: 1
covered_count: 1
