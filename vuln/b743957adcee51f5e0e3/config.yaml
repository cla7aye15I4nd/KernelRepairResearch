id: b743957adcee51f5e0e3
bug_link: https://syzkaller.appspot.com/bug?extid=b743957adcee51f5e0e3
title: 'WARNING: suspicious RCU usage in tipc_bearer_find'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 5631f65decf390ae480d157838c0c393a991328e
fix_commit: ed4ffdfec26dfe1bb02435afd1e01f61426f7212
datetime: '2018-02-14T14:46:33-05:00'
fix_commit_message: "tipc: Fix missing RTNL lock protection during setting link properties\n\
  \nCurrently when user changes link properties, TIPC first checks if\nuser's command\
  \ message contains media name or bearer name through\ntipc_media_find() or tipc_bearer_find()\
  \ which is protected by RTNL\nlock. But when tipc_nl_compat_link_set() conducts\
  \ the checking with\nthe two functions, it doesn't hold RTNL lock at all, as a result,\n\
  the following complaints were reported:\n\naudit: type=1400 audit(1514679888.244:9):\
  \ avc:  denied  { write } for\npid=3194 comm=\"syzkaller021477\" path=\"socket:[11143]\"\
  \ dev=\"sockfs\"\nino=11143 scontext=unconfined_u:system_r:insmod_t:s0-s0:c0.c1023\n\
  tcontext=unconfined_u:system_r:insmod_t:s0-s0:c0.c1023\ntclass=netlink_generic_socket\
  \ permissive=1\nReviewed-by: Kirill Tkhai <ktkhai@virtuozzo.com>\n\n=============================\n\
  WARNING: suspicious RCU usage\n4.15.0-rc5+ #152 Not tainted\n-----------------------------\n\
  net/tipc/bearer.c:177 suspicious rcu_dereference_protected() usage!\n\nother info\
  \ that might help us debug this:\n\nrcu_scheduler_active = 2, debug_locks = 1\n\
  2 locks held by syzkaller021477/3194:\n  #0:  (cb_lock){++++}, at: [<00000000d20133ea>]\
  \ genl_rcv+0x19/0x40\nnet/netlink/genetlink.c:634\n  #1:  (genl_mutex){+.+.}, at:\
  \ [<00000000fcc5d1bc>] genl_lock\nnet/netlink/genetlink.c:33 [inline]\n  #1:  (genl_mutex){+.+.},\
  \ at: [<00000000fcc5d1bc>] genl_rcv_msg+0x115/0x140\nnet/netlink/genetlink.c:622\n\
  \nstack backtrace:\nCPU: 1 PID: 3194 Comm: syzkaller021477 Not tainted 4.15.0-rc5+\
  \ #152\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS\n\
  Google 01/01/2011\nCall Trace:\n  __dump_stack lib/dump_stack.c:17 [inline]\n  dump_stack+0x194/0x257\
  \ lib/dump_stack.c:53\n  lockdep_rcu_suspicious+0x123/0x170 kernel/locking/lockdep.c:4585\n\
  \  tipc_bearer_find+0x2b4/0x3b0 net/tipc/bearer.c:177\n  tipc_nl_compat_link_set+0x329/0x9f0\
  \ net/tipc/netlink_compat.c:729\n  __tipc_nl_compat_doit net/tipc/netlink_compat.c:288\
  \ [inline]\n  tipc_nl_compat_doit+0x15b/0x660 net/tipc/netlink_compat.c:335\n  tipc_nl_compat_handle\
  \ net/tipc/netlink_compat.c:1119 [inline]\n  tipc_nl_compat_recv+0x112f/0x18f0 net/tipc/netlink_compat.c:1201\n\
  \  genl_family_rcv_msg+0x7b7/0xfb0 net/netlink/genetlink.c:599\n  genl_rcv_msg+0xb2/0x140\
  \ net/netlink/genetlink.c:624\n  netlink_rcv_skb+0x21e/0x460 net/netlink/af_netlink.c:2408\n\
  \  genl_rcv+0x28/0x40 net/netlink/genetlink.c:635\n  netlink_unicast_kernel net/netlink/af_netlink.c:1275\
  \ [inline]\n  netlink_unicast+0x4e8/0x6f0 net/netlink/af_netlink.c:1301\n  netlink_sendmsg+0xa4a/0xe60\
  \ net/netlink/af_netlink.c:1864\n  sock_sendmsg_nosec net/socket.c:636 [inline]\n\
  \  sock_sendmsg+0xca/0x110 net/socket.c:646\n  sock_write_iter+0x31a/0x5d0 net/socket.c:915\n\
  \  call_write_iter include/linux/fs.h:1772 [inline]\n  new_sync_write fs/read_write.c:469\
  \ [inline]\n  __vfs_write+0x684/0x970 fs/read_write.c:482\n  vfs_write+0x189/0x510\
  \ fs/read_write.c:544\n  SYSC_write fs/read_write.c:589 [inline]\n  SyS_write+0xef/0x220\
  \ fs/read_write.c:581\n  do_syscall_32_irqs_on arch/x86/entry/common.c:327 [inline]\n\
  \  do_fast_syscall_32+0x3ee/0xf9d arch/x86/entry/common.c:389\n  entry_SYSENTER_compat+0x54/0x63\
  \ arch/x86/entry/entry_64_compat.S:129\n\nIn order to correct the mistake, __tipc_nl_compat_doit()\
  \ has been\nprotected by RTNL lock, which means the whole operation of setting\n\
  bearer/media properties is under RTNL protection.\n\nSigned-off-by: Ying Xue <ying.xue@windriver.com>\n\
  Reported-by: syzbot <syzbot+6345fd433db009b29413@syzkaller.appspotmail.com>\n\n\
  Signed-off-by: David S. Miller <davem@davemloft.net>\n"
submodule:
- net/tipc
hunk_count: 5
covered_count: 5
