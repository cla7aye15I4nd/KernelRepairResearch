id: 561a74f84100162990b2
bug_link: https://syzkaller.appspot.com/bug?extid=561a74f84100162990b2
title: possible deadlock in _snd_pcm_stream_lock_irqsave
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 534ad9afb19b5ac810a5e1c638f371e81e0c1ed6
fix_commit: 6564d0ad67efb2d977e130e7448505ee538af016
datetime: '2020-09-22T11:07:10+02:00'
fix_commit_message: 'ALSA: ctl: Workaround for lockdep warning wrt card->ctl_files_rwlock


  The recent change in lockdep for read lock caused the deadlock

  warnings in ALSA control code which uses the read_lock() for

  notification and else while write_lock_irqsave() is used for adding

  and removing the list entry.  Although a deadlock would practically

  never hit in a real usage (the addition and the deletion can''t happen

  with the notification), it''s better to fix the read_lock() usage in a

  semantically correct way.


  This patch replaces the read_lock() calls with read_lock_irqsave()

  version for avoiding a reported deadlock.  The notification code path

  takes the irq disablement in anyway, and other code paths are very

  short execution, hence there shouldn''t be any big performance hit by

  this change.


  Fixes: e918188611f0 ("locking: More accurate annotations for read_lock()")

  Reported-by: syzbot+561a74f84100162990b2@syzkaller.appspotmail.com

  Link: https://lore.kernel.org/r/20200922084953.29018-1-tiwai@suse.de

  Signed-off-by: Takashi Iwai <tiwai@suse.de>

  '
submodule:
- sound/core
hunk_count: 5
covered_count: 2
