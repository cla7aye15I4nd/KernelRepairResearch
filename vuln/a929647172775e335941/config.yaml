id: a929647172775e335941
bug_link: https://syzkaller.appspot.com/bug?extid=a929647172775e335941
title: 'KASAN: use-after-free Read in addr_handler (2)'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: cc9c037343898eb7a775e6b81d092ee21eeff218
fix_commit: f6a9d47ae6854980fc4b1676f1fe9f9fa45ea4e2
datetime: '2020-07-29T14:10:02-03:00'
fix_commit_message: 'RDMA/cma: Execute rdma_cm destruction from a handler properly


  When a rdma_cm_id needs to be destroyed after a handler callback fails,

  part of the destruction pattern is open coded into each call site.


  Unfortunately the blind assignment to state discards important information

  needed to do cma_cancel_operation(). This results in active operations

  being left running after rdma_destroy_id() completes, and the

  use-after-free bugs from KASAN.


  Consolidate this entire pattern into destroy_id_handler_unlock() and

  manage the locking correctly. The state should be set to

  RDMA_CM_DESTROYING under the handler_lock to atomically ensure no futher

  handlers are called.


  Link: https://lore.kernel.org/r/20200723070707.1771101-5-leon@kernel.org

  Reported-by: syzbot+08092148130652a6faae@syzkaller.appspotmail.com

  Reported-by: syzbot+a929647172775e335941@syzkaller.appspotmail.com

  Signed-off-by: Leon Romanovsky <leonro@mellanox.com>

  Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>

  '
submodule:
- drivers/infiniband/core
hunk_count: 17
covered_count: 1
