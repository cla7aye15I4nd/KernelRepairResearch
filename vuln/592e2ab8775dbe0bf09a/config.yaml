id: 592e2ab8775dbe0bf09a
bug_link: https://syzkaller.appspot.com/bug?extid=592e2ab8775dbe0bf09a
title: 'INFO: task hung in uevent_show (2)'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 332ec18d57de2f77f43a988cbf1cb7693409434a
fix_commit: dc1771f718548f7d4b93991b174c6e7b5e1ba410
datetime: '2025-04-15T17:04:35+02:00'
fix_commit_message: 'Revert "drivers: core: synchronize really_probe() and dev_uevent()"


  This reverts commit c0a40097f0bc81deafc15f9195d1fb54595cd6d0.


  Probing a device can take arbitrary long time. In the field we observed

  that, for example, probing a bad micro-SD cards in an external USB card

  reader (or maybe cards were good but cables were flaky) sometimes takes

  longer than 2 minutes due to multiple retries at various levels of the

  stack. We can not block uevent_show() method for that long because udev

  is reading that attribute very often and that blocks udev and interferes

  with booting of the system.


  The change that introduced locking was concerned with dev_uevent()

  racing with unbinding the driver. However we can handle it without

  locking (which will be done in subsequent patch).


  There was also claim that synchronization with probe() is needed to

  properly load USB drivers, however this is a red herring: the change

  adding the lock was introduced in May of last year and USB loading and

  probing worked properly for many years before that.


  Revert the harmful locking.


  Cc: stable@vger.kernel.org

  Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>

  Reviewed-by: Masami Hiramatsu (Google) <mhiramat@kernel.org>

  Link: https://lore.kernel.org/r/20250311052417.1846985-1-dmitry.torokhov@gmail.com

  Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

  '
submodule:
- drivers/base
hunk_count: 1
covered_count: 1
