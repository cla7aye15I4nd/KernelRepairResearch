id: 3361c2d6f78a3e0892f9
bug_link: https://syzkaller.appspot.com/bug?extid=3361c2d6f78a3e0892f9
title: 'KMSAN: uninit-value in mii_nway_restart (2)'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 8542d6fac25c03b4bf36b2d762cfe60fda8491bb
fix_commit: 9ad0452c0277b816a435433cca601304cfac7c21
datetime: '2025-05-28T19:10:04-07:00'
fix_commit_message: "net: ch9200: fix uninitialised access during mii_nway_restart\n\
  \nIn mii_nway_restart() the code attempts to call\nmii->mdio_read which is ch9200_mdio_read().\
  \ ch9200_mdio_read()\nutilises a local buffer called \"buff\", which is initialised\n\
  with control_read(). However \"buff\" is conditionally\ninitialised inside control_read():\n\
  \n        if (err == size) {\n                memcpy(data, buf, size);\n       \
  \ }\n\nIf the condition of \"err == size\" is not met, then\n\"buff\" remains uninitialised.\
  \ Once this happens the\nuninitialised \"buff\" is accessed and returned during\n\
  ch9200_mdio_read():\n\n        return (buff[0] | buff[1] << 8);\n\nThe problem stems\
  \ from the fact that ch9200_mdio_read()\nignores the return value of control_read(),\
  \ leading to\nuinit-access of \"buff\".\n\nTo fix this we should check the return\
  \ value of\ncontrol_read() and return early on error.\n\nReported-by: syzbot <syzbot+3361c2d6f78a3e0892f9@syzkaller.appspotmail.com>\n\
  Closes: https://syzkaller.appspot.com/bug?extid=3361c2d6f78a3e0892f9\nTested-by:\
  \ syzbot <syzbot+3361c2d6f78a3e0892f9@syzkaller.appspotmail.com>\nFixes: 4a476bd6d1d9\
  \ (\"usbnet: New driver for QinHeng CH9200 devices\")\nCc: stable@vger.kernel.org\n\
  Signed-off-by: Qasim Ijaz <qasdev00@gmail.com>\nLink: https://patch.msgid.link/20250526183607.66527-1-qasdev00@gmail.com\n\
  Signed-off-by: Jakub Kicinski <kuba@kernel.org>\n"
submodule:
- drivers/net/usb
hunk_count: 2
covered_count: 2
