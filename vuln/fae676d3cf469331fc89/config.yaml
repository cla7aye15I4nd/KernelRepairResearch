id: fae676d3cf469331fc89
bug_link: https://syzkaller.appspot.com/bug?extid=fae676d3cf469331fc89
title: 'WARNING: zero-size vmalloc in print_tainted'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 7112cd26e606c7ba51f9cc5c1905f06039f6f379
fix_commit: a12bbb3cccf03b12847de0f7a6772127f90936ac
datetime: '2023-10-09T16:13:29+02:00'
fix_commit_message: "xdp: Fix zero-size allocation warning in xskq_create()\n\nSyzkaller\
  \ reported the following issue:\n\n  ------------[ cut here ]------------\n  WARNING:\
  \ CPU: 0 PID: 2807 at mm/vmalloc.c:3247 __vmalloc_node_range (mm/vmalloc.c:3361)\n\
  \  Modules linked in:\n  CPU: 0 PID: 2807 Comm: repro Not tainted 6.6.0-rc2+ #12\n\
  \  Hardware name: Generic DT based system\n  unwind_backtrace from show_stack (arch/arm/kernel/traps.c:258)\n\
  \  show_stack from dump_stack_lvl (lib/dump_stack.c:107 (discriminator 1))\n  dump_stack_lvl\
  \ from __warn (kernel/panic.c:633 kernel/panic.c:680)\n  __warn from warn_slowpath_fmt\
  \ (./include/linux/context_tracking.h:153 kernel/panic.c:700)\n  warn_slowpath_fmt\
  \ from __vmalloc_node_range (mm/vmalloc.c:3361 (discriminator 3))\n  __vmalloc_node_range\
  \ from vmalloc_user (mm/vmalloc.c:3478)\n  vmalloc_user from xskq_create (net/xdp/xsk_queue.c:40)\n\
  \  xskq_create from xsk_setsockopt (net/xdp/xsk.c:953 net/xdp/xsk.c:1286)\n  xsk_setsockopt\
  \ from __sys_setsockopt (net/socket.c:2308)\n  __sys_setsockopt from ret_fast_syscall\
  \ (arch/arm/kernel/entry-common.S:68)\n\nxskq_get_ring_size() uses struct_size()\
  \ macro to safely calculate the\nsize of struct xsk_queue and q->nentries of desc\
  \ members. But the\nsyzkaller repro was able to set q->nentries with the value initially\n\
  taken from copy_from_sockptr() high enough to return SIZE_MAX by\nstruct_size().\
  \ The next PAGE_ALIGN(size) is such case will overflow\nthe size_t value and set\
  \ it to 0. This will trigger WARN_ON_ONCE in\nvmalloc_user() -> __vmalloc_node_range().\n\
  \nThe issue is reproducible on 32-bit arm kernel.\n\nFixes: 9f78bf330a66 (\"xsk:\
  \ support use vaddr as ring\")\nReported-by: syzbot+fae676d3cf469331fc89@syzkaller.appspotmail.com\n\
  Closes: https://lore.kernel.org/all/000000000000c84b4705fb31741e@google.com/T/\n\
  Reported-by: syzbot+b132693e925cbbd89e26@syzkaller.appspotmail.com\nCloses: https://lore.kernel.org/all/000000000000e20df20606ebab4f@google.com/T/\n\
  Signed-off-by: Andrew Kanner <andrew.kanner@gmail.com>\nSigned-off-by: Daniel Borkmann\
  \ <daniel@iogearbox.net>\nTested-by: syzbot+fae676d3cf469331fc89@syzkaller.appspotmail.com\n\
  Acked-by: Magnus Karlsson <magnus.karlsson@intel.com>\nLink: https://syzkaller.appspot.com/bug?extid=fae676d3cf469331fc89\n\
  Link: https://lore.kernel.org/bpf/20231007075148.1759-1-andrew.kanner@gmail.com\n"
submodule:
- net/xdp
hunk_count: 1
covered_count: 1
