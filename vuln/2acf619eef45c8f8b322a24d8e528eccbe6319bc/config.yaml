id: 2acf619eef45c8f8b322a24d8e528eccbe6319bc
bug_link: https://syzkaller.appspot.com/bug?extid=2acf619eef45c8f8b322a24d8e528eccbe6319bc
title: WARNING in tracepoint_probe_register_prio
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 1f2cac107c591c24b60b115d6050adc213d10fc0
fix_commit: a6da0024ffc19e0d47712bb5ca4fd083f76b07df
datetime: '2017-11-10T19:53:25-07:00'
fix_commit_message: "blktrace: fix unlocked registration of tracepoints\n\nWe need\
  \ to ensure that tracepoints are registered and unregistered\nwith the users of\
  \ them. The existing atomic count isn't enough for\nthat. Add a lock around the\
  \ tracepoints, so we serialize access\nto them.\n\nThis fixes cases where we have\
  \ multiple users setting up and\ntearing down tracepoints, like this:\n\nCPU: 0\
  \ PID: 2995 Comm: syzkaller857118 Not tainted\n4.14.0-rc5-next-20171018+ #36\nHardware\
  \ name: Google Google Compute Engine/Google Compute Engine, BIOS\nGoogle 01/01/2011\n\
  Call Trace:\n  __dump_stack lib/dump_stack.c:16 [inline]\n  dump_stack+0x194/0x257\
  \ lib/dump_stack.c:52\n  panic+0x1e4/0x41c kernel/panic.c:183\n  __warn+0x1c4/0x1e0\
  \ kernel/panic.c:546\n  report_bug+0x211/0x2d0 lib/bug.c:183\n  fixup_bug+0x40/0x90\
  \ arch/x86/kernel/traps.c:177\n  do_trap_no_signal arch/x86/kernel/traps.c:211 [inline]\n\
  \  do_trap+0x260/0x390 arch/x86/kernel/traps.c:260\n  do_error_trap+0x120/0x390\
  \ arch/x86/kernel/traps.c:297\n  do_invalid_op+0x1b/0x20 arch/x86/kernel/traps.c:310\n\
  \  invalid_op+0x18/0x20 arch/x86/entry/entry_64.S:905\nRIP: 0010:tracepoint_add_func\
  \ kernel/tracepoint.c:210 [inline]\nRIP: 0010:tracepoint_probe_register_prio+0x397/0x9a0\
  \ kernel/tracepoint.c:283\nRSP: 0018:ffff8801d1d1f6c0 EFLAGS: 00010293\nRAX: ffff8801d22e8540\
  \ RBX: 00000000ffffffef RCX: ffffffff81710f07\nRDX: 0000000000000000 RSI: ffffffff85b679c0\
  \ RDI: ffff8801d5f19818\nRBP: ffff8801d1d1f7c8 R08: ffffffff81710c10 R09: 0000000000000004\n\
  R10: ffff8801d1d1f6b0 R11: 0000000000000003 R12: ffffffff817597f0\nR13: 0000000000000000\
  \ R14: 00000000ffffffff R15: ffff8801d1d1f7a0\n  tracepoint_probe_register+0x2a/0x40\
  \ kernel/tracepoint.c:304\n  register_trace_block_rq_insert include/trace/events/block.h:191\
  \ [inline]\n  blk_register_tracepoints+0x1e/0x2f0 kernel/trace/blktrace.c:1043\n\
  \  do_blk_trace_setup+0xa10/0xcf0 kernel/trace/blktrace.c:542\n  blk_trace_setup+0xbd/0x180\
  \ kernel/trace/blktrace.c:564\n  sg_ioctl+0xc71/0x2d90 drivers/scsi/sg.c:1089\n\
  \  vfs_ioctl fs/ioctl.c:45 [inline]\n  do_vfs_ioctl+0x1b1/0x1520 fs/ioctl.c:685\n\
  \  SYSC_ioctl fs/ioctl.c:700 [inline]\n  SyS_ioctl+0x8f/0xc0 fs/ioctl.c:691\n  entry_SYSCALL_64_fastpath+0x1f/0xbe\n\
  RIP: 0033:0x444339\nRSP: 002b:00007ffe05bb5b18 EFLAGS: 00000206 ORIG_RAX: 0000000000000010\n\
  RAX: ffffffffffffffda RBX: 00000000006d66c0 RCX: 0000000000444339\nRDX: 000000002084cf90\
  \ RSI: 00000000c0481273 RDI: 0000000000000009\nRBP: 0000000000000082 R08: 0000000000000000\
  \ R09: 0000000000000000\nR10: 0000000000000000 R11: 0000000000000206 R12: ffffffffffffffff\n\
  R13: 00000000c0481273 R14: 0000000000000000 R15: 0000000000000000\n\nsince we can\
  \ now run these in parallel. Ensure that the exported helpers\nfor doing this are\
  \ grabbing the queue trace mutex.\n\nReported-by: Steven Rostedt <rostedt@goodmis.org>\n\
  Tested-by: Dmitry Vyukov <dvyukov@google.com>\nSigned-off-by: Jens Axboe <axboe@kernel.dk>\n"
submodule:
- kernel/trace
hunk_count: 5
covered_count: 2
