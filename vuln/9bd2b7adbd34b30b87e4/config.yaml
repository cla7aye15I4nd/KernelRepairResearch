id: 9bd2b7adbd34b30b87e4
bug_link: https://syzkaller.appspot.com/bug?extid=9bd2b7adbd34b30b87e4
title: 'BUG: unable to handle kernel paging request in truncate_inode_partial_folio'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: c2cb0dcce9dd8b748b6ca8bb8d4a389f2e232307
fix_commit: 84ac013046ccc438af04b7acecd4d3ab84fe4bde
datetime: '2022-07-18T15:07:51-07:00'
fix_commit_message: "secretmem: fix unhandled fault in truncate\n\nsyzkaller reports\
  \ the following issue:\n\nBUG: unable to handle page fault for address: ffff888021f7e005\n\
  PGD 11401067 P4D 11401067 PUD 11402067 PMD 21f7d063 PTE 800fffffde081060\nOops:\
  \ 0002 [#1] PREEMPT SMP KASAN\nCPU: 0 PID: 3761 Comm: syz-executor281 Not tainted\
  \ 5.19.0-rc4-syzkaller-00014-g941e3e791269 #0\nHardware name: Google Google Compute\
  \ Engine/Google Compute Engine, BIOS Google 01/01/2011\nRIP: 0010:memset_erms+0x9/0x10\
  \ arch/x86/lib/memset_64.S:64\nCode: c1 e9 03 40 0f b6 f6 48 b8 01 01 01 01 01 01\
  \ 01 01 48 0f af c6 f3 48 ab 89 d1 f3 aa 4c 89 c8 c3 90 49 89 f9 40 88 f0 48 89\
  \ d1 <f3> aa 4c 89 c8 c3 90 49 89 fa 40 0f b6 ce 48 b8 01 01 01 01 01 01\nRSP: 0018:ffffc9000329fa90\
  \ EFLAGS: 00010202\nRAX: 0000000000000000 RBX: 0000000000001000 RCX: 0000000000000ffb\n\
  RDX: 0000000000000ffb RSI: 0000000000000000 RDI: ffff888021f7e005\nRBP: ffffea000087df80\
  \ R08: 0000000000000001 R09: ffff888021f7e005\nR10: ffffed10043efdff R11: 0000000000000000\
  \ R12: 0000000000000005\nR13: 0000000000000000 R14: 0000000000001000 R15: 0000000000000ffb\n\
  FS:  00007fb29d8b2700(0000) GS:ffff8880b9a00000(0000) knlGS:0000000000000000\nCS:\
  \  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: ffff888021f7e005 CR3: 0000000026e7b000\
  \ CR4: 00000000003506f0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n\
  DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n\
  \ <TASK>\n zero_user_segments include/linux/highmem.h:272 [inline]\n folio_zero_range\
  \ include/linux/highmem.h:428 [inline]\n truncate_inode_partial_folio+0x76a/0xdf0\
  \ mm/truncate.c:237\n truncate_inode_pages_range+0x83b/0x1530 mm/truncate.c:381\n\
  \ truncate_inode_pages mm/truncate.c:452 [inline]\n truncate_pagecache+0x63/0x90\
  \ mm/truncate.c:753\n simple_setattr+0xed/0x110 fs/libfs.c:535\n secretmem_setattr+0xae/0xf0\
  \ mm/secretmem.c:170\n notify_change+0xb8c/0x12b0 fs/attr.c:424\n do_truncate+0x13c/0x200\
  \ fs/open.c:65\n do_sys_ftruncate+0x536/0x730 fs/open.c:193\n do_syscall_x64 arch/x86/entry/common.c:50\
  \ [inline]\n do_syscall_64+0x35/0xb0 arch/x86/entry/common.c:80\n entry_SYSCALL_64_after_hwframe+0x46/0xb0\n\
  RIP: 0033:0x7fb29d900899\nCode: 28 00 00 00 75 05 48 83 c4 28 c3 e8 11 15 00 00\
  \ 90 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05\
  \ <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 b8 ff ff ff f7 d8 64 89 01 48\nRSP: 002b:00007fb29d8b2318\
  \ EFLAGS: 00000246 ORIG_RAX: 000000000000004d\nRAX: ffffffffffffffda RBX: 00007fb29d988408\
  \ RCX: 00007fb29d900899\nRDX: 00007fb29d900899 RSI: 0000000000000005 RDI: 0000000000000003\n\
  RBP: 00007fb29d988400 R08: 0000000000000000 R09: 0000000000000000\nR10: 0000000000000000\
  \ R11: 0000000000000246 R12: 00007fb29d98840c\nR13: 00007ffca01a23bf R14: 00007fb29d8b2400\
  \ R15: 0000000000022000\n </TASK>\nModules linked in:\nCR2: ffff888021f7e005\n---[\
  \ end trace 0000000000000000 ]---\n\nEric Biggers suggested that this happens when\n\
  secretmem_setattr()->simple_setattr() races with secretmem_fault() so that\na page\
  \ that is faulted in by secretmem_fault() (and thus removed from the\ndirect map)\
  \ is zeroed by inode truncation right afterwards.\n\nUse mapping->invalidate_lock\
  \ to make secretmem_fault() and\nsecretmem_setattr() mutually exclusive.\n\n[rppt@linux.ibm.com:\
  \ v3]\n  Link: https://lkml.kernel.org/r/20220714091337.412297-1-rppt@kernel.org\n\
  Link: https://lkml.kernel.org/r/20220707165650.248088-1-rppt@kernel.org\nReported-by:\
  \ syzbot+9bd2b7adbd34b30b87e4@syzkaller.appspotmail.com\nSigned-off-by: Mike Rapoport\
  \ <rppt@linux.ibm.com>\nSuggested-by: Eric Biggers <ebiggers@kernel.org>\nReviewed-by:\
  \ Axel Rasmussen <axelrasmussen@google.com>\nReviewed-by: Jan Kara <jack@suse.cz>\n\
  Cc: Eric Biggers <ebiggers@kernel.org>\nCc: Hillf Danton <hdanton@sina.com>\nCc:\
  \ Matthew Wilcox <willy@infradead.org>\nCc: <stable@vger.kernel.org>\nSigned-off-by:\
  \ Andrew Morton <akpm@linux-foundation.org>\n"
submodule:
- mm
hunk_count: 4
covered_count: 2
