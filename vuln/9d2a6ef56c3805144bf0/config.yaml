id: 9d2a6ef56c3805144bf0
bug_link: https://syzkaller.appspot.com/bug?extid=9d2a6ef56c3805144bf0
title: 'KASAN: slab-use-after-free Read in tcp_prune_ofo_queue'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 511ad4c26446e5254b94352f55067c501d319462
fix_commit: 7eeabfb23738eaa01d94342550e30d9f8502b8df
datetime: '2025-07-16T16:13:26-07:00'
fix_commit_message: "tcp: fix UaF in tcp_prune_ofo_queue()\n\nThe CI reported a UaF\
  \ in tcp_prune_ofo_queue():\n\nBUG: KASAN: slab-use-after-free in tcp_prune_ofo_queue+0x55d/0x660\n\
  Read of size 4 at addr ffff8880134729d8 by task socat/20348\n\nCPU: 0 UID: 0 PID:\
  \ 20348 Comm: socat Not tainted 6.16.0-rc5-virtme #1 PREEMPT(full)\nHardware name:\
  \ Bochs Bochs, BIOS Bochs 01/01/2011\nCall Trace:\n <TASK>\n dump_stack_lvl+0x82/0xd0\n\
  \ print_address_description.constprop.0+0x2c/0x400\n print_report+0xb4/0x270\n kasan_report+0xca/0x100\n\
  \ tcp_prune_ofo_queue+0x55d/0x660\n tcp_try_rmem_schedule+0x855/0x12e0\n tcp_data_queue+0x4dd/0x2260\n\
  \ tcp_rcv_established+0x5e8/0x2370\n tcp_v4_do_rcv+0x4ba/0x8c0\n __release_sock+0x27a/0x390\n\
  \ release_sock+0x53/0x1d0\n tcp_sendmsg+0x37/0x50\n sock_write_iter+0x3c1/0x520\n\
  \ vfs_write+0xc09/0x1210\n ksys_write+0x183/0x1d0\n do_syscall_64+0xc1/0x380\n entry_SYSCALL_64_after_hwframe+0x77/0x7f\n\
  RIP: 0033:0x7fcf73ef2337\nCode: 0f 00 f7 d8 64 89 02 48 c7 c0 ff ff ff ff eb b7\
  \ 0f 1f 00 f3 0f 1e fa 64 8b 04 25 18 00 00 00 85 c0 75 10 b8 01 00 00 00 0f 05\
  \ <48> 3d 00 f0 ff ff 77 51 c3 48 83 ec 28 48 89 54 24 18 48 89 74 24\nRSP: 002b:00007ffd4f924708\
  \ EFLAGS: 00000246 ORIG_RAX: 0000000000000001\nRAX: ffffffffffffffda RBX: 0000000000000000\
  \ RCX: 00007fcf73ef2337\nRDX: 0000000000002000 RSI: 0000555f11d1a000 RDI: 0000000000000008\n\
  RBP: 0000555f11d1a000 R08: 0000000000002000 R09: 0000000000000000\nR10: 0000000000000040\
  \ R11: 0000000000000246 R12: 0000000000000008\nR13: 0000000000002000 R14: 0000555ee1a44570\
  \ R15: 0000000000002000\n </TASK>\n\nAllocated by task 20348:\n kasan_save_stack+0x24/0x50\n\
  \ kasan_save_track+0x14/0x30\n __kasan_slab_alloc+0x59/0x70\n kmem_cache_alloc_node_noprof+0x110/0x340\n\
  \ __alloc_skb+0x213/0x2e0\n tcp_collapse+0x43f/0xff0\n tcp_try_rmem_schedule+0x6b9/0x12e0\n\
  \ tcp_data_queue+0x4dd/0x2260\n tcp_rcv_established+0x5e8/0x2370\n tcp_v4_do_rcv+0x4ba/0x8c0\n\
  \ __release_sock+0x27a/0x390\n release_sock+0x53/0x1d0\n tcp_sendmsg+0x37/0x50\n\
  \ sock_write_iter+0x3c1/0x520\n vfs_write+0xc09/0x1210\n ksys_write+0x183/0x1d0\n\
  \ do_syscall_64+0xc1/0x380\n entry_SYSCALL_64_after_hwframe+0x77/0x7f\n\nFreed by\
  \ task 20348:\n kasan_save_stack+0x24/0x50\n kasan_save_track+0x14/0x30\n kasan_save_free_info+0x3b/0x60\n\
  \ __kasan_slab_free+0x38/0x50\n kmem_cache_free+0x149/0x330\n tcp_prune_ofo_queue+0x211/0x660\n\
  \ tcp_try_rmem_schedule+0x855/0x12e0\n tcp_data_queue+0x4dd/0x2260\n tcp_rcv_established+0x5e8/0x2370\n\
  \ tcp_v4_do_rcv+0x4ba/0x8c0\n __release_sock+0x27a/0x390\n release_sock+0x53/0x1d0\n\
  \ tcp_sendmsg+0x37/0x50\n sock_write_iter+0x3c1/0x520\n vfs_write+0xc09/0x1210\n\
  \ ksys_write+0x183/0x1d0\n do_syscall_64+0xc1/0x380\n entry_SYSCALL_64_after_hwframe+0x77/0x7f\n\
  \nThe buggy address belongs to the object at ffff888013472900\n which belongs to\
  \ the cache skbuff_head_cache of size 232\nThe buggy address is located 216 bytes\
  \ inside of\n freed 232-byte region [ffff888013472900, ffff8880134729e8)\n\nThe\
  \ buggy address belongs to the physical page:\npage: refcount:0 mapcount:0 mapping:0000000000000000\
  \ index:0x0 pfn:0x13472\nhead: order:1 mapcount:0 entire_mapcount:0 nr_pages_mapped:0\
  \ pincount:0\nflags: 0x80000000000040(head|node=0|zone=1)\npage_type: f5(slab)\n\
  raw: 0080000000000040 ffff88800198fb40 ffffea0000347b10 ffffea00004f5290\nraw: 0000000000000000\
  \ 0000000000120012 00000000f5000000 0000000000000000\nhead: 0080000000000040 ffff88800198fb40\
  \ ffffea0000347b10 ffffea00004f5290\nhead: 0000000000000000 0000000000120012 00000000f5000000\
  \ 0000000000000000\nhead: 0080000000000001 ffffea00004d1c81 00000000ffffffff 00000000ffffffff\n\
  head: 0000000000000000 0000000000000000 00000000ffffffff 0000000000000000\npage\
  \ dumped because: kasan: bad access detected\n\nMemory state around the buggy address:\n\
  \ ffff888013472880: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc\n ffff888013472900:\
  \ fa fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb\n>ffff888013472980: fb fb fb fb\
  \ fb fb fb fb fb fb fb fb fb fc fc fc\n                                        \
  \            ^\n ffff888013472a00: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc\
  \ fc\n ffff888013472a80: fc fc fc fc fc fc fc fc fa fb fb fb fb fb fb fb\n\nIndeed\
  \ tcp_prune_ofo_queue() is reusing the skb dropped a few lines\nabove. The caller\
  \ wants to enqueue 'in_skb', lets check space vs the\nlatter.\n\nFixes: 1d2fbaad7cd8\
  \ (\"tcp: stronger sk_rcvbuf checks\")\nSigned-off-by: Paolo Abeni <pabeni@redhat.com>\n\
  Tested-by: syzbot+865aca08c0533171bf6a@syzkaller.appspotmail.com\nReviewed-by: Kuniyuki\
  \ Iwashima <kuniyu@google.com>\nLink: https://patch.msgid.link/b78d2d9bdccca29021eed9a0e7097dd8dc00f485.1752567053.git.pabeni@redhat.com\n\
  Signed-off-by: Jakub Kicinski <kuba@kernel.org>\n"
submodule:
- net/ipv4
hunk_count: 1
covered_count: 1
