id: d9c8bf24e56416d7ce2c
bug_link: https://syzkaller.appspot.com/bug?extid=d9c8bf24e56416d7ce2c
title: memory leak in ppp_write
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 8875cf9c7cde9b110a7370654cc7b51ff9a9d8fa
fix_commit: 4c247de564f1ff614d11b3bb5313fb70d7b9598b
datetime: '2019-09-25T13:45:03+02:00'
fix_commit_message: "ppp: Fix memory leak in ppp_write\n\nWhen ppp is closing, __ppp_xmit_process()\
  \ failed to enqueue skb\nand skb allocated in ppp_write() is leaked.\n\nsyzbot reported\
  \ :\nBUG: memory leak\nunreferenced object 0xffff88812a17bc00 (size 224):\n  comm\
  \ \"syz-executor673\", pid 6952, jiffies 4294942888 (age 13.040s)\n  hex dump (first\
  \ 32 bytes):\n    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n\
  \    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n  backtrace:\n\
  \    [<00000000d110fff9>] kmemleak_alloc_recursive include/linux/kmemleak.h:43 [inline]\n\
  \    [<00000000d110fff9>] slab_post_alloc_hook mm/slab.h:522 [inline]\n    [<00000000d110fff9>]\
  \ slab_alloc_node mm/slab.c:3262 [inline]\n    [<00000000d110fff9>] kmem_cache_alloc_node+0x163/0x2f0\
  \ mm/slab.c:3574\n    [<000000002d616113>] __alloc_skb+0x6e/0x210 net/core/skbuff.c:197\n\
  \    [<000000000167fc45>] alloc_skb include/linux/skbuff.h:1055 [inline]\n    [<000000000167fc45>]\
  \ ppp_write+0x48/0x120 drivers/net/ppp/ppp_generic.c:502\n    [<000000009ab42c0b>]\
  \ __vfs_write+0x43/0xa0 fs/read_write.c:494\n    [<00000000086b2e22>] vfs_write\
  \ fs/read_write.c:558 [inline]\n    [<00000000086b2e22>] vfs_write+0xee/0x210 fs/read_write.c:542\n\
  \    [<00000000a2b70ef9>] ksys_write+0x7c/0x130 fs/read_write.c:611\n    [<00000000ce5e0fdd>]\
  \ __do_sys_write fs/read_write.c:623 [inline]\n    [<00000000ce5e0fdd>] __se_sys_write\
  \ fs/read_write.c:620 [inline]\n    [<00000000ce5e0fdd>] __x64_sys_write+0x1e/0x30\
  \ fs/read_write.c:620\n    [<00000000d9d7b370>] do_syscall_64+0x76/0x1a0 arch/x86/entry/common.c:296\n\
  \    [<0000000006e6d506>] entry_SYSCALL_64_after_hwframe+0x44/0xa9\n\nFix this by\
  \ freeing skb, if ppp is closing.\n\nFixes: 6d066734e9f0 (\"ppp: avoid loop in xmit\
  \ recursion detection code\")\nReported-and-tested-by: syzbot+d9c8bf24e56416d7ce2c@syzkaller.appspotmail.com\n\
  Signed-off-by: Takeshi Misawa <jeliantsurux@gmail.com>\nReviewed-by: Guillaume Nault\
  \ <gnault@redhat.com>\nTested-by: Guillaume Nault <gnault@redhat.com>\nSigned-off-by:\
  \ David S. Miller <davem@davemloft.net>\n"
submodule:
- drivers/net/ppp
hunk_count: 1
covered_count: 0
