id: 31e8daa8b3fc129e75f2
bug_link: https://syzkaller.appspot.com/bug?extid=31e8daa8b3fc129e75f2
title: 'WARNING: lock held when returning to user space!'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 1e047eaab3bb5564f25b41e9cd3a053009f4e789
fix_commit: bdac616db9bbadb90b7d6a406144571015e138f7
datetime: '2018-04-10T08:38:46-06:00'
fix_commit_message: 'loop: fix LOOP_GET_STATUS lock imbalance


  Commit 2d1d4c1e591f made loop_get_status() drop lo_ctx_mutex before

  returning, but the loop_get_status_old(), loop_get_status64(), and

  loop_get_status_compat() wrappers don''t call loop_get_status() if the

  passed argument is NULL. The callers expect that the lock is dropped, so

  make sure we drop it in that case, too.


  Reported-by: syzbot+31e8daa8b3fc129e75f2@syzkaller.appspotmail.com

  Fixes: 2d1d4c1e591f ("loop: don''t call into filesystem while holding lo_ctl_mutex")

  Signed-off-by: Omar Sandoval <osandov@fb.com>

  Signed-off-by: Jens Axboe <axboe@kernel.dk>

  '
submodule:
- drivers/block
hunk_count: 3
covered_count: 1
