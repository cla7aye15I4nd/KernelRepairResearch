id: 09ef48aa58261464b621
bug_link: https://syzkaller.appspot.com/bug?extid=09ef48aa58261464b621
title: 'KASAN: slab-out-of-bounds Read in hid_field_extract'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 348b80b273fbf4ce2a307f9e38eadecf37828cad
fix_commit: 8ec321e96e056de84022c032ffea253431a83c3c
datetime: '2019-12-11T15:17:39+01:00'
fix_commit_message: 'HID: Fix slab-out-of-bounds read in hid_field_extract


  The syzbot fuzzer found a slab-out-of-bounds bug in the HID report

  handler.  The bug was caused by a report descriptor which included a

  field with size 12 bits and count 4899, for a total size of 7349

  bytes.


  The usbhid driver uses at most a single-page 4-KB buffer for reports.

  In the test there wasn''t any problem about overflowing the buffer,

  since only one byte was received from the device.  Rather, the bug

  occurred when the HID core tried to extract the data from the report

  fields, which caused it to try reading data beyond the end of the

  allocated buffer.


  This patch fixes the problem by rejecting any report whose total

  length exceeds the HID_MAX_BUFFER_SIZE limit (minus one byte to allow

  for a possible report index).  In theory a device could have a report

  longer than that, but if there was such a thing we wouldn''t handle it

  correctly anyway.


  Reported-and-tested-by: syzbot+09ef48aa58261464b621@syzkaller.appspotmail.com

  Signed-off-by: Alan Stern <stern@rowland.harvard.edu>

  CC: <stable@vger.kernel.org>

  Signed-off-by: Jiri Kosina <jkosina@suse.cz>

  '
submodule:
- drivers/hid
hunk_count: 1
covered_count: 1
