id: cca39e6e84a367a7e6f6
bug_link: https://syzkaller.appspot.com/bug?extid=cca39e6e84a367a7e6f6
title: general protection fault in dev_map_enqueue (2)
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: a41b3828ec056a631ad22413d4560017fed5c3bd
fix_commit: 09d88791c7cd888d5195c84733caf9183dcfbd16
datetime: '2024-10-01T21:40:12+02:00'
fix_commit_message: 'bpf: Make sure internal and UAPI bpf_redirect flags don''t overlap


  The bpf_redirect_info is shared between the SKB and XDP redirect paths,

  and the two paths use the same numeric flag values in the ri->flags

  field (specifically, BPF_F_BROADCAST == BPF_F_NEXTHOP). This means that

  if skb bpf_redirect_neigh() is used with a non-NULL params argument and,

  subsequently, an XDP redirect is performed using the same

  bpf_redirect_info struct, the XDP path will get confused and end up

  crashing, which syzbot managed to trigger.


  With the stack-allocated bpf_redirect_info, the structure is no longer

  shared between the SKB and XDP paths, so the crash doesn''t happen

  anymore. However, different code paths using identically-numbered flag

  values in the same struct field still seems like a bit of a mess, so

  this patch cleans that up by moving the flag definitions together and

  redefining the three flags in BPF_F_REDIRECT_INTERNAL to not overlap

  with the flags used for XDP. It also adds a BUILD_BUG_ON() check to make

  sure the overlap is not re-introduced by mistake.


  Fixes: e624d4ed4aa8 ("xdp: Extend xdp_redirect_map with broadcast support")

  Reported-by: syzbot+cca39e6e84a367a7e6f6@syzkaller.appspotmail.com

  Signed-off-by: Toke Høiland-Jørgensen <toke@redhat.com>

  Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>

  Acked-by: Daniel Borkmann <daniel@iogearbox.net>

  Closes: https://syzkaller.appspot.com/bug?extid=cca39e6e84a367a7e6f6

  Link: https://lore.kernel.org/bpf/20240920125625.59465-1-toke@redhat.com

  '
submodule:
- include/uapi/linux
- net/core
hunk_count: 4
covered_count: 0
