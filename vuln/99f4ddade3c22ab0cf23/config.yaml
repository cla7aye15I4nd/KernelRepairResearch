id: 99f4ddade3c22ab0cf23
bug_link: https://syzkaller.appspot.com/bug?extid=99f4ddade3c22ab0cf23
title: 'KCSAN: data-race in __rcu_read_unlock / sync_rcu_exp_select_cpus'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 3717e1e9f25ec7059e421ab6fc602cab7063c11c
fix_commit: c51f83c315c392d9776c33eb16a2fe1349d65c7f
datetime: '2020-01-24T10:27:33-08:00'
fix_commit_message: 'rcu: Use READ_ONCE() for ->expmask in rcu_read_unlock_special()


  The rcu_node structure''s ->expmask field is updated only when holding the

  ->lock, but is also accessed locklessly.  This means that all ->expmask

  updates must use WRITE_ONCE() and all reads carried out without holding

  ->lock must use READ_ONCE().  This commit therefore changes the lockless

  ->expmask read in rcu_read_unlock_special() to use READ_ONCE().


  Reported-by: syzbot+99f4ddade3c22ab0cf23@syzkaller.appspotmail.com

  Signed-off-by: Paul E. McKenney <paulmck@kernel.org>

  Acked-by: Marco Elver <elver@google.com>

  '
submodule:
- kernel/rcu
hunk_count: 1
covered_count: 1
