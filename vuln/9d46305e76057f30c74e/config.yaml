id: 9d46305e76057f30c74e
bug_link: https://syzkaller.appspot.com/bug?extid=9d46305e76057f30c74e
title: 'KASAN: use-after-free Read in io_uring_setup (2)'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 01cec8c18f5ad9c27eee9f21439072832181039e
fix_commit: d1719f70d0a5b83b12786a7dbc5b9fe396469016
datetime: '2020-07-31T08:25:06-06:00'
fix_commit_message: "io_uring: don't touch 'ctx' after installing file descriptor\n\
  \nAs soon as we install the file descriptor, we have to assume that it\ncan get\
  \ arbitrarily closed. We currently account memory (and note that\nwe did) after\
  \ installing the ring fd, which means that it could be a\npotential use-after-free\
  \ condition if the fd is closed right after\nbeing installed, but before we fiddle\
  \ with the ctx.\n\nIn fact, syzbot reported this exact scenario:\n\nBUG: KASAN:\
  \ use-after-free in io_account_mem fs/io_uring.c:7397 [inline]\nBUG: KASAN: use-after-free\
  \ in io_uring_create fs/io_uring.c:8369 [inline]\nBUG: KASAN: use-after-free in\
  \ io_uring_setup+0x2797/0x2910 fs/io_uring.c:8400\nRead of size 1 at addr ffff888087a41044\
  \ by task syz-executor.5/18145\n\nCPU: 0 PID: 18145 Comm: syz-executor.5 Not tainted\
  \ 5.8.0-rc7-next-20200729-syzkaller #0\nHardware name: Google Google Compute Engine/Google\
  \ Compute Engine, BIOS Google 01/01/2011\nCall Trace:\n __dump_stack lib/dump_stack.c:77\
  \ [inline]\n dump_stack+0x18f/0x20d lib/dump_stack.c:118\n print_address_description.constprop.0.cold+0xae/0x497\
  \ mm/kasan/report.c:383\n __kasan_report mm/kasan/report.c:513 [inline]\n kasan_report.cold+0x1f/0x37\
  \ mm/kasan/report.c:530\n io_account_mem fs/io_uring.c:7397 [inline]\n io_uring_create\
  \ fs/io_uring.c:8369 [inline]\n io_uring_setup+0x2797/0x2910 fs/io_uring.c:8400\n\
  \ do_syscall_64+0x2d/0x70 arch/x86/entry/common.c:46\n entry_SYSCALL_64_after_hwframe+0x44/0xa9\n\
  RIP: 0033:0x45c429\nCode: 8d b6 fb ff c3 66 2e 0f 1f 84 00 00 00 00 00 66 90 48\
  \ 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d\
  \ 01 f0 ff ff 0f 83 5b b6 fb ff c3 66 2e 0f 1f 84 00 00 00 00\nRSP: 002b:00007f8f121d0c78\
  \ EFLAGS: 00000246 ORIG_RAX: 00000000000001a9\nRAX: ffffffffffffffda RBX: 0000000000008540\
  \ RCX: 000000000045c429\nRDX: 0000000000000000 RSI: 0000000020000040 RDI: 0000000000000196\n\
  RBP: 000000000078bf38 R08: 0000000000000000 R09: 0000000000000000\nR10: 0000000000000000\
  \ R11: 0000000000000246 R12: 000000000078bf0c\nR13: 00007fff86698cff R14: 00007f8f121d19c0\
  \ R15: 000000000078bf0c\n\nMove the accounting of the ring used locked memory before\
  \ we get and\ninstall the ring file descriptor.\n\nCc: stable@vger.kernel.org\n\
  Reported-by: syzbot+9d46305e76057f30c74e@syzkaller.appspotmail.com\nFixes: 309758254ea6\
  \ (\"io_uring: report pinned memory usage\")\nReviewed-by: Stefano Garzarella <sgarzare@redhat.com>\n\
  Signed-off-by: Jens Axboe <axboe@kernel.dk>\n"
submodule:
- fs
hunk_count: 2
covered_count: 2
