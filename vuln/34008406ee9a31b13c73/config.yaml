id: 34008406ee9a31b13c73
bug_link: https://syzkaller.appspot.com/bug?extid=34008406ee9a31b13c73
title: general protection fault in ir_raw_event_store_with_filter
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: c52643b241525c0f4bf8902eeaba0d74bc5af278
fix_commit: f656cfbc7a293a039d6a0c7100e1c846845148c1
datetime: '2025-02-13T12:12:30+01:00'
fix_commit_message: 'media: streamzap: fix race between device disconnection and urb
  callback


  Syzkaller has reported a general protection fault at function

  ir_raw_event_store_with_filter(). This crash is caused by a NULL pointer

  dereference of dev->raw pointer, even though it is checked for NULL in

  the same function, which means there is a race condition. It occurs due

  to the incorrect order of actions in the streamzap_disconnect() function:

  rc_unregister_device() is called before usb_kill_urb(). The dev->raw

  pointer is freed and set to NULL in rc_unregister_device(), and only

  after that usb_kill_urb() waits for in-progress requests to finish.


  If rc_unregister_device() is called while streamzap_callback() handler is

  not finished, this can lead to accessing freed resources. Thus

  rc_unregister_device() should be called after usb_kill_urb().


  Found by Linux Verification Center (linuxtesting.org) with Syzkaller.


  Fixes: 8e9e60640067 ("V4L/DVB: staging/lirc: port lirc_streamzap to ir-core")

  Cc: stable@vger.kernel.org

  Reported-by: syzbot+34008406ee9a31b13c73@syzkaller.appspotmail.com

  Closes: https://syzkaller.appspot.com/bug?extid=34008406ee9a31b13c73

  Signed-off-by: Murad Masimov <m.masimov@mt-integration.ru>

  Signed-off-by: Sean Young <sean@mess.org>

  Signed-off-by: Hans Verkuil <hverkuil@xs4all.nl>

  '
submodule:
- drivers/media/rc
hunk_count: 1
covered_count: 0
