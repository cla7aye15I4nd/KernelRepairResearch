id: 2f20b523930c32c160cc
bug_link: https://syzkaller.appspot.com/bug?extid=2f20b523930c32c160cc
title: inconsistent lock state in p9_req_put
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: ef575281b21e9a34dfae544a187c6aac2ae424a9
fix_commit: 296ab4a813841ba1d5f40b03190fd1bd8f25aab0
datetime: '2022-10-07T21:22:48+09:00'
fix_commit_message: 'net/9p: use a dedicated spinlock for trans_fd


  Shamelessly copying the explanation from Tetsuo Handa''s suggested

  patch[1] (slightly reworded):

  syzbot is reporting inconsistent lock state in p9_req_put()[2],

  for p9_tag_remove() from p9_req_put() from IRQ context is using

  spin_lock_irqsave() on "struct p9_client"->lock but trans_fd

  (not from IRQ context) is using spin_lock().


  Since the locks actually protect different things in client.c and in

  trans_fd.c, just replace trans_fd.c''s lock by a new one specific to the

  transport (client.c''s protect the idr for fid/tag allocations,

  while trans_fd.c''s protects its own req list and request status field

  that acts as the transport''s state machine)


  Link: https://lore.kernel.org/r/20220904112928.1308799-1-asmadeus@codewreck.org

  Link: https://lkml.kernel.org/r/2470e028-9b05-2013-7198-1fdad071d999@I-love.SAKURA.ne.jp
  [1]

  Link: https://syzkaller.appspot.com/bug?extid=2f20b523930c32c160cc [2]

  Reported-by: syzbot <syzbot+2f20b523930c32c160cc@syzkaller.appspotmail.com>

  Reported-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>

  Reviewed-by: Christian Schoenebeck <linux_oss@crudebyte.com>

  Signed-off-by: Dominique Martinet <asmadeus@codewreck.org>

  '
submodule:
- net/9p
hunk_count: 13
covered_count: 5
