id: b0efb8e572d01bce1ae0
bug_link: https://syzkaller.appspot.com/bug?extid=b0efb8e572d01bce1ae0
title: general protection fault in cgroup_fd_array_put_ptr
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 7891a87efc7116590eaba57acc3c422487802c6f
fix_commit: bbeb6e4323dad9b5e0ee9f60c223dd532e2403b1
datetime: '2018-01-10T14:46:39-08:00'
fix_commit_message: 'bpf, array: fix overflow in max_entries and undefined behavior
  in index_mask


  syzkaller tried to alloc a map with 0xfffffffd entries out of a userns,

  and thus unprivileged. With the recently added logic in b2157399cc98

  ("bpf: prevent out-of-bounds speculation") we round this up to the next

  power of two value for max_entries for unprivileged such that we can

  apply proper masking into potentially zeroed out map slots.


  However, this will generate an index_mask of 0xffffffff, and therefore

  a + 1 will let this overflow into new max_entries of 0. This will pass

  allocation, etc, and later on map access we still enforce on the original

  attr->max_entries value which was 0xfffffffd, therefore triggering GPF

  all over the place. Thus bail out on overflow in such case.


  Moreover, on 32 bit archs roundup_pow_of_two() can also not be used,

  since fls_long(max_entries - 1) can result in 32 and 1UL << 32 in 32 bit

  space is undefined. Therefore, do this by hand in a 64 bit variable.


  This fixes all the issues triggered by syzkaller''s reproducers.


  Fixes: b2157399cc98 ("bpf: prevent out-of-bounds speculation")

  Reported-by: syzbot+b0efb8e572d01bce1ae0@syzkaller.appspotmail.com

  Reported-by: syzbot+6c15e9744f75f2364773@syzkaller.appspotmail.com

  Reported-by: syzbot+d2f5524fb46fd3b312ee@syzkaller.appspotmail.com

  Reported-by: syzbot+61d23c95395cc90dbc2b@syzkaller.appspotmail.com

  Reported-by: syzbot+0d363c942452cca68c01@syzkaller.appspotmail.com

  Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>

  Signed-off-by: Alexei Starovoitov <ast@kernel.org>

  '
submodule:
- kernel/bpf
hunk_count: 2
covered_count: 2
