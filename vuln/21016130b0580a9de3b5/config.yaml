id: 21016130b0580a9de3b5
bug_link: https://syzkaller.appspot.com/bug?extid=21016130b0580a9de3b5
title: WARNING in apparmor_secid_to_secctx
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 57361846b52bc686112da6ca5368d11210796804
fix_commit: edf4e7b7b9104b58fddfcd073bd7dcc1585d5326
datetime: '2018-09-03T11:15:29-07:00'
fix_commit_message: "apparmor: fix bad debug check in apparmor_secid_to_secctx()\n\
  \napparmor_secid_to_secctx() has a bad debug statement tripping on a\ncondition\
  \ handle by the code.  When kconfig SECURITY_APPARMOR_DEBUG is\nenabled the debug\
  \ WARN_ON will trip when **secdata is NULL resulting\nin the following trace.\n\n\
  ------------[ cut here ]------------\nAppArmor WARN apparmor_secid_to_secctx: ((!secdata)):\n\
  WARNING: CPU: 0 PID: 14826 at security/apparmor/secid.c:82 apparmor_secid_to_secctx+0x2b5/0x2f0\
  \ security/apparmor/secid.c:82\nKernel panic - not syncing: panic_on_warn set ...\n\
  \nCPU: 0 PID: 14826 Comm: syz-executor1 Not tainted 4.19.0-rc1+ #193\nHardware name:\
  \ Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011\nCall\
  \ Trace:\n __dump_stack lib/dump_stack.c:77 [inline]\n dump_stack+0x1c9/0x2b4 lib/dump_stack.c:113\n\
  \ panic+0x238/0x4e7 kernel/panic.c:184\n __warn.cold.8+0x163/0x1ba kernel/panic.c:536\n\
  \ report_bug+0x252/0x2d0 lib/bug.c:186\n fixup_bug arch/x86/kernel/traps.c:178 [inline]\n\
  \ do_error_trap+0x1fc/0x4d0 arch/x86/kernel/traps.c:296\n do_invalid_op+0x1b/0x20\
  \ arch/x86/kernel/traps.c:316\n invalid_op+0x14/0x20 arch/x86/entry/entry_64.S:993\n\
  RIP: 0010:apparmor_secid_to_secctx+0x2b5/0x2f0 security/apparmor/secid.c:82\nCode:\
  \ c7 c7 40 66 58 87 e8 6a 6d 0f fe 0f 0b e9 6c fe ff ff e8 3e aa 44 fe 48 c7 c6\
  \ 80 67 58 87 48 c7 c7 a0 65 58 87 e8 4b 6d 0f fe <0f> 0b e9 3f fe ff ff 48 89 df\
  \ e8 fc a7 83 fe e9 ed fe ff ff bb f4\nRSP: 0018:ffff8801ba1bed10 EFLAGS: 00010286\n\
  RAX: 0000000000000000 RBX: ffff8801ba1beed0 RCX: ffffc9000227e000\nRDX: 0000000000018482\
  \ RSI: ffffffff8163ac01 RDI: 0000000000000001\nRBP: ffff8801ba1bed30 R08: ffff8801b80ec080\
  \ R09: ffffed003b603eca\nR10: ffffed003b603eca R11: ffff8801db01f657 R12: 0000000000000001\n\
  R13: 0000000000000000 R14: 0000000000000000 R15: ffff8801ba1beed0\n security_secid_to_secctx+0x63/0xc0\
  \ security/security.c:1314\n ctnetlink_secctx_size net/netfilter/nf_conntrack_netlink.c:621\
  \ [inline]\n ctnetlink_nlmsg_size net/netfilter/nf_conntrack_netlink.c:659 [inline]\n\
  \ ctnetlink_conntrack_event+0x303/0x1470 net/netfilter/nf_conntrack_netlink.c:706\n\
  \ nf_conntrack_eventmask_report+0x55f/0x930 net/netfilter/nf_conntrack_ecache.c:151\n\
  \ nf_conntrack_event_report include/net/netfilter/nf_conntrack_ecache.h:112 [inline]\n\
  \ nf_ct_delete+0x33c/0x5d0 net/netfilter/nf_conntrack_core.c:601\n nf_ct_iterate_cleanup+0x48c/0x5e0\
  \ net/netfilter/nf_conntrack_core.c:1892\n nf_ct_iterate_cleanup_net+0x23c/0x2d0\
  \ net/netfilter/nf_conntrack_core.c:1974\n ctnetlink_flush_conntrack net/netfilter/nf_conntrack_netlink.c:1226\
  \ [inline]\n ctnetlink_del_conntrack+0x66c/0x850 net/netfilter/nf_conntrack_netlink.c:1258\n\
  \ nfnetlink_rcv_msg+0xd88/0x1070 net/netfilter/nfnetlink.c:228\n netlink_rcv_skb+0x172/0x440\
  \ net/netlink/af_netlink.c:2454\n nfnetlink_rcv+0x1c0/0x4d0 net/netfilter/nfnetlink.c:560\n\
  \ netlink_unicast_kernel net/netlink/af_netlink.c:1317 [inline]\n netlink_unicast+0x5a0/0x760\
  \ net/netlink/af_netlink.c:1343\n netlink_sendmsg+0xa18/0xfc0 net/netlink/af_netlink.c:1908\n\
  \ sock_sendmsg_nosec net/socket.c:621 [inline]\n sock_sendmsg+0xd5/0x120 net/socket.c:631\n\
  \ ___sys_sendmsg+0x7fd/0x930 net/socket.c:2114\n __sys_sendmsg+0x11d/0x290 net/socket.c:2152\n\
  \ __do_sys_sendmsg net/socket.c:2161 [inline]\n __se_sys_sendmsg net/socket.c:2159\
  \ [inline]\n __x64_sys_sendmsg+0x78/0xb0 net/socket.c:2159\n do_syscall_64+0x1b9/0x820\
  \ arch/x86/entry/common.c:290\n entry_SYSCALL_64_after_hwframe+0x49/0xbe\nRIP: 0033:0x457089\n\
  Code: fd b4 fb ff c3 66 2e 0f 1f 84 00 00 00 00 00 66 90 48 89 f8 48 89 f7 48 89\
  \ d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 0f 83 cb\
  \ b4 fb ff c3 66 2e 0f 1f 84 00 00 00 00\nRSP: 002b:00007f7bc6e03c78 EFLAGS: 00000246\
  \ ORIG_RAX: 000000000000002e\nRAX: ffffffffffffffda RBX: 00007f7bc6e046d4 RCX: 0000000000457089\n\
  RDX: 0000000000000000 RSI: 0000000020d65000 RDI: 0000000000000003\nRBP: 00000000009300a0\
  \ R08: 0000000000000000 R09: 0000000000000000\nR10: 0000000000000000 R11: 0000000000000246\
  \ R12: 00000000ffffffff\nR13: 00000000004d4588 R14: 00000000004c8d5c R15: 0000000000000000\n\
  Dumping ftrace buffer:\n   (ftrace buffer empty)\nKernel Offset: disabled\nRebooting\
  \ in 86400 seconds..\n\nCC: <stable@vger.kernel.org> #4.18\nFixes: c092921219d2\
  \ (\"apparmor: add support for mapping secids and using secctxes\")\nReported-by:\
  \ syzbot+21016130b0580a9de3b5@syzkaller.appspotmail.com\nSigned-off-by: John Johansen\
  \ <john.johansen@canonical.com>\n"
submodule:
- security/apparmor
hunk_count: 1
covered_count: 1
