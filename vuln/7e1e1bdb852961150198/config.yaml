id: 7e1e1bdb852961150198
bug_link: https://syzkaller.appspot.com/bug?extid=7e1e1bdb852961150198
title: WARNING in cleanup_net (2)
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 7573099e10ca69c3be33995c1fcd0d241226816d
fix_commit: 9744d2bf19762703704ecba885b7ac282c02eacf
datetime: '2023-04-12T10:37:00+01:00'
fix_commit_message: "smc: Fix use-after-free in tcp_write_timer_handler().\n\nWith\
  \ Eric's ref tracker, syzbot finally found a repro for\nuse-after-free in tcp_write_timer_handler()\
  \ by kernel TCP\nsockets. [0]\n\nIf SMC creates a kernel socket in __smc_create(),\
  \ the kernel\nsocket is supposed to be freed in smc_clcsock_release() by\ncalling\
  \ sock_release() when we close() the parent SMC socket.\n\nHowever, at the end of\
  \ smc_clcsock_release(), the kernel\nsocket's sk_state might not be TCP_CLOSE. \
  \ This means that\nwe have not called inet_csk_destroy_sock() in __tcp_close()\n\
  and have not stopped the TCP timers.\n\nThe kernel socket's TCP timers can be fired\
  \ later, so we\nneed to hold a refcnt for net as we do for MPTCP subflows\nin mptcp_subflow_create_socket().\n\
  \n[0]:\nleaked reference.\n sk_alloc (./include/net/net_namespace.h:335 net/core/sock.c:2108)\n\
  \ inet_create (net/ipv4/af_inet.c:319 net/ipv4/af_inet.c:244)\n __sock_create (net/socket.c:1546)\n\
  \ smc_create (net/smc/af_smc.c:3269 net/smc/af_smc.c:3284)\n __sock_create (net/socket.c:1546)\n\
  \ __sys_socket (net/socket.c:1634 net/socket.c:1618 net/socket.c:1661)\n __x64_sys_socket\
  \ (net/socket.c:1672)\n do_syscall_64 (arch/x86/entry/common.c:50 arch/x86/entry/common.c:80)\n\
  \ entry_SYSCALL_64_after_hwframe (arch/x86/entry/entry_64.S:120)\n==================================================================\n\
  BUG: KASAN: slab-use-after-free in tcp_write_timer_handler (net/ipv4/tcp_timer.c:378\
  \ net/ipv4/tcp_timer.c:624 net/ipv4/tcp_timer.c:594)\nRead of size 1 at addr ffff888052b65e0d\
  \ by task syzrepro/18091\n\nCPU: 0 PID: 18091 Comm: syzrepro Tainted: G        W\
  \          6.3.0-rc4-01174-gb5d54eb5899a #7\nHardware name: QEMU Standard PC (i440FX\
  \ + PIIX, 1996), BIOS 1.16.0-1.amzn2022.0.1 04/01/2014\nCall Trace:\n <IRQ>\n dump_stack_lvl\
  \ (lib/dump_stack.c:107)\n print_report (mm/kasan/report.c:320 mm/kasan/report.c:430)\n\
  \ kasan_report (mm/kasan/report.c:538)\n tcp_write_timer_handler (net/ipv4/tcp_timer.c:378\
  \ net/ipv4/tcp_timer.c:624 net/ipv4/tcp_timer.c:594)\n tcp_write_timer (./include/linux/spinlock.h:390\
  \ net/ipv4/tcp_timer.c:643)\n call_timer_fn (./arch/x86/include/asm/jump_label.h:27\
  \ ./include/linux/jump_label.h:207 ./include/trace/events/timer.h:127 kernel/time/timer.c:1701)\n\
  \ __run_timers.part.0 (kernel/time/timer.c:1752 kernel/time/timer.c:2022)\n run_timer_softirq\
  \ (kernel/time/timer.c:2037)\n __do_softirq (./arch/x86/include/asm/jump_label.h:27\
  \ ./include/linux/jump_label.h:207 ./include/trace/events/irq.h:142 kernel/softirq.c:572)\n\
  \ __irq_exit_rcu (kernel/softirq.c:445 kernel/softirq.c:650)\n irq_exit_rcu (kernel/softirq.c:664)\n\
  \ sysvec_apic_timer_interrupt (arch/x86/kernel/apic/apic.c:1107 (discriminator 14))\n\
  \ </IRQ>\n\nFixes: ac7138746e14 (\"smc: establish new socket family\")\nReported-by:\
  \ syzbot+7e1e1bdb852961150198@syzkaller.appspotmail.com\nLink: https://lore.kernel.org/netdev/000000000000a3f51805f8bcc43a@google.com/\n\
  Signed-off-by: Kuniyuki Iwashima <kuniyu@amazon.com>\nReviewed-by: Tony Lu <tonylu@linux.alibaba.com>\n\
  Signed-off-by: David S. Miller <davem@davemloft.net>\n"
submodule:
- net/smc
hunk_count: 1
covered_count: 0
