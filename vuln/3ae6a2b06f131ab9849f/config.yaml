id: 3ae6a2b06f131ab9849f
bug_link: https://syzkaller.appspot.com/bug?extid=3ae6a2b06f131ab9849f
title: 'KASAN: slab-out-of-bounds Write in usb_hcd_poll_rh_status (2)'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: fa0ef93868a6062babe1144df2807a8b1d4924d2
fix_commit: 1d7d4c07932e04355d6e6528d44a2f2c9e354346
datetime: '2022-01-03T14:38:34+01:00'
fix_commit_message: 'USB: Fix "slab-out-of-bounds Write" bug in usb_hcd_poll_rh_status


  When the USB core code for getting root-hub status reports was

  originally written, it was assumed that the hub driver would be its

  only caller.  But this isn''t true now; user programs can use usbfs to

  communicate with root hubs and get status reports.  When they do this,

  they may use a transfer_buffer that is smaller than the data returned

  by the HCD, which will lead to a buffer overflow error when

  usb_hcd_poll_rh_status() tries to store the status data.  This was

  discovered by syzbot:


  BUG: KASAN: slab-out-of-bounds in memcpy include/linux/fortify-string.h:225 [inline]

  BUG: KASAN: slab-out-of-bounds in usb_hcd_poll_rh_status+0x5f4/0x780 drivers/usb/core/hcd.c:776

  Write of size 2 at addr ffff88801da403c0 by task syz-executor133/4062


  This patch fixes the bug by reducing the amount of status data if it

  won''t fit in the transfer_buffer.  If some data gets discarded then

  the URB''s completion status is set to -EOVERFLOW rather than 0, to let

  the user know what happened.


  Reported-and-tested-by: syzbot+3ae6a2b06f131ab9849f@syzkaller.appspotmail.com

  Signed-off-by: Alan Stern <stern@rowland.harvard.edu>

  Cc: <stable@vger.kernel.org>

  Link: https://lore.kernel.org/r/Yc+3UIQJ2STbxNua@rowland.harvard.edu

  Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

  '
submodule:
- drivers/usb/core
hunk_count: 2
covered_count: 2
