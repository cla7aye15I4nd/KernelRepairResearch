id: 7fbbfa368521945f0e3d
bug_link: https://syzkaller.appspot.com/bug?extid=7fbbfa368521945f0e3d
title: 'KASAN: use-after-free Read in oom_kill_process'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: b13bc35193d9e7a8c050a24928ca5c9e7c9a009b
fix_commit: cefc7ef3c87d02fc9307835868ff721ea12cc597
datetime: '2019-02-01T15:46:23-08:00'
fix_commit_message: 'mm, oom: fix use-after-free in oom_kill_process


  Syzbot instance running on upstream kernel found a use-after-free bug in

  oom_kill_process.  On further inspection it seems like the process

  selected to be oom-killed has exited even before reaching

  read_lock(&tasklist_lock) in oom_kill_process().  More specifically the

  tsk->usage is 1 which is due to get_task_struct() in oom_evaluate_task()

  and the put_task_struct within for_each_thread() frees the tsk and

  for_each_thread() tries to access the tsk.  The easiest fix is to do

  get/put across the for_each_thread() on the selected task.


  Now the next question is should we continue with the oom-kill as the

  previously selected task has exited? However before adding more

  complexity and heuristics, let''s answer why we even look at the children

  of oom-kill selected task? The select_bad_process() has already selected

  the worst process in the system/memcg.  Due to race, the selected

  process might not be the worst at the kill time but does that matter?

  The userspace can use the oom_score_adj interface to prefer children to

  be killed before the parent.  I looked at the history but it seems like

  this is there before git history.


  Link: http://lkml.kernel.org/r/20190121215850.221745-1-shakeelb@google.com

  Reported-by: syzbot+7fbbfa368521945f0e3d@syzkaller.appspotmail.com

  Fixes: 6b0c81b3be11 ("mm, oom: reduce dependency on tasklist_lock")

  Signed-off-by: Shakeel Butt <shakeelb@google.com>

  Reviewed-by: Roman Gushchin <guro@fb.com>

  Acked-by: Michal Hocko <mhocko@suse.com>

  Cc: David Rientjes <rientjes@google.com>

  Cc: Johannes Weiner <hannes@cmpxchg.org>

  Cc: Tetsuo Handa <penguin-kernel@i-love.sakura.ne.jp>

  Cc: <stable@vger.kernel.org>

  Signed-off-by: Andrew Morton <akpm@linux-foundation.org>

  Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

  '
submodule:
- mm
hunk_count: 2
covered_count: 2
