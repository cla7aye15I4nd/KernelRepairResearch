id: 62d8b26793e8a2bd0516
bug_link: https://syzkaller.appspot.com/bug?extid=62d8b26793e8a2bd0516
title: 'KASAN: slab-use-after-free Read in bpf_trace_run4'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: e9c856cabefb71d47b2eeb197f72c9c88e9b45b0
fix_commit: 1a80dbcb2dbaf6e4c216e62e30fa7d3daa8001ce
datetime: '2024-03-28T18:47:45-07:00'
fix_commit_message: 'bpf: support deferring bpf_link dealloc to after RCU grace period


  BPF link for some program types is passed as a "context" which can be

  used by those BPF programs to look up additional information. E.g., for

  multi-kprobes and multi-uprobes, link is used to fetch BPF cookie values.


  Because of this runtime dependency, when bpf_link refcnt drops to zero

  there could still be active BPF programs running accessing link data.


  This patch adds generic support to defer bpf_link dealloc callback to

  after RCU GP, if requested. This is done by exposing two different

  deallocation callbacks, one synchronous and one deferred. If deferred

  one is provided, bpf_link_free() will schedule dealloc_deferred()

  callback to happen after RCU GP.


  BPF is using two flavors of RCU: "classic" non-sleepable one and RCU

  tasks trace one. The latter is used when sleepable BPF programs are

  used. bpf_link_free() accommodates that by checking underlying BPF

  program''s sleepable flag, and goes either through normal RCU GP only for

  non-sleepable, or through RCU tasks trace GP *and* then normal RCU GP

  (taking into account rcu_trace_implies_rcu_gp() optimization), if BPF

  program is sleepable.


  We use this for multi-kprobe and multi-uprobe links, which dereference

  link during program run. We also preventively switch raw_tp link to use

  deferred dealloc callback, as upcoming changes in bpf-next tree expose

  raw_tp link data (specifically, cookie value) to BPF program at runtime

  as well.


  Fixes: 0dcac2725406 ("bpf: Add multi kprobe link")

  Fixes: 89ae89f53d20 ("bpf: Add multi uprobe link")

  Reported-by: syzbot+981935d9485a560bfbcb@syzkaller.appspotmail.com

  Reported-by: syzbot+2cb5a6c573e98db598cc@syzkaller.appspotmail.com

  Reported-by: syzbot+62d8b26793e8a2bd0516@syzkaller.appspotmail.com

  Signed-off-by: Andrii Nakryiko <andrii@kernel.org>

  Acked-by: Jiri Olsa <jolsa@kernel.org>

  Link: https://lore.kernel.org/r/20240328052426.3042617-2-andrii@kernel.org

  Signed-off-by: Alexei Starovoitov <ast@kernel.org>

  '
submodule:
- include/linux
- kernel/bpf
- kernel/trace
hunk_count: 5
covered_count: 1
