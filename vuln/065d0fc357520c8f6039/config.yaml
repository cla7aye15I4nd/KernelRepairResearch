id: 065d0fc357520c8f6039
bug_link: https://syzkaller.appspot.com/bug?extid=065d0fc357520c8f6039
title: 'KASAN: use-after-free Read in l2tp_session_create'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 83c1f36f9880814b24cdf6c2f91f66f61db65326
fix_commit: 6b9f34239b00e6956a267abed2bc559ede556ad6
datetime: '2018-04-11T17:41:27-04:00'
fix_commit_message: 'l2tp: fix races in tunnel creation


  l2tp_tunnel_create() inserts the new tunnel into the namespace''s tunnel

  list and sets the socket''s ->sk_user_data field, before returning it to

  the caller. Therefore, there are two ways the tunnel can be accessed

  and freed, before the caller even had the opportunity to take a

  reference. In practice, syzbot could crash the module by closing the

  socket right after a new tunnel was returned to pppol2tp_create().


  This patch moves tunnel registration out of l2tp_tunnel_create(), so

  that the caller can safely hold a reference before publishing the

  tunnel. This second step is done with the new l2tp_tunnel_register()

  function, which is now responsible for associating the tunnel to its

  socket and for inserting it into the namespace''s list.


  While moving the code to l2tp_tunnel_register(), a few modifications

  have been done. First, the socket validation tests are done in a helper

  function, for clarity. Also, modifying the socket is now done after

  having inserted the tunnel to the namespace''s tunnels list. This will

  allow insertion to fail, without having to revert theses modifications

  in the error path (a followup patch will check for duplicate tunnels

  before insertion). Either the socket is a kernel socket which we

  control, or it is a user-space socket for which we have a reference on

  the file descriptor. In any case, the socket isn''t going to be closed

  from under us.


  Reported-by: syzbot+fbeeb5c3b538e8545644@syzkaller.appspotmail.com

  Fixes: fd558d186df2 ("l2tp: Split pppol2tp patch into separate l2tp and ppp parts")

  Signed-off-by: Guillaume Nault <g.nault@alphalink.fr>

  Signed-off-by: David S. Miller <davem@davemloft.net>

  '
submodule:
- net/l2tp
hunk_count: 5
covered_count: 3
