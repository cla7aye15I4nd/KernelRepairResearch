id: b6a62d5cb9fe05a0e3a3
bug_link: https://syzkaller.appspot.com/bug?extid=b6a62d5cb9fe05a0e3a3
title: WARNING in batadv_v_ogm_free
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: fa40d9734a57bcbfa79a280189799f76c88f7bb0
fix_commit: 6f68cd634856f8ca93bafd623ba5357e0f648c68
datetime: '2021-10-26T14:47:12+01:00'
fix_commit_message: 'net: batman-adv: fix error handling


  Syzbot reported ODEBUG warning in batadv_nc_mesh_free(). The problem was

  in wrong error handling in batadv_mesh_init().


  Before this patch batadv_mesh_init() was calling batadv_mesh_free() in case

  of any batadv_*_init() calls failure. This approach may work well, when

  there is some kind of indicator, which can tell which parts of batadv are

  initialized; but there isn''t any.


  All written above lead to cleaning up uninitialized fields. Even if we hide

  ODEBUG warning by initializing bat_priv->nc.work, syzbot was able to hit

  GPF in batadv_nc_purge_paths(), because hash pointer in still NULL. [1]


  To fix these bugs we can unwind batadv_*_init() calls one by one.

  It is good approach for 2 reasons: 1) It fixes bugs on error handling

  path 2) It improves the performance, since we won''t call unneeded

  batadv_*_free() functions.


  So, this patch makes all batadv_*_init() clean up all allocated memory

  before returning with an error to no call correspoing batadv_*_free()

  and open-codes batadv_mesh_free() with proper order to avoid touching

  uninitialized fields.


  Link: https://lore.kernel.org/netdev/000000000000c87fbd05cef6bcb0@google.com/ [1]

  Reported-and-tested-by: syzbot+28b0702ada0bf7381f58@syzkaller.appspotmail.com

  Fixes: c6c8fea29769 ("net: Add batman-adv meshing protocol")

  Signed-off-by: Pavel Skripkin <paskripkin@gmail.com>

  Acked-by: Sven Eckelmann <sven@narfation.org>

  Signed-off-by: David S. Miller <davem@davemloft.net>

  '
submodule:
- net/batman-adv
hunk_count: 5
covered_count: 2
