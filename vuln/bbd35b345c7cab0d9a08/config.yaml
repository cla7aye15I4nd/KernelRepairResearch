id: bbd35b345c7cab0d9a08
bug_link: https://syzkaller.appspot.com/bug?extid=bbd35b345c7cab0d9a08
title: possible deadlock in release_sock
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: d71ebe8114b4bf622804b810f5e274069060a174
fix_commit: b9fb10d131b8c84af9bb14e2078d5c63600c7dea
datetime: '2023-01-18T14:44:54+00:00'
fix_commit_message: "l2tp: prevent lockdep issue in l2tp_tunnel_register()\n\nlockdep\
  \ complains with the following lock/unlock sequence:\n\n     lock_sock(sk);\n  \
  \   write_lock_bh(&sk->sk_callback_lock);\n[1]  release_sock(sk);\n[2]  write_unlock_bh(&sk->sk_callback_lock);\n\
  \nWe need to swap [1] and [2] to fix this issue.\n\nFixes: 0b2c59720e65 (\"l2tp:\
  \ close all race conditions in l2tp_tunnel_register()\")\nReported-by: syzbot+bbd35b345c7cab0d9a08@syzkaller.appspotmail.com\n\
  Signed-off-by: Eric Dumazet <edumazet@google.com>\nLink: https://lore.kernel.org/netdev/20230114030137.672706-1-xiyou.wangcong@gmail.com/T/#m1164ff20628671b0f326a24cb106ab3239c70ce3\n\
  Cc: Cong Wang <cong.wang@bytedance.com>\nCc: Guillaume Nault <gnault@redhat.com>\n\
  Reviewed-by: Guillaume Nault <gnault@redhat.com>\nSigned-off-by: David S. Miller\
  \ <davem@davemloft.net>\n"
submodule:
- net/l2tp
hunk_count: 2
covered_count: 2
