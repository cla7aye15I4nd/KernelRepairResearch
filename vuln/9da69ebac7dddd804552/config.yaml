id: 9da69ebac7dddd804552
bug_link: https://syzkaller.appspot.com/bug?extid=9da69ebac7dddd804552
title: 'KASAN: slab-out-of-bounds Read in __dev_queue_xmit'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 18b0affaf40cf5f320258d28f7069dfff76da184
fix_commit: 7c68d1a6b4db9012790af7ac0f0fdc0d2083422a
datetime: '2018-01-22T16:00:05-05:00'
fix_commit_message: 'net: qdisc_pkt_len_init() should be more robust


  Without proper validation of DODGY packets, we might very well

  feed qdisc_pkt_len_init() with invalid GSO packets.


  tcp_hdrlen() might access out-of-bound data, so let''s use

  skb_header_pointer() and proper checks.


  Whole story is described in commit d0c081b49137 ("flow_dissector:

  properly cap thoff field")


  We have the goal of validating DODGY packets earlier in the stack,

  so we might very well revert this fix in the future.


  Signed-off-by: Eric Dumazet <edumazet@google.com>

  Cc: Willem de Bruijn <willemb@google.com>

  Cc: Jason Wang <jasowang@redhat.com>

  Reported-by: syzbot+9da69ebac7dddd804552@syzkaller.appspotmail.com

  Acked-by: Jason Wang <jasowang@redhat.com>

  Signed-off-by: David S. Miller <davem@davemloft.net>

  '
submodule:
- net/core
hunk_count: 1
covered_count: 1
