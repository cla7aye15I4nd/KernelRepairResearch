id: 59af7bf76d795311da8c
bug_link: https://syzkaller.appspot.com/bug?extid=59af7bf76d795311da8c
title: 'KASAN: slab-out-of-bounds Write in copy_verifier_state'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: f90dd663c492124b53bb28db6ff85b50c80ccc32
fix_commit: 45435d8da71f9f3e6860e6e6ea9667b6ec17ec64
datetime: '2022-12-28T14:54:53-08:00'
fix_commit_message: 'bpf: Always use maximal size for copy_array()


  Instead of counting on prior allocations to have sized allocations to

  the next kmalloc bucket size, always perform a krealloc that is at least

  ksize(dst) in size (which is a no-op), so the size can be correctly

  tracked by all the various allocation size trackers (KASAN,

  __alloc_size, etc).


  Reported-by: Hyunwoo Kim <v4bel@theori.io>

  Link: https://lore.kernel.org/bpf/20221223094551.GA1439509@ubuntu

  Fixes: ceb35b666d42 ("bpf/verifier: Use kmalloc_size_roundup() to match ksize()
  usage")

  Cc: Alexei Starovoitov <ast@kernel.org>

  Cc: Daniel Borkmann <daniel@iogearbox.net>

  Cc: John Fastabend <john.fastabend@gmail.com>

  Cc: Andrii Nakryiko <andrii@kernel.org>

  Cc: Martin KaFai Lau <martin.lau@linux.dev>

  Cc: Song Liu <song@kernel.org>

  Cc: Yonghong Song <yhs@fb.com>

  Cc: KP Singh <kpsingh@kernel.org>

  Cc: Stanislav Fomichev <sdf@google.com>

  Cc: Hao Luo <haoluo@google.com>

  Cc: Jiri Olsa <jolsa@kernel.org>

  Cc: bpf@vger.kernel.org

  Signed-off-by: Kees Cook <keescook@chromium.org>

  Link: https://lore.kernel.org/r/20221223182836.never.866-kees@kernel.org

  Signed-off-by: Alexei Starovoitov <ast@kernel.org>

  '
submodule:
- kernel/bpf
hunk_count: 2
covered_count: 2
