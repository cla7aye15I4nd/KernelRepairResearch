id: 72473edc9bf4eb1c6556
bug_link: https://syzkaller.appspot.com/bug?extid=72473edc9bf4eb1c6556
title: 'BUG: GPF in non-whitelisted uaccess (non-canonical address?)'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 0fd791841a6d67af1155a9c3de54dea51220721e
fix_commit: 8c01db7619f07c85c5cd81ec5eb83608b56c88f5
datetime: '2018-11-19T14:25:15+01:00'
fix_commit_message: 'HID: uhid: forbid UHID_CREATE under KERNEL_DS or elevated privileges


  When a UHID_CREATE command is written to the uhid char device, a

  copy_from_user() is done from a user pointer embedded in the command.

  When the address limit is KERNEL_DS, e.g. as is the case during

  sys_sendfile(), this can read from kernel memory.  Alternatively,

  information can be leaked from a setuid binary that is tricked to write

  to the file descriptor.  Therefore, forbid UHID_CREATE in these cases.


  No other commands in uhid_char_write() are affected by this bug and

  UHID_CREATE is marked as "obsolete", so apply the restriction to

  UHID_CREATE only rather than to uhid_char_write() entirely.


  Thanks to Dmitry Vyukov for adding uhid definitions to syzkaller and to

  Jann Horn for commit 9da3f2b740544 ("x86/fault: BUG() when uaccess

  helpers fault on kernel addresses"), allowing this bug to be found.


  Reported-by: syzbot+72473edc9bf4eb1c6556@syzkaller.appspotmail.com

  Fixes: d365c6cfd337 ("HID: uhid: add UHID_CREATE and UHID_DESTROY events")

  Cc: <stable@vger.kernel.org> # v3.6+

  Cc: Jann Horn <jannh@google.com>

  Cc: Andy Lutomirski <luto@kernel.org>

  Signed-off-by: Eric Biggers <ebiggers@google.com>

  Reviewed-by: Jann Horn <jannh@google.com>

  Signed-off-by: Jiri Kosina <jkosina@suse.cz>

  '
submodule:
- drivers/hid
hunk_count: 2
covered_count: 2
