id: 4b73ad6fc767e576e275
bug_link: https://syzkaller.appspot.com/bug?extid=4b73ad6fc767e576e275
title: memory leak in smc_create
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 1d4639567d970de087a893521f7f50a32740b595
fix_commit: 6d6dd528d5af05dc2d0c773951ed68d630a0c3f1
datetime: '2019-11-12T12:15:29-08:00'
fix_commit_message: 'net/smc: fix refcount non-blocking connect() -part 2


  If an SMC socket is immediately terminated after a non-blocking connect()

  has been called, a memory leak is possible.

  Due to the sock_hold move in

  commit 301428ea3708 ("net/smc: fix refcounting for non-blocking connect()")

  an extra sock_put() is needed in smc_connect_work(), if the internal

  TCP socket is aborted and cancels the sk_stream_wait_connect() of the

  connect worker.


  Reported-by: syzbot+4b73ad6fc767e576e275@syzkaller.appspotmail.com

  Fixes: 301428ea3708 ("net/smc: fix refcounting for non-blocking connect()")

  Signed-off-by: Ursula Braun <ubraun@linux.ibm.com>

  Signed-off-by: Karsten Graul <kgraul@linux.ibm.com>

  Signed-off-by: David S. Miller <davem@davemloft.net>

  '
submodule:
- net/smc
hunk_count: 1
covered_count: 0
