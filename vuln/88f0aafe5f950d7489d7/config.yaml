id: 88f0aafe5f950d7489d7
bug_link: https://syzkaller.appspot.com/bug?extid=88f0aafe5f950d7489d7
title: general protection fault in bpf_struct_ops_find_value
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: be4840b33eb2ea7d80830530aab5fcbeaa90e857
fix_commit: e6be8cd5d3cf54ccd0ae66027d6f4697b15f4c3e
datetime: '2024-01-25T20:49:59-08:00'
fix_commit_message: "bpf: Fix error checks against bpf_get_btf_vmlinux().\n\nIn bpf_struct_ops_map_alloc,\
  \ it needs to check for NULL in the returned\npointer of bpf_get_btf_vmlinux() when\
  \ CONFIG_DEBUG_INFO_BTF is not set.\nENOTSUPP is used to preserve the same behavior\
  \ before the\nstruct_ops kmod support.\n\nIn the function check_struct_ops_btf_id(),\
  \ instead of redoing the\nbpf_get_btf_vmlinux() that has already been done in syscall.c,\
  \ the fix\nhere is to check for prog->aux->attach_btf_id.\nBPF_PROG_TYPE_STRUCT_OPS\
  \ must require attach_btf_id and syscall.c\nguarantees a valid attach_btf as long\
  \ as attach_btf_id is set.\nWhen attach_btf_id is not set, this patch returns -ENOTSUPP\n\
  because it is what the selftest in test_libbpf_probe_prog_types()\nand libbpf_probes.c\
  \ are expecting for feature probing purpose.\n\nChanges from v1:\n\n - Remove an\
  \ unnecessary NULL check in check_struct_ops_btf_id()\n\nReported-by: syzbot+88f0aafe5f950d7489d7@syzkaller.appspotmail.com\n\
  Closes: https://lore.kernel.org/bpf/00000000000040d68a060fc8db8c@google.com/\nReported-by:\
  \ syzbot+1336f3d4b10bcda75b89@syzkaller.appspotmail.com\nCloses: https://lore.kernel.org/bpf/00000000000026353b060fc21c07@google.com/\n\
  Fixes: fcc2c1fb0651 (\"bpf: pass attached BTF to the bpf_struct_ops subsystem\"\
  )\nSigned-off-by: Kui-Feng Lee <thinker.li@gmail.com>\nLink: https://lore.kernel.org/r/20240126023113.1379504-1-thinker.li@gmail.com\n\
  Signed-off-by: Martin KaFai Lau <martin.lau@kernel.org>\n"
submodule:
- kernel/bpf
hunk_count: 2
covered_count: 1
