id: 017e491ae13c0068598a
bug_link: https://syzkaller.appspot.com/bug?extid=017e491ae13c0068598a
title: 'KASAN: null-ptr-deref Write in queue_work_on'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 58c8db929db1c1d785a6f5d8f8692e5dbcc35e84
fix_commit: 0ace17d56824165c7f4c68785d6b58971db954dd
datetime: '2020-01-22T20:32:03+01:00'
fix_commit_message: 'can, slip: Protect tty->disc_data in write_wakeup and close with
  RCU


  write_wakeup can happen in parallel with close/hangup where tty->disc_data

  is set to NULL and the netdevice is freed thus also freeing

  disc_data. write_wakeup accesses disc_data so we must prevent close from

  freeing the netdev while write_wakeup has a non-NULL view of

  tty->disc_data.


  We also need to make sure that accesses to disc_data are atomic. Which can

  all be done with RCU.


  This problem was found by Syzkaller on SLCAN, but the same issue is

  reproducible with the SLIP line discipline using an LTP test based on the

  Syzkaller reproducer.


  A fix which didn''t use RCU was posted by Hillf Danton.


  Fixes: 661f7fda21b1 ("slip: Fix deadlock in write_wakeup")

  Fixes: a8e83b17536a ("slcan: Port write_wakeup deadlock fix from slip")

  Reported-by: syzbot+017e491ae13c0068598a@syzkaller.appspotmail.com

  Signed-off-by: Richard Palethorpe <rpalethorpe@suse.com>

  Cc: Wolfgang Grandegger <wg@grandegger.com>

  Cc: Marc Kleine-Budde <mkl@pengutronix.de>

  Cc: "David S. Miller" <davem@davemloft.net>

  Cc: Tyler Hall <tylerwhall@gmail.com>

  Cc: linux-can@vger.kernel.org

  Cc: netdev@vger.kernel.org

  Cc: linux-kernel@vger.kernel.org

  Cc: syzkaller@googlegroups.com

  Signed-off-by: David S. Miller <davem@davemloft.net>

  '
submodule:
- drivers/net/can
- drivers/net/slip
hunk_count: 4
covered_count: 1
