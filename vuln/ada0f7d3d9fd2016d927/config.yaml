id: ada0f7d3d9fd2016d927
bug_link: https://syzkaller.appspot.com/bug?extid=ada0f7d3d9fd2016d927
title: 'INFO: task hung in do_proc_bulk'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 7042b10141542f56e1b4179a228aefa8a5ac3fab
fix_commit: ae8709b296d80c7f45aa1f35c0e7659ad69edce1
datetime: '2021-09-14T11:55:22+02:00'
fix_commit_message: "USB: core: Make do_proc_control() and do_proc_bulk() killable\n\
  \nThe USBDEVFS_CONTROL and USBDEVFS_BULK ioctls invoke\nusb_start_wait_urb(), which\
  \ contains an uninterruptible wait with a\nuser-specified timeout value.  If timeout\
  \ value is very large and the\ndevice being accessed does not respond in a reasonable\
  \ amount of time,\nthe kernel will complain about \"Task X blocked for more than\
  \ N\nseconds\", as found in testing by syzbot:\n\nINFO: task syz-executor.0:8700\
  \ blocked for more than 143 seconds.\n      Not tainted 5.14.0-rc7-syzkaller #0\n\
  \"echo 0 > /proc/sys/kernel/hung_task_timeout_secs\" disables this message.\ntask:syz-executor.0\
  \  state:D stack:23192 pid: 8700 ppid:  8455 flags:0x00004004\nCall Trace:\n context_switch\
  \ kernel/sched/core.c:4681 [inline]\n __schedule+0xc07/0x11f0 kernel/sched/core.c:5938\n\
  \ schedule+0x14b/0x210 kernel/sched/core.c:6017\n schedule_timeout+0x98/0x2f0 kernel/time/timer.c:1857\n\
  \ do_wait_for_common+0x2da/0x480 kernel/sched/completion.c:85\n __wait_for_common\
  \ kernel/sched/completion.c:106 [inline]\n wait_for_common kernel/sched/completion.c:117\
  \ [inline]\n wait_for_completion_timeout+0x46/0x60 kernel/sched/completion.c:157\n\
  \ usb_start_wait_urb+0x167/0x550 drivers/usb/core/message.c:63\n do_proc_bulk+0x978/0x1080\
  \ drivers/usb/core/devio.c:1236\n proc_bulk drivers/usb/core/devio.c:1273 [inline]\n\
  \ usbdev_do_ioctl drivers/usb/core/devio.c:2547 [inline]\n usbdev_ioctl+0x3441/0x6b10\
  \ drivers/usb/core/devio.c:2713\n...\n\nTo fix this problem, this patch replaces\
  \ usbfs's calls to\nusb_control_msg() and usb_bulk_msg() with special-purpose code\
  \ that\ndoes essentially the same thing (as recommended in the comment for\nusb_start_wait_urb()),\
  \ except that it always uses a killable wait and\nit uses GFP_KERNEL rather than\
  \ GFP_NOIO.\n\nReported-and-tested-by: syzbot+ada0f7d3d9fd2016d927@syzkaller.appspotmail.com\n\
  Suggested-by: Oliver Neukum <oneukum@suse.com>\nSigned-off-by: Alan Stern <stern@rowland.harvard.edu>\n\
  Link: https://lore.kernel.org/r/20210903175312.GA468440@rowland.harvard.edu\nSigned-off-by:\
  \ Greg Kroah-Hartman <gregkh@linuxfoundation.org>\n"
submodule:
- drivers/usb/core
hunk_count: 8
covered_count: 5
