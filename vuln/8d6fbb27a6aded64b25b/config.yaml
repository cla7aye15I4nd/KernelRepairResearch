id: 8d6fbb27a6aded64b25b
bug_link: https://syzkaller.appspot.com/bug?extid=8d6fbb27a6aded64b25b
title: 'KASAN: slab-out-of-bounds Read in run_unpack'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 54e45702b648b7c0000e90b3e9b890e367e16ea8
fix_commit: 887bfc546097fbe8071dac13b2fef73b77920899
datetime: '2022-09-30T17:39:55+03:00'
fix_commit_message: "fs/ntfs3: Fix slab-out-of-bounds read in run_unpack\n\nSyzkaller\
  \ reports slab-out-of-bounds bug as follows:\n==================================================================\n\
  BUG: KASAN: slab-out-of-bounds in run_unpack+0x8b7/0x970 fs/ntfs3/run.c:944\nRead\
  \ of size 1 at addr ffff88801bbdff02 by task syz-executor131/3611\n\n[...]\nCall\
  \ Trace:\n <TASK>\n __dump_stack lib/dump_stack.c:88 [inline]\n dump_stack_lvl+0xcd/0x134\
  \ lib/dump_stack.c:106\n print_address_description mm/kasan/report.c:317 [inline]\n\
  \ print_report.cold+0x2ba/0x719 mm/kasan/report.c:433\n kasan_report+0xb1/0x1e0\
  \ mm/kasan/report.c:495\n run_unpack+0x8b7/0x970 fs/ntfs3/run.c:944\n run_unpack_ex+0xb0/0x7c0\
  \ fs/ntfs3/run.c:1057\n ntfs_read_mft fs/ntfs3/inode.c:368 [inline]\n ntfs_iget5+0xc20/0x3280\
  \ fs/ntfs3/inode.c:501\n ntfs_loadlog_and_replay+0x124/0x5d0 fs/ntfs3/fsntfs.c:272\n\
  \ ntfs_fill_super+0x1eff/0x37f0 fs/ntfs3/super.c:1018\n get_tree_bdev+0x440/0x760\
  \ fs/super.c:1323\n vfs_get_tree+0x89/0x2f0 fs/super.c:1530\n do_new_mount fs/namespace.c:3040\
  \ [inline]\n path_mount+0x1326/0x1e20 fs/namespace.c:3370\n do_mount fs/namespace.c:3383\
  \ [inline]\n __do_sys_mount fs/namespace.c:3591 [inline]\n __se_sys_mount fs/namespace.c:3568\
  \ [inline]\n __x64_sys_mount+0x27f/0x300 fs/namespace.c:3568\n do_syscall_x64 arch/x86/entry/common.c:50\
  \ [inline]\n do_syscall_64+0x35/0xb0 arch/x86/entry/common.c:80\n entry_SYSCALL_64_after_hwframe+0x63/0xcd\n\
  \ [...]\n </TASK>\n\nThe buggy address belongs to the physical page:\npage:ffffea00006ef600\
  \ refcount:1 mapcount:0 mapping:0000000000000000 index:0x0 pfn:0x1bbd8\nhead:ffffea00006ef600\
  \ order:3 compound_mapcount:0 compound_pincount:0\nflags: 0xfff00000010200(slab|head|node=0|zone=1|lastcpupid=0x7ff)\n\
  page dumped because: kasan: bad access detected\n\nMemory state around the buggy\
  \ address:\n ffff88801bbdfe00: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc\n\
  \ ffff88801bbdfe80: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc\n>ffff88801bbdff00:\
  \ fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc\n                   ^\n ffff88801bbdff80:\
  \ fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc\n ffff88801bbe0000: fa fb fb fb\
  \ fb fb fb fb fb fb fb fb fb fb fb fb\n==================================================================\n\
  \nKernel will tries to read record and parse MFT from disk in\nntfs_read_mft().\n\
  \nYet the problem is that during enumerating attributes in record,\nkernel doesn't\
  \ check whether run_off field loading from the disk\nis a valid value.\n\nTo be\
  \ more specific, if attr->nres.run_off is larger than attr->size,\nkernel will passes\
  \ an invalid argument run_buf_size in\nrun_unpack_ex(), which having an integer\
  \ overflow. Then this invalid\nargument will triggers the slab-out-of-bounds Read\
  \ bug as above.\n\nThis patch solves it by adding the sanity check between\nthe\
  \ offset to packed runs and attribute size.\n\nlink: https://lore.kernel.org/all/0000000000009145fc05e94bd5c3@google.com/#t\n\
  Reported-and-tested-by: syzbot+8d6fbb27a6aded64b25b@syzkaller.appspotmail.com\n\
  Signed-off-by: Hawkins Jiawei <yin31149@gmail.com>\nSigned-off-by: Konstantin Komarov\
  \ <almaz.alexandrovich@paragon-software.com>\n"
submodule:
- fs/ntfs3
hunk_count: 1
covered_count: 1
