id: 1cf0ffe61aecf46f588f
bug_link: https://syzkaller.appspot.com/bug?extid=1cf0ffe61aecf46f588f
title: 'upstream boot error: KASAN: global-out-of-bounds Read in internal_create_group'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 9123e3a74ec7b934a4a099e98af6a61c2f80bbf5
fix_commit: 62c789270c0b1ed5598c6b87c53b6908cd3c6eb5
datetime: '2020-08-17T14:47:38-06:00'
fix_commit_message: "libnvdimm: KASAN: global-out-of-bounds Read in internal_create_group\n\
  \nBecause the last member of the \"nvdimm_firmware_attributes\" array\nwas not assigned\
  \ a null ptr, when traversal of \"grp->attrs\" array\nis out of bounds in \"create_files\"\
  \ func.\n\nfunc:\n\tcreate_files:\n\t\t->for (i = 0, attr = grp->attrs; *attr &&\
  \ !error; i++, attr++)\n\t\t\t->....\n\nBUG: KASAN: global-out-of-bounds in create_files\
  \ fs/sysfs/group.c:43 [inline]\nBUG: KASAN: global-out-of-bounds in internal_create_group+0x9d8/0xb20\n\
  fs/sysfs/group.c:149\nRead of size 8 at addr ffffffff8a2e4cf0 by task kworker/u17:10/959\n\
  \nCPU: 2 PID: 959 Comm: kworker/u17:10 Not tainted 5.8.0-syzkaller #0\nHardware\
  \ name: QEMU Standard PC (Q35 + ICH9, 2009),\nBIOS rel-1.12.0-59-gc9ba5276e321-prebuilt.qemu.org\
  \ 04/01/2014\nWorkqueue: events_unbound async_run_entry_fn\nCall Trace:\n __dump_stack\
  \ lib/dump_stack.c:77 [inline]\n dump_stack+0x18f/0x20d lib/dump_stack.c:118\n print_address_description.constprop.0.cold+0x5/0x497\
  \ mm/kasan/report.c:383\n __kasan_report mm/kasan/report.c:513 [inline]\n kasan_report.cold+0x1f/0x37\
  \ mm/kasan/report.c:530\n create_files fs/sysfs/group.c:43 [inline]\n internal_create_group+0x9d8/0xb20\
  \ fs/sysfs/group.c:149\n internal_create_groups.part.0+0x90/0x140 fs/sysfs/group.c:189\n\
  \ internal_create_groups fs/sysfs/group.c:185 [inline]\n sysfs_create_groups+0x25/0x50\
  \ fs/sysfs/group.c:215\n device_add_groups drivers/base/core.c:2024 [inline]\n device_add_attrs\
  \ drivers/base/core.c:2178 [inline]\n device_add+0x7fd/0x1c40 drivers/base/core.c:2881\n\
  \ nd_async_device_register+0x12/0x80 drivers/nvdimm/bus.c:506\n async_run_entry_fn+0x121/0x530\
  \ kernel/async.c:123\n process_one_work+0x94c/0x1670 kernel/workqueue.c:2269\n worker_thread+0x64c/0x1120\
  \ kernel/workqueue.c:2415\n kthread+0x3b5/0x4a0 kernel/kthread.c:292\n ret_from_fork+0x1f/0x30\
  \ arch/x86/entry/entry_64.S:294\n\nThe buggy address belongs to the variable:\n\
  \ nvdimm_firmware_attributes+0x10/0x40\n\nLink: https://lore.kernel.org/r/20200812085501.30963-1-qiang.zhang@windriver.com\n\
  Link: https://lore.kernel.org/r/20200814150509.225615-1-vaibhav@linux.ibm.com\n\
  Fixes: 48001ea50d17f (\"PM, libnvdimm: Add runtime firmware activation support\"\
  )\nReported-by: syzbot+1cf0ffe61aecf46f588f@syzkaller.appspotmail.com\nReported-by:\
  \ Sandipan Das <sandipan@linux.ibm.com>\nReported-by: Vaibhav Jain <vaibhav@linux.ibm.com>\n\
  Reviewed-by: Ira Weiny <ira.weiny@intel.com>\nSigned-off-by: Zqiang <qiang.zhang@windriver.com>\n\
  Signed-off-by: Vishal Verma <vishal.l.verma@intel.com>\n"
submodule:
- drivers/nvdimm
hunk_count: 1
covered_count: 0
