general protection fault, probably for non-canonical address 0xdffffc000000000f: 0000 [#1] PREEMPT SMP KASAN
KASAN: null-ptr-deref in range [0x0000000000000078-0x000000000000007f]
CPU: 0 PID: 15377 Comm: syz-executor.1 Not tainted 6.3.0-syzkaller-07919-g6e98b09da931 #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 04/14/2023
RIP: 0010:ext4_quota_capable fs/ext4/ext4.h:3417 [inline]
RIP: 0010:ext4_quota_mode fs/ext4/super.c:4274 [inline]
RIP: 0010:ext4_fill_super+0x37aa/0xb140 fs/ext4/super.c:5678
Code: c1 ea 03 80 3c 02 00 0f 85 41 49 00 00 4d 8b a6 78 06 00 00 48 b8 00 00 00 00 00 fc ff df 49 8d 7c 24 78 48 89 fa 48 c1 ea 03 <0f> b6 04 02 84 c0 74 08 3c 03 0f 8e fd 48 00 00 41 8b 5c 24 78 31
RSP: 0018:ffffc90014e8fb40 EFLAGS: 00010206
RAX: dffffc0000000000 RBX: 0000000000000001 RCX: ffffc90003831000
RDX: 000000000000000f RSI: ffffffff82390a60 RDI: 0000000000000078
RBP: ffffffff8a6393c0 R08: 0000000000000005 R09: 0000000000000000
R10: 0000000000000001 R11: 0000000000094001 R12: 0000000000000000
R13: 0000000000000000 R14: ffff888038a58000 R15: 0000000000000001
FS:  00007f1b40eb7700(0000) GS:ffff8880b9800000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 0000555555be4708 CR3: 0000000021ef9000 CR4: 00000000003506f0
DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
Call Trace:
 <TASK>
 get_tree_bdev+0x44a/0x770 fs/super.c:1303
 vfs_get_tree+0x8d/0x350 fs/super.c:1510
 do_new_mount fs/namespace.c:3039 [inline]
 path_mount+0x134b/0x1e40 fs/namespace.c:3369
 do_mount fs/namespace.c:3382 [inline]
 __do_sys_mount fs/namespace.c:3591 [inline]
 __se_sys_mount fs/namespace.c:3568 [inline]
 __x64_sys_mount+0x283/0x300 fs/namespace.c:3568
 do_syscall_x64 arch/x86/entry/common.c:50 [inline]
 do_syscall_64+0x39/0xb0 arch/x86/entry/common.c:80
 entry_SYSCALL_64_after_hwframe+0x63/0xcd
RIP: 0033:0x7f1b4008d69a
Code: 48 c7 c2 b8 ff ff ff f7 d8 64 89 02 b8 ff ff ff ff eb d2 e8 b8 04 00 00 0f 1f 84 00 00 00 00 00 49 89 ca b8 a5 00 00 00 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 b8 ff ff ff f7 d8 64 89 01 48
RSP: 002b:00007f1b40eb6f88 EFLAGS: 00000202 ORIG_RAX: 00000000000000a5
RAX: ffffffffffffffda RBX: 00000000000004b2 RCX: 00007f1b4008d69a
RDX: 0000000020000040 RSI: 0000000020000500 RDI: 00007f1b40eb6fe0
RBP: 00007f1b40eb7020 R08: 00007f1b40eb7020 R09: 0000000000000047
R10: 0000000000000047 R11: 0000000000000202 R12: 0000000020000040
R13: 0000000020000500 R14: 00007f1b40eb6fe0 R15: 0000000020000400
 </TASK>
Modules linked in:
---[ end trace 0000000000000000 ]---
RIP: 0010:ext4_quota_capable fs/ext4/ext4.h:3417 [inline]
RIP: 0010:ext4_quota_mode fs/ext4/super.c:4274 [inline]
RIP: 0010:ext4_fill_super+0x37aa/0xb140 fs/ext4/super.c:5678
Code: c1 ea 03 80 3c 02 00 0f 85 41 49 00 00 4d 8b a6 78 06 00 00 48 b8 00 00 00 00 00 fc ff df 49 8d 7c 24 78 48 89 fa 48 c1 ea 03 <0f> b6 04 02 84 c0 74 08 3c 03 0f 8e fd 48 00 00 41 8b 5c 24 78 31
RSP: 0018:ffffc90014e8fb40 EFLAGS: 00010206
RAX: dffffc0000000000 RBX: 0000000000000001 RCX: ffffc90003831000
RDX: 000000000000000f RSI: ffffffff82390a60 RDI: 0000000000000078
RBP: ffffffff8a6393c0 R08: 0000000000000005 R09: 0000000000000000
R10: 0000000000000001 R11: 0000000000094001 R12: 0000000000000000
R13: 0000000000000000 R14: ffff888038a58000 R15: 0000000000000001
FS:  00007f1b40eb7700(0000) GS:ffff8880b9800000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 00000000202f9030 CR3: 0000000021ef9000 CR4: 00000000003506f0
DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
----------------
Code disassembly (best guess):
   0:	c1 ea 03             	shr    $0x3,%edx
   3:	80 3c 02 00          	cmpb   $0x0,(%rdx,%rax,1)
   7:	0f 85 41 49 00 00    	jne    0x494e
   d:	4d 8b a6 78 06 00 00 	mov    0x678(%r14),%r12
  14:	48 b8 00 00 00 00 00 	movabs $0xdffffc0000000000,%rax
  1b:	fc ff df
  1e:	49 8d 7c 24 78       	lea    0x78(%r12),%rdi
  23:	48 89 fa             	mov    %rdi,%rdx
  26:	48 c1 ea 03          	shr    $0x3,%rdx
* 2a:	0f b6 04 02          	movzbl (%rdx,%rax,1),%eax <-- trapping instruction
  2e:	84 c0                	test   %al,%al
  30:	74 08                	je     0x3a
  32:	3c 03                	cmp    $0x3,%al
  34:	0f 8e fd 48 00 00    	jle    0x4937
  3a:	41 8b 5c 24 78       	mov    0x78(%r12),%ebx
  3f:	31                   	.byte 0x31
