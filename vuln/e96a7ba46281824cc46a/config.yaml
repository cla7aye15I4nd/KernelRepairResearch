id: e96a7ba46281824cc46a
bug_link: https://syzkaller.appspot.com/bug?extid=e96a7ba46281824cc46a
title: 'KASAN: use-after-free Read in tipc_mcast_xmit (2)'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 923527dcb4d164925a2fed0b53c6a1625a60a472
fix_commit: ed42989eab57d619667d7e87dfbd8fe207db54fe
datetime: '2020-10-09T18:22:56-07:00'
fix_commit_message: 'tipc: fix the skb_unshare() in tipc_buf_append()


  skb_unshare() drops a reference count on the old skb unconditionally,

  so in the failure case, we end up freeing the skb twice here.

  And because the skb is allocated in fclone and cloned by caller

  tipc_msg_reassemble(), the consequence is actually freeing the

  original skb too, thus triggered the UAF by syzbot.


  Fix this by replacing this skb_unshare() with skb_cloned()+skb_copy().


  Fixes: ff48b6222e65 ("tipc: use skb_unshare() instead in tipc_buf_append()")

  Reported-and-tested-by: syzbot+e96a7ba46281824cc46a@syzkaller.appspotmail.com

  Cc: Jon Maloy <jmaloy@redhat.com>

  Cc: Ying Xue <ying.xue@windriver.com>

  Signed-off-by: Cong Wang <xiyou.wangcong@gmail.com>

  Reviewed-by: Xin Long <lucien.xin@gmail.com>

  Signed-off-by: Jakub Kicinski <kuba@kernel.org>

  '
submodule:
- net/tipc
hunk_count: 1
covered_count: 1
