id: 1dfda02bdf25a814ceb7
bug_link: https://syzkaller.appspot.com/bug?extid=1dfda02bdf25a814ceb7
title: 'KASAN: stack-out-of-bounds Read in memcmp'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 75bf50f4aaa1c78d769d854ab3d975884909e4fb
fix_commit: 732706afe1cc46ef48493b3d2b69c98f36314ae4
datetime: '2017-12-08T08:07:25+01:00'
fix_commit_message: 'xfrm: Fix stack-out-of-bounds with misconfigured transport mode
  policies.


  On policies with a transport mode template, we pass the addresses

  from the flowi to xfrm_state_find(), assuming that the IP addresses

  (and address family) don''t change during transformation.


  Unfortunately our policy template validation is not strict enough.

  It is possible to configure policies with transport mode template

  where the address family of the template does not match the selectors

  address family. This lead to stack-out-of-bound reads because

  we compare arddesses of the wrong family. Fix this by refusing

  such a configuration, address family can not change on transport

  mode.


  We use the assumption that, on transport mode, the first templates

  address family must match the address family of the policy selector.

  Subsequent transport mode templates must mach the address family of

  the previous template.


  Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>

  '
submodule:
- net/xfrm
hunk_count: 2
covered_count: 0
