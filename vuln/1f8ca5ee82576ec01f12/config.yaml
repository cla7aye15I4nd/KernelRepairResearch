id: 1f8ca5ee82576ec01f12
bug_link: https://syzkaller.appspot.com/bug?extid=1f8ca5ee82576ec01f12
title: possible deadlock in usb_deregister_dev (3)
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 4a9fe2a8ac53cc06e53b6e6aff2ca25991d378af
fix_commit: d73dc7b182be4238b75278bfae16afb4c5564a58
datetime: '2024-10-13T14:02:47+02:00'
fix_commit_message: "USB: chaoskey: Fix possible deadlock chaoskey_list_lock\n\n[Syzbot\
  \ reported two possible deadlocks]\nThe first possible deadlock is:\nWARNING: possible\
  \ recursive locking detected\n6.12.0-rc1-syzkaller-00027-g4a9fe2a8ac53 #0 Not tainted\n\
  --------------------------------------------\nsyz-executor363/2651 is trying to\
  \ acquire lock:\nffffffff89b120e8 (chaoskey_list_lock){+.+.}-{3:3}, at: chaoskey_release+0x15d/0x2c0\
  \ drivers/usb/misc/chaoskey.c:322\n\nbut task is already holding lock:\nffffffff89b120e8\
  \ (chaoskey_list_lock){+.+.}-{3:3}, at: chaoskey_release+0x7f/0x2c0 drivers/usb/misc/chaoskey.c:299\n\
  \nother info that might help us debug this:\n Possible unsafe locking scenario:\n\
  \n       CPU0\n       ----\n  lock(chaoskey_list_lock);\n  lock(chaoskey_list_lock);\n\
  \n *** DEADLOCK ***\n\nThe second possible deadlock is:\nWARNING: possible circular\
  \ locking dependency detected\n6.12.0-rc1-syzkaller-00027-g4a9fe2a8ac53 #0 Not tainted\n\
  ------------------------------------------------------\nkworker/0:2/804 is trying\
  \ to acquire lock:\nffffffff899dadb0 (minor_rwsem){++++}-{3:3}, at: usb_deregister_dev+0x7c/0x1e0\
  \ drivers/usb/core/file.c:186\n\nbut task is already holding lock:\nffffffff89b120e8\
  \ (chaoskey_list_lock){+.+.}-{3:3}, at: chaoskey_disconnect+0xa8/0x2a0 drivers/usb/misc/chaoskey.c:235\n\
  \nwhich lock already depends on the new lock.\n\nthe existing dependency chain (in\
  \ reverse order) is:\n\n-> #1 (chaoskey_list_lock){+.+.}-{3:3}:\n       __mutex_lock_common\
  \ kernel/locking/mutex.c:608 [inline]\n       __mutex_lock+0x175/0x9c0 kernel/locking/mutex.c:752\n\
  \       chaoskey_open+0xdd/0x220 drivers/usb/misc/chaoskey.c:274\n       usb_open+0x186/0x220\
  \ drivers/usb/core/file.c:47\n       chrdev_open+0x237/0x6a0 fs/char_dev.c:414\n\
  \       do_dentry_open+0x6cb/0x1390 fs/open.c:958\n       vfs_open+0x82/0x3f0 fs/open.c:1088\n\
  \       do_open fs/namei.c:3774 [inline]\n       path_openat+0x1e6a/0x2d60 fs/namei.c:3933\n\
  \       do_filp_open+0x1dc/0x430 fs/namei.c:3960\n       do_sys_openat2+0x17a/0x1e0\
  \ fs/open.c:1415\n       do_sys_open fs/open.c:1430 [inline]\n       __do_sys_openat\
  \ fs/open.c:1446 [inline]\n       __se_sys_openat fs/open.c:1441 [inline]\n    \
  \   __x64_sys_openat+0x175/0x210 fs/open.c:1441\n       do_syscall_x64 arch/x86/entry/common.c:52\
  \ [inline]\n       do_syscall_64+0xcd/0x250 arch/x86/entry/common.c:83\n       entry_SYSCALL_64_after_hwframe+0x77/0x7f\n\
  \n-> #0 (minor_rwsem){++++}-{3:3}:\n       check_prev_add kernel/locking/lockdep.c:3161\
  \ [inline]\n       check_prevs_add kernel/locking/lockdep.c:3280 [inline]\n    \
  \   validate_chain kernel/locking/lockdep.c:3904 [inline]\n       __lock_acquire+0x250b/0x3ce0\
  \ kernel/locking/lockdep.c:5202\n       lock_acquire.part.0+0x11b/0x380 kernel/locking/lockdep.c:5825\n\
  \       down_write+0x93/0x200 kernel/locking/rwsem.c:1577\n       usb_deregister_dev+0x7c/0x1e0\
  \ drivers/usb/core/file.c:186\n       chaoskey_disconnect+0xb7/0x2a0 drivers/usb/misc/chaoskey.c:236\n\
  \       usb_unbind_interface+0x1e8/0x970 drivers/usb/core/driver.c:461\n       device_remove\
  \ drivers/base/dd.c:569 [inline]\n       device_remove+0x122/0x170 drivers/base/dd.c:561\n\
  \       __device_release_driver drivers/base/dd.c:1273 [inline]\n       device_release_driver_internal+0x44a/0x610\
  \ drivers/base/dd.c:1296\n       bus_remove_device+0x22f/0x420 drivers/base/bus.c:576\n\
  \       device_del+0x396/0x9f0 drivers/base/core.c:3864\n       usb_disable_device+0x36c/0x7f0\
  \ drivers/usb/core/message.c:1418\n       usb_disconnect+0x2e1/0x920 drivers/usb/core/hub.c:2304\n\
  \       hub_port_connect drivers/usb/core/hub.c:5361 [inline]\n       hub_port_connect_change\
  \ drivers/usb/core/hub.c:5661 [inline]\n       port_event drivers/usb/core/hub.c:5821\
  \ [inline]\n       hub_event+0x1bed/0x4f40 drivers/usb/core/hub.c:5903\n       process_one_work+0x9c5/0x1ba0\
  \ kernel/workqueue.c:3229\n       process_scheduled_works kernel/workqueue.c:3310\
  \ [inline]\n       worker_thread+0x6c8/0xf00 kernel/workqueue.c:3391\n       kthread+0x2c1/0x3a0\
  \ kernel/kthread.c:389\n       ret_from_fork+0x45/0x80 arch/x86/kernel/process.c:147\n\
  \       ret_from_fork_asm+0x1a/0x30 arch/x86/entry/entry_64.S:244\n\nother info\
  \ that might help us debug this:\n\n Possible unsafe locking scenario:\n\n     \
  \  CPU0                    CPU1\n       ----                    ----\n  lock(chaoskey_list_lock);\n\
  \                               lock(minor_rwsem);\n                           \
  \    lock(chaoskey_list_lock);\n  lock(minor_rwsem);\n\n *** DEADLOCK ***\n[Analysis]\n\
  The first is AA lock, it because wrong logic, it need a unlock.\nThe second is AB\
  \ lock, it needs to rearrange the order of lock usage.\n\nFixes: 422dc0a4d12d (\"\
  USB: chaoskey: fail open after removal\")\nReported-by: syzbot+685e14d04fe35692d3bc@syzkaller.appspotmail.com\n\
  Reported-by: syzbot+1f8ca5ee82576ec01f12@syzkaller.appspotmail.com\nCloses: https://syzkaller.appspot.com/bug?extid=685e14d04fe35692d3bc\n\
  Signed-off-by: Edward Adam Davis <eadavis@qq.com>\nTested-by: syzbot+685e14d04fe35692d3bc@syzkaller.appspotmail.com\n\
  Reported-by: syzbot+5f1ce62e956b7b19610e@syzkaller.appspotmail.com\nTested-by: syzbot+5f1ce62e956b7b19610e@syzkaller.appspotmail.com\n\
  Tested-by: syzbot+1f8ca5ee82576ec01f12@syzkaller.appspotmail.com\nLink: https://lore.kernel.org/r/tencent_84EB865C89862EC22EE94CB3A7C706C59206@qq.com\n\
  Cc: Oliver Neukum <oneukum@suse.com>\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>\n"
submodule:
- drivers/usb/misc
hunk_count: 2
covered_count: 2
