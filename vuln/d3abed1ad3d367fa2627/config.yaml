id: d3abed1ad3d367fa2627
bug_link: https://syzkaller.appspot.com/bug?extid=d3abed1ad3d367fa2627
title: kernel BUG in __block_write_begin_int (2)
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: bd225530a4c717714722c3731442b78954c765b3
fix_commit: a9e1ddc09ca55746079cc479aa3eb6411f0d99d4
datetime: '2024-07-03T22:40:38-07:00'
fix_commit_message: 'nilfs2: fix kernel bug on rename operation of broken directory


  Syzbot reported that in rename directory operation on broken directory on

  nilfs2, __block_write_begin_int() called to prepare block write may fail

  BUG_ON check for access exceeding the folio/page size.


  This is because nilfs_dotdot(), which gets parent directory reference

  entry ("..") of the directory to be moved or renamed, does not check

  consistency enough, and may return location exceeding folio/page size for

  broken directories.


  Fix this issue by checking required directory entries ("." and "..") in

  the first chunk of the directory in nilfs_dotdot().


  Link: https://lkml.kernel.org/r/20240628165107.9006-1-konishi.ryusuke@gmail.com

  Signed-off-by: Ryusuke Konishi <konishi.ryusuke@gmail.com>

  Reported-by: syzbot+d3abed1ad3d367fa2627@syzkaller.appspotmail.com

  Closes: https://syzkaller.appspot.com/bug?extid=d3abed1ad3d367fa2627

  Fixes: 2ba466d74ed7 ("nilfs2: directory entry operations")

  Tested-by: Ryusuke Konishi <konishi.ryusuke@gmail.com>

  Cc: <stable@vger.kernel.org>

  Signed-off-by: Andrew Morton <akpm@linux-foundation.org>

  '
submodule:
- fs/nilfs2
hunk_count: 1
covered_count: 1
