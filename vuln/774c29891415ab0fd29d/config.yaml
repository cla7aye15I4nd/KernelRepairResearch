id: 774c29891415ab0fd29d
bug_link: https://syzkaller.appspot.com/bug?extid=774c29891415ab0fd29d
title: 'KCSAN: data-race in drain_all_stock / drain_obj_stock (4)'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 7877cb91f1081754a1487c144d85dc0d2e2e7fc4
fix_commit: 3b8abb3239530c423c0b97e42af7f7e856e1ee96
datetime: '2023-06-09T16:25:13-07:00'
fix_commit_message: "mm: kmem: fix a NULL pointer dereference in obj_stock_flush_required()\n\
  \nKCSAN found an issue in obj_stock_flush_required():\nstock->cached_objcg can be\
  \ reset between the check and dereference:\n\n==================================================================\n\
  BUG: KCSAN: data-race in drain_all_stock / drain_obj_stock\n\nwrite to 0xffff888237c2a2f8\
  \ of 8 bytes by task 19625 on cpu 0:\n drain_obj_stock+0x408/0x4e0 mm/memcontrol.c:3306\n\
  \ refill_obj_stock+0x9c/0x1e0 mm/memcontrol.c:3340\n obj_cgroup_uncharge+0xe/0x10\
  \ mm/memcontrol.c:3408\n memcg_slab_free_hook mm/slab.h:587 [inline]\n __cache_free\
  \ mm/slab.c:3373 [inline]\n __do_kmem_cache_free mm/slab.c:3577 [inline]\n kmem_cache_free+0x105/0x280\
  \ mm/slab.c:3602\n __d_free fs/dcache.c:298 [inline]\n dentry_free fs/dcache.c:375\
  \ [inline]\n __dentry_kill+0x422/0x4a0 fs/dcache.c:621\n dentry_kill+0x8d/0x1e0\n\
  \ dput+0x118/0x1f0 fs/dcache.c:913\n __fput+0x3bf/0x570 fs/file_table.c:329\n ____fput+0x15/0x20\
  \ fs/file_table.c:349\n task_work_run+0x123/0x160 kernel/task_work.c:179\n resume_user_mode_work\
  \ include/linux/resume_user_mode.h:49 [inline]\n exit_to_user_mode_loop+0xcf/0xe0\
  \ kernel/entry/common.c:171\n exit_to_user_mode_prepare+0x6a/0xa0 kernel/entry/common.c:203\n\
  \ __syscall_exit_to_user_mode_work kernel/entry/common.c:285 [inline]\n syscall_exit_to_user_mode+0x26/0x140\
  \ kernel/entry/common.c:296\n do_syscall_64+0x4d/0xc0 arch/x86/entry/common.c:86\n\
  \ entry_SYSCALL_64_after_hwframe+0x63/0xcd\n\nread to 0xffff888237c2a2f8 of 8 bytes\
  \ by task 19632 on cpu 1:\n obj_stock_flush_required mm/memcontrol.c:3319 [inline]\n\
  \ drain_all_stock+0x174/0x2a0 mm/memcontrol.c:2361\n try_charge_memcg+0x6d0/0xd10\
  \ mm/memcontrol.c:2703\n try_charge mm/memcontrol.c:2837 [inline]\n mem_cgroup_charge_skmem+0x51/0x140\
  \ mm/memcontrol.c:7290\n sock_reserve_memory+0xb1/0x390 net/core/sock.c:1025\n sk_setsockopt+0x800/0x1e70\
  \ net/core/sock.c:1525\n udp_lib_setsockopt+0x99/0x6c0 net/ipv4/udp.c:2692\n udp_setsockopt+0x73/0xa0\
  \ net/ipv4/udp.c:2817\n sock_common_setsockopt+0x61/0x70 net/core/sock.c:3668\n\
  \ __sys_setsockopt+0x1c3/0x230 net/socket.c:2271\n __do_sys_setsockopt net/socket.c:2282\
  \ [inline]\n __se_sys_setsockopt net/socket.c:2279 [inline]\n __x64_sys_setsockopt+0x66/0x80\
  \ net/socket.c:2279\n do_syscall_x64 arch/x86/entry/common.c:50 [inline]\n do_syscall_64+0x41/0xc0\
  \ arch/x86/entry/common.c:80\n entry_SYSCALL_64_after_hwframe+0x63/0xcd\n\nvalue\
  \ changed: 0xffff8881382d52c0 -> 0xffff888138893740\n\nReported by Kernel Concurrency\
  \ Sanitizer on:\nCPU: 1 PID: 19632 Comm: syz-executor.0 Not tainted 6.3.0-rc2-syzkaller-00387-g534293368afa\
  \ #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google\
  \ 03/02/2023\n\nFix it by using READ_ONCE()/WRITE_ONCE() for all accesses to\nstock->cached_objcg.\n\
  \nLink: https://lkml.kernel.org/r/20230502160839.361544-1-roman.gushchin@linux.dev\n\
  Fixes: bf4f059954dc (\"mm: memcg/slab: obj_cgroup API\")\nSigned-off-by: Roman Gushchin\
  \ <roman.gushchin@linux.dev>\nReported-by: syzbot+774c29891415ab0fd29d@syzkaller.appspotmail.com\n\
  Reported-by: Dmitry Vyukov <dvyukov@google.com>\n  Link: https://lore.kernel.org/linux-mm/CACT4Y+ZfucZhM60YPphWiCLJr6+SGFhT+jjm8k1P-a_8Kkxsjg@mail.gmail.com/T/#t\n\
  Reviewed-by: Yosry Ahmed <yosryahmed@google.com>\nAcked-by: Shakeel Butt <shakeelb@google.com>\n\
  Reviewed-by: Dmitry Vyukov <dvyukov@google.com>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\n"
submodule:
- mm
hunk_count: 6
covered_count: 5
