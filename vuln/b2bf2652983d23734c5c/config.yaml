id: b2bf2652983d23734c5c
bug_link: https://syzkaller.appspot.com/bug?extid=b2bf2652983d23734c5c
title: kernel BUG at net/core/skbuff.c:LINE! (3)
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 9f8550e4bd9d78a8436c2061ad2530215f875376
fix_commit: afbc293add6466f8f3f0c3d944d85f53709c170f
datetime: '2021-01-04T10:05:50+01:00'
fix_commit_message: 'af_key: relax availability checks for skb size calculation


  xfrm_probe_algs() probes kernel crypto modules and changes the

  availability of struct xfrm_algo_desc. But there is a small window

  where ealg->available and aalg->available get changed between

  count_ah_combs()/count_esp_combs() and dump_ah_combs()/dump_esp_combs(),

  in this case we may allocate a smaller skb but later put a larger

  amount of data and trigger the panic in skb_put().


  Fix this by relaxing the checks when counting the size, that is,

  skipping the test of ->available. We may waste some memory for a few

  of sizeof(struct sadb_comb), but it is still much better than a panic.


  Reported-by: syzbot+b2bf2652983d23734c5c@syzkaller.appspotmail.com

  Cc: Steffen Klassert <steffen.klassert@secunet.com>

  Cc: Herbert Xu <herbert@gondor.apana.org.au>

  Signed-off-by: Cong Wang <cong.wang@bytedance.com>

  Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>

  '
submodule:
- net/key
hunk_count: 3
covered_count: 0
