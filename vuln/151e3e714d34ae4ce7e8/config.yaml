id: 151e3e714d34ae4ce7e8
bug_link: https://syzkaller.appspot.com/bug?extid=151e3e714d34ae4ce7e8
title: 'KASAN: null-ptr-deref Read in tcf_idrinfo_destroy'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 17aff5389d4f46a2ed2f0760922ae6c06dc438f1
fix_commit: 396d7f23adf9e8c436dd81a69488b5b6a865acf8
datetime: '2021-02-16T14:59:19-08:00'
fix_commit_message: "net: sched: fix police ext initialization\n\nWhen police action\
  \ is created by cls API tcf_exts_validate() first\nconditional that calls tcf_action_init_1()\
  \ directly, the action idr is not\nupdated according to latest changes in action\
  \ API that require caller to\ncommit newly created action to idr with tcf_idr_insert_many().\
  \ This results\nsuch action not being accessible through act API and causes crash\
  \ reported\nby syzbot:\n\n==================================================================\n\
  BUG: KASAN: null-ptr-deref in instrument_atomic_read include/linux/instrumented.h:71\
  \ [inline]\nBUG: KASAN: null-ptr-deref in atomic_read include/asm-generic/atomic-instrumented.h:27\
  \ [inline]\nBUG: KASAN: null-ptr-deref in __tcf_idr_release net/sched/act_api.c:178\
  \ [inline]\nBUG: KASAN: null-ptr-deref in tcf_idrinfo_destroy+0x129/0x1d0 net/sched/act_api.c:598\n\
  Read of size 4 at addr 0000000000000010 by task kworker/u4:5/204\n\nCPU: 0 PID:\
  \ 204 Comm: kworker/u4:5 Not tainted 5.11.0-rc7-syzkaller #0\nHardware name: Google\
  \ Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011\nWorkqueue:\
  \ netns cleanup_net\nCall Trace:\n __dump_stack lib/dump_stack.c:79 [inline]\n dump_stack+0x107/0x163\
  \ lib/dump_stack.c:120\n __kasan_report mm/kasan/report.c:400 [inline]\n kasan_report.cold+0x5f/0xd5\
  \ mm/kasan/report.c:413\n check_memory_region_inline mm/kasan/generic.c:179 [inline]\n\
  \ check_memory_region+0x13d/0x180 mm/kasan/generic.c:185\n instrument_atomic_read\
  \ include/linux/instrumented.h:71 [inline]\n atomic_read include/asm-generic/atomic-instrumented.h:27\
  \ [inline]\n __tcf_idr_release net/sched/act_api.c:178 [inline]\n tcf_idrinfo_destroy+0x129/0x1d0\
  \ net/sched/act_api.c:598\n tc_action_net_exit include/net/act_api.h:151 [inline]\n\
  \ police_exit_net+0x168/0x360 net/sched/act_police.c:390\n ops_exit_list+0x10d/0x160\
  \ net/core/net_namespace.c:190\n cleanup_net+0x4ea/0xb10 net/core/net_namespace.c:604\n\
  \ process_one_work+0x98d/0x15f0 kernel/workqueue.c:2275\n worker_thread+0x64c/0x1120\
  \ kernel/workqueue.c:2421\n kthread+0x3b1/0x4a0 kernel/kthread.c:292\n ret_from_fork+0x1f/0x30\
  \ arch/x86/entry/entry_64.S:296\n==================================================================\n\
  Kernel panic - not syncing: panic_on_warn set ...\nCPU: 0 PID: 204 Comm: kworker/u4:5\
  \ Tainted: G    B             5.11.0-rc7-syzkaller #0\nHardware name: Google Google\
  \ Compute Engine/Google Compute Engine, BIOS Google 01/01/2011\nWorkqueue: netns\
  \ cleanup_net\nCall Trace:\n __dump_stack lib/dump_stack.c:79 [inline]\n dump_stack+0x107/0x163\
  \ lib/dump_stack.c:120\n panic+0x306/0x73d kernel/panic.c:231\n end_report+0x58/0x5e\
  \ mm/kasan/report.c:100\n __kasan_report mm/kasan/report.c:403 [inline]\n kasan_report.cold+0x67/0xd5\
  \ mm/kasan/report.c:413\n check_memory_region_inline mm/kasan/generic.c:179 [inline]\n\
  \ check_memory_region+0x13d/0x180 mm/kasan/generic.c:185\n instrument_atomic_read\
  \ include/linux/instrumented.h:71 [inline]\n atomic_read include/asm-generic/atomic-instrumented.h:27\
  \ [inline]\n __tcf_idr_release net/sched/act_api.c:178 [inline]\n tcf_idrinfo_destroy+0x129/0x1d0\
  \ net/sched/act_api.c:598\n tc_action_net_exit include/net/act_api.h:151 [inline]\n\
  \ police_exit_net+0x168/0x360 net/sched/act_police.c:390\n ops_exit_list+0x10d/0x160\
  \ net/core/net_namespace.c:190\n cleanup_net+0x4ea/0xb10 net/core/net_namespace.c:604\n\
  \ process_one_work+0x98d/0x15f0 kernel/workqueue.c:2275\n worker_thread+0x64c/0x1120\
  \ kernel/workqueue.c:2421\n kthread+0x3b1/0x4a0 kernel/kthread.c:292\n ret_from_fork+0x1f/0x30\
  \ arch/x86/entry/entry_64.S:296\nKernel Offset: disabled\n\nFix the issue by calling\
  \ tcf_idr_insert_many() after successful action\ninitialization.\n\nFixes: 0fedc63fadf0\
  \ (\"net_sched: commit action insertions together\")\nReported-by: syzbot+151e3e714d34ae4ce7e8@syzkaller.appspotmail.com\n\
  Signed-off-by: Vlad Buslov <vladbu@nvidia.com>\nReviewed-by: Cong Wang <xiyou.wangcong@gmail.com>\n\
  Signed-off-by: David S. Miller <davem@davemloft.net>\n"
submodule:
- include/net
- net/sched
hunk_count: 3
covered_count: 1
