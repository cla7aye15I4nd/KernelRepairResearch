id: b65e0af58423fc8a73aa
bug_link: https://syzkaller.appspot.com/bug?extid=b65e0af58423fc8a73aa
title: 'KASAN: slab-use-after-free Read in advance_sched'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 34d35b4edbbe890a91bec939bfd29ad92517a52b
fix_commit: f504465970aebb2467da548f7c1efbbf36d0f44b
datetime: '2024-10-23T13:26:15+02:00'
fix_commit_message: 'net: sched: fix use-after-free in taprio_change()


  In ''taprio_change()'', ''admin'' pointer may become dangling due to sched

  switch / removal caused by ''advance_sched()'', and critical section

  protected by ''q->current_entry_lock'' is too small to prevent from such

  a scenario (which causes use-after-free detected by KASAN). Fix this

  by prefer ''rcu_replace_pointer()'' over ''rcu_assign_pointer()'' to update

  ''admin'' immediately before an attempt to schedule freeing.


  Fixes: a3d43c0d56f1 ("taprio: Add support adding an admin schedule")

  Reported-by: syzbot+b65e0af58423fc8a73aa@syzkaller.appspotmail.com

  Closes: https://syzkaller.appspot.com/bug?extid=b65e0af58423fc8a73aa

  Acked-by: Vinicius Costa Gomes <vinicius.gomes@intel.com>

  Signed-off-by: Dmitry Antipov <dmantipov@yandex.ru>

  Link: https://patch.msgid.link/20241018051339.418890-1-dmantipov@yandex.ru

  Signed-off-by: Paolo Abeni <pabeni@redhat.com>


  '
submodule:
- net/sched
hunk_count: 1
covered_count: 1
