id: f0bbb2287b8993d4fa74
bug_link: https://syzkaller.appspot.com/bug?extid=f0bbb2287b8993d4fa74
title: memory leak in tcindex_set_parms
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: a17ad0961706244dce48ec941f7e476a38c0e727
fix_commit: f5051bcece50140abd1a11a2d36dc3ec5484fc32
datetime: '2021-07-18T09:45:46-07:00'
fix_commit_message: 'net: sched: fix memory leak in tcindex_partial_destroy_work


  Syzbot reported memory leak in tcindex_set_parms(). The problem was in

  non-freed perfect hash in tcindex_partial_destroy_work().


  In tcindex_set_parms() new tcindex_data is allocated and some fields from

  old one are copied to new one, but not the perfect hash. Since

  tcindex_partial_destroy_work() is the destroy function for old

  tcindex_data, we need to free perfect hash to avoid memory leak.


  Reported-and-tested-by: syzbot+f0bbb2287b8993d4fa74@syzkaller.appspotmail.com

  Fixes: 331b72922c5f ("net: sched: RCU cls_tcindex")

  Signed-off-by: Pavel Skripkin <paskripkin@gmail.com>

  Signed-off-by: David S. Miller <davem@davemloft.net>

  '
submodule:
- net/sched
hunk_count: 2
covered_count: 2
