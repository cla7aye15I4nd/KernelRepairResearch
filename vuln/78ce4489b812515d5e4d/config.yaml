id: 78ce4489b812515d5e4d
bug_link: https://syzkaller.appspot.com/bug?extid=78ce4489b812515d5e4d
title: 'KCSAN: data-race in can_send / can_send (5)'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 1d22a122ffb116c3cf78053e812b8b21f8852ee9
fix_commit: 80b5f90158d1364cbd80ad82852a757fc0692bf2
datetime: '2025-03-14T09:47:00+01:00'
fix_commit_message: 'can: statistics: use atomic access in hot path


  In can_send() and can_receive() CAN messages and CAN filter matches are

  counted to be visible in the CAN procfs files.


  KCSAN detected a data race within can_send() when two CAN frames have

  been generated by a timer event writing to the same CAN netdevice at the

  same time. Use atomic operations to access the statistics in the hot path

  to fix the KCSAN complaint.


  Reported-by: syzbot+78ce4489b812515d5e4d@syzkaller.appspotmail.com

  Closes: https://lore.kernel.org/all/67cd717d.050a0220.e1a89.0006.GAE@google.com

  Signed-off-by: Oliver Hartkopp <socketcan@hartkopp.net>

  Reviewed-by: Vincent Mailhol <mailhol.vincent@wanadoo.fr>

  Link: https://patch.msgid.link/20250310143353.3242-1-socketcan@hartkopp.net

  Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>

  '
submodule:
- net/can
hunk_count: 9
covered_count: 3
