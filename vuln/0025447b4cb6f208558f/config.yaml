id: 0025447b4cb6f208558f
bug_link: https://syzkaller.appspot.com/bug?extid=0025447b4cb6f208558f
title: 'KASAN: use-after-free Write in __xfrm_policy_unlink (2)'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: d235c48b40d399328585a68f3f9bf7cc3062d586
fix_commit: b805d78d300bcf2c83d6df7da0c818b0fee41427
datetime: '2019-03-01T12:17:41+01:00'
fix_commit_message: "xfrm: policy: Fix out-of-bound array accesses in __xfrm_policy_unlink\n\
  \nUBSAN report this:\n\nUBSAN: Undefined behaviour in net/xfrm/xfrm_policy.c:1289:24\n\
  index 6 is out of range for type 'unsigned int [6]'\nCPU: 1 PID: 0 Comm: swapper/1\
  \ Not tainted 4.4.162-514.55.6.9.x86_64+ #13\nHardware name: QEMU Standard PC (i440FX\
  \ + PIIX, 1996), BIOS 1.10.2-1ubuntu1 04/01/2014\n 0000000000000000 1466cf39b41b23c9\
  \ ffff8801f6b07a58 ffffffff81cb35f4\n 0000000041b58ab3 ffffffff83230f9c ffffffff81cb34e0\
  \ ffff8801f6b07a80\n ffff8801f6b07a20 1466cf39b41b23c9 ffffffff851706e0 ffff8801f6b07ae8\n\
  Call Trace:\n <IRQ>  [<ffffffff81cb35f4>] __dump_stack lib/dump_stack.c:15 [inline]\n\
  \ <IRQ>  [<ffffffff81cb35f4>] dump_stack+0x114/0x1a0 lib/dump_stack.c:51\n [<ffffffff81d94225>]\
  \ ubsan_epilogue+0x12/0x8f lib/ubsan.c:164\n [<ffffffff81d954db>] __ubsan_handle_out_of_bounds+0x16e/0x1b2\
  \ lib/ubsan.c:382\n [<ffffffff82a25acd>] __xfrm_policy_unlink+0x3dd/0x5b0 net/xfrm/xfrm_policy.c:1289\n\
  \ [<ffffffff82a2e572>] xfrm_policy_delete+0x52/0xb0 net/xfrm/xfrm_policy.c:1309\n\
  \ [<ffffffff82a3319b>] xfrm_policy_timer+0x30b/0x590 net/xfrm/xfrm_policy.c:243\n\
  \ [<ffffffff813d3927>] call_timer_fn+0x237/0x990 kernel/time/timer.c:1144\n [<ffffffff813d8e7e>]\
  \ __run_timers kernel/time/timer.c:1218 [inline]\n [<ffffffff813d8e7e>] run_timer_softirq+0x6ce/0xb80\
  \ kernel/time/timer.c:1401\n [<ffffffff8120d6f9>] __do_softirq+0x299/0xe10 kernel/softirq.c:273\n\
  \ [<ffffffff8120e676>] invoke_softirq kernel/softirq.c:350 [inline]\n [<ffffffff8120e676>]\
  \ irq_exit+0x216/0x2c0 kernel/softirq.c:391\n [<ffffffff82c5edab>] exiting_irq arch/x86/include/asm/apic.h:652\
  \ [inline]\n [<ffffffff82c5edab>] smp_apic_timer_interrupt+0x8b/0xc0 arch/x86/kernel/apic/apic.c:926\n\
  \ [<ffffffff82c5c985>] apic_timer_interrupt+0xa5/0xb0 arch/x86/entry/entry_64.S:735\n\
  \ <EOI>  [<ffffffff81188096>] ? native_safe_halt+0x6/0x10 arch/x86/include/asm/irqflags.h:52\n\
  \ [<ffffffff810834d7>] arch_safe_halt arch/x86/include/asm/paravirt.h:111 [inline]\n\
  \ [<ffffffff810834d7>] default_idle+0x27/0x430 arch/x86/kernel/process.c:446\n [<ffffffff81085f05>]\
  \ arch_cpu_idle+0x15/0x20 arch/x86/kernel/process.c:437\n [<ffffffff8132abc3>] default_idle_call+0x53/0x90\
  \ kernel/sched/idle.c:92\n [<ffffffff8132b32d>] cpuidle_idle_call kernel/sched/idle.c:156\
  \ [inline]\n [<ffffffff8132b32d>] cpu_idle_loop kernel/sched/idle.c:251 [inline]\n\
  \ [<ffffffff8132b32d>] cpu_startup_entry+0x60d/0x9a0 kernel/sched/idle.c:299\n [<ffffffff8113e119>]\
  \ start_secondary+0x3c9/0x560 arch/x86/kernel/smpboot.c:245\n\nThe issue is triggered\
  \ as this:\n\nxfrm_add_policy\n    -->verify_newpolicy_info  //check the index provided\
  \ by user with XFRM_POLICY_MAX\n\t\t\t      //In my case, the index is 0x6E6BB6,\
  \ so it pass the check.\n    -->xfrm_policy_construct  //copy the user's policy\
  \ and set xfrm_policy_timer\n    -->xfrm_policy_insert\n\t--> __xfrm_policy_link\
  \ //use the orgin dir, in my case is 2\n\t--> xfrm_gen_index   //generate policy\
  \ index, there is 0x6E6BB6\n\nthen xfrm_policy_timer be fired\n\nxfrm_policy_timer\n\
  \   --> xfrm_policy_id2dir  //get dir from (policy index & 7), in my case is 6\n\
  \   --> xfrm_policy_delete\n      --> __xfrm_policy_unlink //access policy_count[dir],\
  \ trigger out of range access\n\nAdd xfrm_policy_id2dir check in verify_newpolicy_info,\
  \ make sure the computed dir is\nvalid, to fix the issue.\n\nReported-by: Hulk Robot\
  \ <hulkci@huawei.com>\nFixes: e682adf021be (\"xfrm: Try to honor policy index if\
  \ it's supplied by user\")\nSigned-off-by: YueHaibing <yuehaibing@huawei.com>\n\
  Acked-by: Herbert Xu <herbert@gondor.apana.org.au>\nSigned-off-by: Steffen Klassert\
  \ <steffen.klassert@secunet.com>\n"
submodule:
- net/xfrm
hunk_count: 1
covered_count: 0
