id: 9ee20ec1de7b3168db09
bug_link: https://syzkaller.appspot.com/bug?extid=9ee20ec1de7b3168db09
title: 'KMSAN: uninit-value in geneve_xmit (3)'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: eaac25d026a14be4fe97683103f2a3ae76bff7bd
fix_commit: d8a6213d70accb403b82924a1c229e733433a5ef
datetime: '2024-04-08T11:51:04+01:00'
fix_commit_message: "geneve: fix header validation in geneve[6]_xmit_skb\n\nsyzbot\
  \ is able to trigger an uninit-value in geneve_xmit() [1]\n\nProblem : While most\
  \ ip tunnel helpers (like ip_tunnel_get_dsfield())\nuses skb_protocol(skb, true),\
  \ pskb_inet_may_pull() is only using\nskb->protocol.\n\nIf anything else than ETH_P_IPV6\
  \ or ETH_P_IP is found in skb->protocol,\npskb_inet_may_pull() does nothing at all.\n\
  \nIf a vlan tag was provided by the caller (af_packet in the syzbot case),\nthe\
  \ network header might not point to the correct location, and skb\nlinear part could\
  \ be smaller than expected.\n\nAdd skb_vlan_inet_prepare() to perform a complete\
  \ mac validation.\n\nUse this in geneve for the moment, I suspect we need to adopt\
  \ this\nmore broadly.\n\nv4 - Jakub reported v3 broke l2_tos_ttl_inherit.sh selftest\n\
  \   - Only call __vlan_get_protocol() for vlan types.\nLink: https://lore.kernel.org/netdev/20240404100035.3270a7d5@kernel.org/\n\
  \nv2,v3 - Addressed Sabrina comments on v1 and v2\nLink: https://lore.kernel.org/netdev/Zg1l9L2BNoZWZDZG@hog/\n\
  \n[1]\n\nBUG: KMSAN: uninit-value in geneve_xmit_skb drivers/net/geneve.c:910 [inline]\n\
  \ BUG: KMSAN: uninit-value in geneve_xmit+0x302d/0x5420 drivers/net/geneve.c:1030\n\
  \  geneve_xmit_skb drivers/net/geneve.c:910 [inline]\n  geneve_xmit+0x302d/0x5420\
  \ drivers/net/geneve.c:1030\n  __netdev_start_xmit include/linux/netdevice.h:4903\
  \ [inline]\n  netdev_start_xmit include/linux/netdevice.h:4917 [inline]\n  xmit_one\
  \ net/core/dev.c:3531 [inline]\n  dev_hard_start_xmit+0x247/0xa20 net/core/dev.c:3547\n\
  \  __dev_queue_xmit+0x348d/0x52c0 net/core/dev.c:4335\n  dev_queue_xmit include/linux/netdevice.h:3091\
  \ [inline]\n  packet_xmit+0x9c/0x6c0 net/packet/af_packet.c:276\n  packet_snd net/packet/af_packet.c:3081\
  \ [inline]\n  packet_sendmsg+0x8bb0/0x9ef0 net/packet/af_packet.c:3113\n  sock_sendmsg_nosec\
  \ net/socket.c:730 [inline]\n  __sock_sendmsg+0x30f/0x380 net/socket.c:745\n  __sys_sendto+0x685/0x830\
  \ net/socket.c:2191\n  __do_sys_sendto net/socket.c:2203 [inline]\n  __se_sys_sendto\
  \ net/socket.c:2199 [inline]\n  __x64_sys_sendto+0x125/0x1d0 net/socket.c:2199\n\
  \ do_syscall_64+0xd5/0x1f0\n entry_SYSCALL_64_after_hwframe+0x6d/0x75\n\nUninit\
  \ was created at:\n  slab_post_alloc_hook mm/slub.c:3804 [inline]\n  slab_alloc_node\
  \ mm/slub.c:3845 [inline]\n  kmem_cache_alloc_node+0x613/0xc50 mm/slub.c:3888\n\
  \  kmalloc_reserve+0x13d/0x4a0 net/core/skbuff.c:577\n  __alloc_skb+0x35b/0x7a0\
  \ net/core/skbuff.c:668\n  alloc_skb include/linux/skbuff.h:1318 [inline]\n  alloc_skb_with_frags+0xc8/0xbf0\
  \ net/core/skbuff.c:6504\n  sock_alloc_send_pskb+0xa81/0xbf0 net/core/sock.c:2795\n\
  \  packet_alloc_skb net/packet/af_packet.c:2930 [inline]\n  packet_snd net/packet/af_packet.c:3024\
  \ [inline]\n  packet_sendmsg+0x722d/0x9ef0 net/packet/af_packet.c:3113\n  sock_sendmsg_nosec\
  \ net/socket.c:730 [inline]\n  __sock_sendmsg+0x30f/0x380 net/socket.c:745\n  __sys_sendto+0x685/0x830\
  \ net/socket.c:2191\n  __do_sys_sendto net/socket.c:2203 [inline]\n  __se_sys_sendto\
  \ net/socket.c:2199 [inline]\n  __x64_sys_sendto+0x125/0x1d0 net/socket.c:2199\n\
  \ do_syscall_64+0xd5/0x1f0\n entry_SYSCALL_64_after_hwframe+0x6d/0x75\n\nCPU: 0\
  \ PID: 5033 Comm: syz-executor346 Not tainted 6.9.0-rc1-syzkaller-00005-g928a87efa423\
  \ #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google\
  \ 02/29/2024\n\nFixes: d13f048dd40e (\"net: geneve: modify IP header check in geneve6_xmit_skb\
  \ and geneve_xmit_skb\")\nReported-by: syzbot+9ee20ec1de7b3168db09@syzkaller.appspotmail.com\n\
  Closes: https://lore.kernel.org/netdev/000000000000d19c3a06152f9ee4@google.com/\n\
  Signed-off-by: Eric Dumazet <edumazet@google.com>\nCc: Phillip Potter <phil@philpotter.co.uk>\n\
  Cc: Sabrina Dubroca <sd@queasysnail.net>\nReviewed-by: Sabrina Dubroca <sd@queasysnail.net>\n\
  Reviewed-by: Phillip Potter <phil@philpotter.co.uk>\nSigned-off-by: David S. Miller\
  \ <davem@davemloft.net>\n"
submodule:
- drivers/net
- include/net
hunk_count: 3
covered_count: 1
