id: a76f6a6e524cf2080aa3
bug_link: https://syzkaller.appspot.com/bug?extid=a76f6a6e524cf2080aa3
title: 'KASAN: slab-out-of-bounds Read in __fscache_acquire_volume'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: eb7081409f94a9a8608593d0fb63a1aa3d6f95d8
fix_commit: 9f0933ac026f7e54fe096797af9de20724e79097
datetime: '2022-11-23T10:31:13-08:00'
fix_commit_message: "fscache: fix OOB Read in __fscache_acquire_volume\n\nThe type\
  \ of a->key[0] is char in fscache_volume_same().  If the length\nof cache volume\
  \ key is greater than 127, the value of a->key[0] is less\nthan 0.  In this case,\
  \ klen becomes much larger than 255 after type\nconversion, because the type of\
  \ klen is size_t.  As a result, memcmp()\nis read out of bounds.\n\nThis causes\
  \ a slab-out-of-bounds Read in __fscache_acquire_volume(), as\nreported by Syzbot.\n\
  \nFix this by changing the type of the stored key to \"u8 *\" rather than\n\"char\
  \ *\" (it isn't a simple string anyway).  Also put in a check that\nthe volume name\
  \ doesn't exceed NAME_MAX.\n\n  BUG: KASAN: slab-out-of-bounds in memcmp+0x16f/0x1c0\
  \ lib/string.c:757\n  Read of size 8 at addr ffff888016f3aa90 by task syz-executor344/3613\n\
  \  Call Trace:\n   memcmp+0x16f/0x1c0 lib/string.c:757\n   memcmp include/linux/fortify-string.h:420\
  \ [inline]\n   fscache_volume_same fs/fscache/volume.c:133 [inline]\n   fscache_hash_volume\
  \ fs/fscache/volume.c:171 [inline]\n   __fscache_acquire_volume+0x76c/0x1080 fs/fscache/volume.c:328\n\
  \   fscache_acquire_volume include/linux/fscache.h:204 [inline]\n   v9fs_cache_session_get_cookie+0x143/0x240\
  \ fs/9p/cache.c:34\n   v9fs_session_init+0x1166/0x1810 fs/9p/v9fs.c:473\n   v9fs_mount+0xba/0xc90\
  \ fs/9p/vfs_super.c:126\n   legacy_get_tree+0x105/0x220 fs/fs_context.c:610\n  \
  \ vfs_get_tree+0x89/0x2f0 fs/super.c:1530\n   do_new_mount fs/namespace.c:3040 [inline]\n\
  \   path_mount+0x1326/0x1e20 fs/namespace.c:3370\n   do_mount fs/namespace.c:3383\
  \ [inline]\n   __do_sys_mount fs/namespace.c:3591 [inline]\n   __se_sys_mount fs/namespace.c:3568\
  \ [inline]\n   __x64_sys_mount+0x27f/0x300 fs/namespace.c:3568\n\nFixes: 62ab63352350\
  \ (\"fscache: Implement volume registration\")\nReported-by: syzbot+a76f6a6e524cf2080aa3@syzkaller.appspotmail.com\n\
  Signed-off-by: David Howells <dhowells@redhat.com>\nReviewed-by: Zhang Peng <zhangpeng362@huawei.com>\n\
  Reviewed-by: Jingbo Xu <jefflexu@linux.alibaba.com>\ncc: Dominique Martinet <asmadeus@codewreck.org>\n\
  cc: Jeff Layton <jlayton@kernel.org>\ncc: v9fs-developer@lists.sourceforge.net\n\
  cc: linux-cachefs@redhat.com\nLink: https://lore.kernel.org/r/Y3OH+Dmi0QIOK18n@codewreck.org/\
  \ # Zhang Peng's v1 fix\nLink: https://lore.kernel.org/r/20221115140447.2971680-1-zhangpeng362@huawei.com/\
  \ # Zhang Peng's v2 fix\nLink: https://lore.kernel.org/r/166869954095.3793579.8500020902371015443.stgit@warthog.procyon.org.uk/\
  \ # v1\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\n"
submodule:
- fs/fscache
- include/linux
hunk_count: 3
covered_count: 2
