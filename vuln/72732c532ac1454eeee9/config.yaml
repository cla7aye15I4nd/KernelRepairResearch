id: 72732c532ac1454eeee9
bug_link: https://syzkaller.appspot.com/bug?extid=72732c532ac1454eeee9
title: 'WARNING: kmalloc bug in snd_pcm_plugin_alloc (2)'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: c14231cc04337c2c2a937db084af342ce704dbde
fix_commit: efb6402c3c4a7c26d97c92d70186424097b6e366
datetime: '2022-03-18T14:01:07+01:00'
fix_commit_message: 'ALSA: oss: Fix PCM OSS buffer allocation overflow


  We''ve got syzbot reports hitting INT_MAX overflow at vmalloc()

  allocation that is called from snd_pcm_plug_alloc().  Although we

  apply the restrictions to input parameters, it''s based only on the

  hw_params of the underlying PCM device.  Since the PCM OSS layer

  allocates a temporary buffer for the data conversion, the size may

  become unexpectedly large when more channels or higher rates is given;

  in the reported case, it went over INT_MAX, hence it hits WARN_ON().


  This patch is an attempt to avoid such an overflow and an allocation

  for too large buffers.  First off, it adds the limit of 1MB as the

  upper bound for period bytes.  This must be large enough for all use

  cases, and we really don''t want to handle a larger temporary buffer

  than this size.  The size check is performed at two places, where the

  original period bytes is calculated and where the plugin buffer size

  is calculated.


  In addition, the driver uses array_size() and array3_size() for

  multiplications to catch overflows for the converted period size and

  buffer bytes.


  Reported-by: syzbot+72732c532ac1454eeee9@syzkaller.appspotmail.com

  Suggested-by: Linus Torvalds <torvalds@linux-foundation.org>

  Cc: <stable@vger.kernel.org>

  Link: https://lore.kernel.org/r/00000000000085b1b305da5a66f3@google.com

  Link: https://lore.kernel.org/r/20220318082036.29699-1-tiwai@suse.de

  Signed-off-by: Takashi Iwai <tiwai@suse.de>

  '
submodule:
- sound/core/oss
hunk_count: 3
covered_count: 2
