id: 4180ff9ca6810b06c1e9
bug_link: https://syzkaller.appspot.com/bug?extid=4180ff9ca6810b06c1e9
title: 'KASAN: use-after-free Read in __vb2_perform_fileio'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: c1ced46c7b49ad7bc064e68d966e0ad303f917fb
fix_commit: d65842f7126aa1a87fb44b7c9980c12630ed4f33
datetime: '2019-04-22T11:50:07-04:00'
fix_commit_message: 'media: vb2: add waiting_in_dqbuf flag


  Calling VIDIOC_DQBUF can release the core serialization lock pointed to

  by vb2_queue->lock if it has to wait for a new buffer to arrive.


  However, if userspace dup()ped the video device filehandle, then it is

  possible to read or call DQBUF from two filehandles at the same time.


  It is also possible to call REQBUFS from one filehandle while the other

  is waiting for a buffer. This will remove all the buffers and reallocate

  new ones. Removing all the buffers isn''t the problem here (that''s already

  handled correctly by DQBUF), but the reallocating part is: DQBUF isn''t

  aware that the buffers have changed.


  This is fixed by setting a flag whenever the lock is released while waiting

  for a buffer to arrive. And checking the flag where needed so we can return

  -EBUSY.


  Signed-off-by: Hans Verkuil <hverkuil@xs4all.nl>

  Reported-by: Syzbot <syzbot+4180ff9ca6810b06c1e9@syzkaller.appspotmail.com>

  Reviewed-by: Tomasz Figa <tfiga@chromium.org>

  Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>

  Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>

  '
submodule:
- drivers/media/common/videobuf2
- include/media
hunk_count: 7
covered_count: 1
