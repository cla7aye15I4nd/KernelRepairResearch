id: 7ad82526b98c64c90062275162dacfa48c20dbd3
bug_link: https://syzkaller.appspot.com/bug?extid=7ad82526b98c64c90062275162dacfa48c20dbd3
title: 'KASAN: use-after-free Write in irq_bypass_register_consumer'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 94ffba484663ab3fc695ce2a34871e8c3db499f7
fix_commit: b5020a8e6b54d2ece80b1e7dedb33c79a40ebd47
datetime: '2018-07-18T11:31:27+02:00'
fix_commit_message: 'KVM/Eventfd: Avoid crash when assign and deassign specific eventfd
  in parallel.


  Syzbot reports crashes in kvm_irqfd_assign(), caused by use-after-free

  when kvm_irqfd_assign() and kvm_irqfd_deassign() run in parallel

  for one specific eventfd. When the assign path hasn''t finished but irqfd

  has been added to kvm->irqfds.items list, another thead may deassign the

  eventfd and free struct kvm_kernel_irqfd(). The assign path then uses

  the struct kvm_kernel_irqfd that has been freed by deassign path. To avoid

  such issue, keep irqfd under kvm->irq_srcu protection after the irqfd

  has been added to kvm->irqfds.items list, and call synchronize_srcu()

  in irq_shutdown() to make sure that irqfd has been fully initialized in

  the assign path.


  Reported-by: Dmitry Vyukov <dvyukov@google.com>

  Cc: Paolo Bonzini <pbonzini@redhat.com>

  Cc: Radim Krčmář <rkrcmar@redhat.com>

  Cc: Dmitry Vyukov <dvyukov@google.com>

  Signed-off-by: Tianyu Lan <tianyu.lan@intel.com>

  Cc: stable@vger.kernel.org

  Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>

  '
submodule:
- virt/kvm
hunk_count: 3
covered_count: 3
