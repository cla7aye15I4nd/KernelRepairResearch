id: 01321b15cc98e6bf96d6
bug_link: https://syzkaller.appspot.com/bug?extid=01321b15cc98e6bf96d6
title: memory leak in blk_iolatency_init
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 65ed1e692f2b996292a5bd973200442816dd0ec1
fix_commit: 6f5ddde41069fcd1f0993ec76c9dbbf9d021fd4d
datetime: '2021-09-15T11:57:44-06:00'
fix_commit_message: "blkcg: fix memory leak in blk_iolatency_init\n\nBUG: memory leak\n\
  unreferenced object 0xffff888129acdb80 (size 96):\n  comm \"syz-executor.1\", pid\
  \ 12661, jiffies 4294962682 (age 15.220s)\n  hex dump (first 32 bytes):\n    20\
  \ 47 c9 85 ff ff ff ff 20 d4 8e 29 81 88 ff ff   G...... ..)....\n    01 00 00 00\
  \ 00 00 00 00 00 00 00 00 00 00 00 00  ................\n  backtrace:\n    [<ffffffff82264ec8>]\
  \ kmalloc include/linux/slab.h:591 [inline]\n    [<ffffffff82264ec8>] kzalloc include/linux/slab.h:721\
  \ [inline]\n    [<ffffffff82264ec8>] blk_iolatency_init+0x28/0x190 block/blk-iolatency.c:724\n\
  \    [<ffffffff8225b8c4>] blkcg_init_queue+0xb4/0x1c0 block/blk-cgroup.c:1185\n\
  \    [<ffffffff822253da>] blk_alloc_queue+0x22a/0x2e0 block/blk-core.c:566\n   \
  \ [<ffffffff8223b175>] blk_mq_init_queue_data block/blk-mq.c:3100 [inline]\n   \
  \ [<ffffffff8223b175>] __blk_mq_alloc_disk+0x25/0xd0 block/blk-mq.c:3124\n    [<ffffffff826a9303>]\
  \ loop_add+0x1c3/0x360 drivers/block/loop.c:2344\n    [<ffffffff826a966e>] loop_control_get_free\
  \ drivers/block/loop.c:2501 [inline]\n    [<ffffffff826a966e>] loop_control_ioctl+0x17e/0x2e0\
  \ drivers/block/loop.c:2516\n    [<ffffffff81597eec>] vfs_ioctl fs/ioctl.c:51 [inline]\n\
  \    [<ffffffff81597eec>] __do_sys_ioctl fs/ioctl.c:874 [inline]\n    [<ffffffff81597eec>]\
  \ __se_sys_ioctl fs/ioctl.c:860 [inline]\n    [<ffffffff81597eec>] __x64_sys_ioctl+0xfc/0x140\
  \ fs/ioctl.c:860\n    [<ffffffff843fa745>] do_syscall_x64 arch/x86/entry/common.c:50\
  \ [inline]\n    [<ffffffff843fa745>] do_syscall_64+0x35/0xb0 arch/x86/entry/common.c:80\n\
  \    [<ffffffff84600068>] entry_SYSCALL_64_after_hwframe+0x44/0xae\n\nOnce blk_throtl_init()\
  \ queue init failed, blkcg_iolatency_exit() will\nnot be invoked for cleanup. That\
  \ leads a memory leak. Swap the\nblk_throtl_init() and blk_iolatency_init() calls\
  \ can solve this.\n\nReported-by: syzbot+01321b15cc98e6bf96d6@syzkaller.appspotmail.com\n\
  Fixes: 19688d7f9592 (block/blk-cgroup: Swap the blk_throtl_init() and blk_iolatency_init()\
  \ calls)\nSigned-off-by: Yanfei Xu <yanfei.xu@windriver.com>\nAcked-by: Tejun Heo\
  \ <tj@kernel.org>\nLink: https://lore.kernel.org/r/20210915072426.4022924-1-yanfei.xu@windriver.com\n\
  Signed-off-by: Jens Axboe <axboe@kernel.dk>\n"
submodule:
- block
hunk_count: 2
covered_count: 2
