id: 16b1da89309a06cd0e3a
bug_link: https://syzkaller.appspot.com/bug?extid=16b1da89309a06cd0e3a
title: WARNING in get_pat_info
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: db44863a4d9df3604c4ff76507bb2056b6392e58
fix_commit: f8e97613fed25758ddf52159b87e1c66e619a23a
datetime: '2025-05-22T14:55:37-07:00'
fix_commit_message: "mm: convert VM_PFNMAP tracking to pfnmap_track() + pfnmap_untrack()\n\
  \nLet's use our new interface.  In remap_pfn_range(), we'll now decide\nwhether\
  \ we have to track (full VMA covered) or only lookup the cachemode\n(partial VMA\
  \ covered).\n\nRemember what we have to untrack by linking it from the VMA.  When\n\
  duplicating VMAs (e.g., splitting, mremap, fork), we'll handle it similar\nto anon\
  \ VMA names, and use a kref to share the tracking.\n\nOnce the last VMA un-refs\
  \ our tracking data, we'll do the untracking,\nwhich simplifies things a lot and\
  \ should sort our various issues we saw\nrecently, for example, when partially unmapping/zapping\
  \ a tracked VMA.\n\nThis change implies that we'll keep tracking the original PFN\
  \ range even\nafter splitting + partially unmapping it: not too bad, because it\
  \ was not\nworking reliably before.  The only thing that kind-of worked before was\n\
  shrinking such a mapping using mremap(): we managed to adjust the\nreservation in\
  \ a hacky way, now we won't adjust the reservation but leave\nit around until all\
  \ involved VMAs are gone.\n\nIf that ever turns out to be an issue, we could hook\
  \ into VM splitting\ncode and split the tracking; however, that adds complexity\
  \ that might not\nbe required, so we'll keep it simple for now.\n\nLink: https://lkml.kernel.org/r/20250512123424.637989-5-david@redhat.com\n\
  Signed-off-by: David Hildenbrand <david@redhat.com>\nAcked-by: Ingo Molnar <mingo@kernel.org>\t\
  [x86 bits]\nReviewed-by: Lorenzo Stoakes <lorenzo.stoakes@oracle.com>\nReviewed-by:\
  \ Liam R. Howlett <Liam.Howlett@oracle.com>\nCc: Andy Lutomirski <luto@kernel.org>\n\
  Cc: Borislav Betkov <bp@alien8.de>\nCc: Dave Airlie <airlied@gmail.com>\nCc: \"\
  H. Peter Anvin\" <hpa@zytor.com>\nCc: Jani Nikula <jani.nikula@linux.intel.com>\n\
  Cc: Jann Horn <jannh@google.com>\nCc: Jonas Lahtinen <joonas.lahtinen@linux.intel.com>\n\
  Cc: \"Masami Hiramatsu (Google)\" <mhiramat@kernel.org>\nCc: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>\n\
  Cc: Peter Xu <peterx@redhat.com>\nCc: Peter Zijlstra <peterz@infradead.org>\nCc:\
  \ Rodrigo Vivi <rodrigo.vivi@intel.com>\nCc: Steven Rostedt <rostedt@goodmis.org>\n\
  Cc: Thomas Gleinxer <tglx@linutronix.de>\nCc: Tvrtko Ursulin <tursulin@ursulin.net>\n\
  Cc: Vlastimil Babka <vbabka@suse.cz>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\n"
submodule:
- include/linux
- mm
hunk_count: 14
covered_count: 3
