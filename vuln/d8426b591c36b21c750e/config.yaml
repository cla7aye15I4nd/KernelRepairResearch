id: d8426b591c36b21c750e
bug_link: https://syzkaller.appspot.com/bug?extid=d8426b591c36b21c750e
title: WARNING in __page_table_check_ptes_set
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 52ccdde16b6540abe43b6f8d8e1e1ec90b0983af
fix_commit: c88033efe9a391e72ba6b5df4b01d6e628f4e734
datetime: '2024-05-05T17:28:04-07:00'
fix_commit_message: 'mm/userfaultfd: reset ptes when close() for wr-protected ones


  Userfaultfd unregister includes a step to remove wr-protect bits from all

  the relevant pgtable entries, but that only covered an explicit

  UFFDIO_UNREGISTER ioctl, not a close() on the userfaultfd itself.  Cover

  that too.  This fixes a WARN trace.


  The only user visible side effect is the user can observe leftover

  wr-protect bits even if the user close()ed on an userfaultfd when

  releasing the last reference of it.  However hopefully that should be

  harmless, and nothing bad should happen even if so.


  This change is now more important after the recent page-table-check

  patch we merged in mm-unstable (446dd9ad37d0 ("mm/page_table_check:

  support userfault wr-protect entries")), as we''ll do sanity check on

  uffd-wp bits without vma context.  So it''s better if we can 100%

  guarantee no uffd-wp bit leftovers, to make sure each report will be

  valid.


  Link: https://lore.kernel.org/all/000000000000ca4df20616a0fe16@google.com/

  Fixes: f369b07c8614 ("mm/uffd: reset write protection when unregister with wp-mode")

  Analyzed-by: David Hildenbrand <david@redhat.com>

  Link: https://lkml.kernel.org/r/20240422133311.2987675-1-peterx@redhat.com

  Reported-by: syzbot+d8426b591c36b21c750e@syzkaller.appspotmail.com

  Signed-off-by: Peter Xu <peterx@redhat.com>

  Reviewed-by: David Hildenbrand <david@redhat.com>

  Cc: Nadav Amit <nadav.amit@gmail.com>

  Cc: <stable@vger.kernel.org>

  Signed-off-by: Andrew Morton <akpm@linux-foundation.org>

  '
submodule:
- fs
hunk_count: 1
covered_count: 0
