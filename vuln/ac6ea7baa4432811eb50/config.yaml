id: ac6ea7baa4432811eb50
bug_link: https://syzkaller.appspot.com/bug?extid=ac6ea7baa4432811eb50
title: 'WARNING: held lock freed!'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 625637bf4afa45204bd87e4218645182a919485a
fix_commit: a0ff660058b88d12625a783ce9e5c1371c87951f
datetime: '2018-01-16T14:22:51-05:00'
fix_commit_message: 'sctp: return error if the asoc has been peeled off in sctp_wait_for_sndbuf


  After commit cea0cc80a677 ("sctp: use the right sk after waking up from

  wait_buf sleep"), it may change to lock another sk if the asoc has been

  peeled off in sctp_wait_for_sndbuf.


  However, the asoc''s new sk could be already closed elsewhere, as it''s in

  the sendmsg context of the old sk that can''t avoid the new sk''s closing.

  If the sk''s last one refcnt is held by this asoc, later on after putting

  this asoc, the new sk will be freed, while under it''s own lock.


  This patch is to revert that commit, but fix the old issue by returning

  error under the old sk''s lock.


  Fixes: cea0cc80a677 ("sctp: use the right sk after waking up from wait_buf sleep")

  Reported-by: syzbot+ac6ea7baa4432811eb50@syzkaller.appspotmail.com

  Signed-off-by: Xin Long <lucien.xin@gmail.com>

  Acked-by: Neil Horman <nhorman@tuxdriver.com>

  Signed-off-by: David S. Miller <davem@davemloft.net>

  '
submodule:
- net/sctp
hunk_count: 4
covered_count: 4
