id: 3902b5220e8ca27889ca
bug_link: https://syzkaller.appspot.com/bug?extid=3902b5220e8ca27889ca
title: 'BUG: unable to handle kernel paging request in memset_erms'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 9685347aa0a5c2869058ca6ab79fd8e93084a67f
fix_commit: b088b53e20c7d09b5ab84c5688e609f478e5c417
datetime: '2018-01-05T16:40:16+01:00'
fix_commit_message: 'ALSA: aloop: Fix inconsistent format due to incomplete rule


  The extra hw constraint rule for the formats the aloop driver

  introduced has a slight flaw, where it doesn''t return a positive value

  when the mask got changed.  It came from the fact that it''s basically

  a copy&paste from snd_hw_constraint_mask64().  The original code is

  supposed to be a single-shot and it modifies the mask bits only once

  and never after, while what we need for aloop is the dynamic hw rule

  that limits the mask bits.


  This difference results in the inconsistent state, as the hw_refine

  doesn''t apply the dependencies fully.  The worse and surprisingly

  result is that it causes a crash in OSS emulation when multiple

  full-duplex reads/writes are performed concurrently (I leave why it

  triggers Oops to readers as a homework).


  For fixing this, replace a few open-codes with the standard

  snd_mask_*() macros.


  Reported-by: syzbot+3902b5220e8ca27889ca@syzkaller.appspotmail.com

  Fixes: b1c73fc8e697 ("ALSA: snd-aloop: Fix hw_params restrictions and checking")

  Cc: <stable@vger.kernel.org>

  Signed-off-by: Takashi Iwai <tiwai@suse.de>

  '
submodule:
- sound/drivers
hunk_count: 2
covered_count: 1
