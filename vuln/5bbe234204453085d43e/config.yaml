id: 5bbe234204453085d43e
bug_link: https://syzkaller.appspot.com/bug?extid=5bbe234204453085d43e
title: 'KASAN: use-after-free Read in psock_map_pop'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 080220b687147fd9376878534aba7194f17f6ef5
fix_commit: 5607fff303636d48b88414c6be353d9fed700af2
datetime: '2018-09-22T02:46:41+02:00'
fix_commit_message: 'bpf: sockmap only allow ESTABLISHED sock state


  After this patch we only allow socks that are in ESTABLISHED state or

  are being added via a sock_ops event that is transitioning into an

  ESTABLISHED state. By allowing sock_ops events we allow users to

  manage sockmaps directly from sock ops programs. The two supported

  sock_ops ops are BPF_SOCK_OPS_PASSIVE_ESTABLISHED_CB and

  BPF_SOCK_OPS_ACTIVE_ESTABLISHED_CB.


  Similar to TLS ULP this ensures sk_user_data is correct.


  Reported-by: Eric Dumazet <edumazet@google.com>

  Fixes: 1aa12bdf1bfb ("bpf: sockmap, add sock close() hook to remove socks")

  Signed-off-by: John Fastabend <john.fastabend@gmail.com>

  Acked-by: Yonghong Song <yhs@fb.com>

  Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>

  '
submodule:
- kernel/bpf
hunk_count: 4
covered_count: 1
