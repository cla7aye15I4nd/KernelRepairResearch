id: fd5e0eaa1a32999173b2
bug_link: https://syzkaller.appspot.com/bug?extid=fd5e0eaa1a32999173b2
title: 'KCSAN: data-race in snd_seq_prioq_cell_out / snd_seq_timer_interrupt'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: bb51e669fa49feb5904f452b2991b240ef31bc97
fix_commit: dc7497795e014d84699c3b8809ed6df35352dd74
datetime: '2020-02-14T15:53:09+01:00'
fix_commit_message: 'ALSA: seq: Fix concurrent access to queue current tick/time


  snd_seq_check_queue() passes the current tick and time of the given

  queue as a pointer to snd_seq_prioq_cell_out(), but those might be

  updated concurrently by the seq timer update.


  Fix it by retrieving the current tick and time via the proper helper

  functions at first, and pass those values to snd_seq_prioq_cell_out()

  later in the loops.


  snd_seq_timer_get_cur_time() takes a new argument and adjusts with the

  current system time only when it''s requested so; this update isn''t

  needed for snd_seq_check_queue(), as it''s called either from the

  interrupt handler or right after queuing.


  Also, snd_seq_timer_get_cur_tick() is changed to read the value in the

  spinlock for the concurrency, too.


  Reported-by: syzbot+fd5e0eaa1a32999173b2@syzkaller.appspotmail.com

  Link: https://lore.kernel.org/r/20200214111316.26939-3-tiwai@suse.de

  Signed-off-by: Takashi Iwai <tiwai@suse.de>

  '
submodule:
- sound/core/seq
hunk_count: 7
covered_count: 2
