id: 4cfe71a4da060be47502
bug_link: https://syzkaller.appspot.com/bug?extid=4cfe71a4da060be47502
title: WARNING in close_fs_devices (2)
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: a4852cf268b5ae487ba18f2b24e44094afce0675
fix_commit: cf89af146b7e62af55470cf5f3ec3c56ec144a5e
datetime: '2020-11-05T13:03:31+01:00'
fix_commit_message: "btrfs: dev-replace: fail mount if we don't have replace item\
  \ with target device\n\nIf there is a device BTRFS_DEV_REPLACE_DEVID without the\
  \ device replace\nitem, then it means the filesystem is inconsistent state. This\
  \ is either\ncorruption or a crafted image.  Fail the mount as this needs a closer\n\
  look what is actually wrong.\n\nAs of now if BTRFS_DEV_REPLACE_DEVID is present\
  \ without the replace\nitem, in __btrfs_free_extra_devids() we determine that there\
  \ is an\nextra device, and free those extra devices but continue to mount the\n\
  device.\nHowever, we were wrong in keeping tack of the rw_devices so the syzbot\n\
  testcase failed:\n\n  WARNING: CPU: 1 PID: 3612 at fs/btrfs/volumes.c:1166 close_fs_devices.part.0+0x607/0x800\
  \ fs/btrfs/volumes.c:1166\n  Kernel panic - not syncing: panic_on_warn set ...\n\
  \  CPU: 1 PID: 3612 Comm: syz-executor.2 Not tainted 5.9.0-rc4-syzkaller #0\n  Hardware\
  \ name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011\n\
  \  Call Trace:\n   __dump_stack lib/dump_stack.c:77 [inline]\n   dump_stack+0x198/0x1fd\
  \ lib/dump_stack.c:118\n   panic+0x347/0x7c0 kernel/panic.c:231\n   __warn.cold+0x20/0x46\
  \ kernel/panic.c:600\n   report_bug+0x1bd/0x210 lib/bug.c:198\n   handle_bug+0x38/0x90\
  \ arch/x86/kernel/traps.c:234\n   exc_invalid_op+0x14/0x40 arch/x86/kernel/traps.c:254\n\
  \   asm_exc_invalid_op+0x12/0x20 arch/x86/include/asm/idtentry.h:536\n  RIP: 0010:close_fs_devices.part.0+0x607/0x800\
  \ fs/btrfs/volumes.c:1166\n  RSP: 0018:ffffc900091777e0 EFLAGS: 00010246\n  RAX:\
  \ 0000000000040000 RBX: ffffffffffffffff RCX: ffffc9000c8b7000\n  RDX: 0000000000040000\
  \ RSI: ffffffff83097f47 RDI: 0000000000000007\n  RBP: dffffc0000000000 R08: 0000000000000001\
  \ R09: ffff8880988a187f\n  R10: 0000000000000000 R11: 0000000000000001 R12: ffff88809593a130\n\
  \  R13: ffff88809593a1ec R14: ffff8880988a1908 R15: ffff88809593a050\n   close_fs_devices\
  \ fs/btrfs/volumes.c:1193 [inline]\n   btrfs_close_devices+0x95/0x1f0 fs/btrfs/volumes.c:1179\n\
  \   open_ctree+0x4984/0x4a2d fs/btrfs/disk-io.c:3434\n   btrfs_fill_super fs/btrfs/super.c:1316\
  \ [inline]\n   btrfs_mount_root.cold+0x14/0x165 fs/btrfs/super.c:1672\n\nThe fix\
  \ here is, when we determine that there isn't a replace item\nthen fail the mount\
  \ if there is a replace target device (devid 0).\n\nCC: stable@vger.kernel.org #\
  \ 4.19+\nReported-by: syzbot+4cfe71a4da060be47502@syzkaller.appspotmail.com\nSigned-off-by:\
  \ Anand Jain <anand.jain@oracle.com>\nReviewed-by: David Sterba <dsterba@suse.com>\n\
  Signed-off-by: David Sterba <dsterba@suse.com>\n"
submodule:
- fs/btrfs
hunk_count: 4
covered_count: 0
