id: 2990ca6e76c080858a9c
bug_link: https://syzkaller.appspot.com/bug?extid=2990ca6e76c080858a9c
title: 'KASAN: stack-out-of-bounds Read in update_stack_state'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 8ec8405f081e1e0f800b20f683451c37e81e26c1
fix_commit: 4ee7c60de83ac01fa4c33c55937357601631e8ad
datetime: '2018-04-06T08:56:54-04:00'
fix_commit_message: 'init, tracing: Add initcall trace events


  Being able to trace the start and stop of initcalls is useful to see where

  the timings are an issue. There is already an "initcall_debug" parameter,

  but that can cause a large overhead itself, as the printing of the

  information may take longer than the initcall functions.


  Adding in a start and finish trace event around the initcall functions, as

  well as a trace event that records the level of the initcalls, one can get a

  much finer measurement of the times and interactions of the initcalls

  themselves, as trace events are much lighter than printk()s.


  Suggested-by: Abderrahmane Benbachir <abderrahmane.benbachir@polymtl.ca>

  Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>

  '
submodule:
- include/trace/events
- init
hunk_count: 5
covered_count: 0
