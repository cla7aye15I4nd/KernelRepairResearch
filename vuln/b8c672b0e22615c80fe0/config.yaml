id: b8c672b0e22615c80fe0
bug_link: https://syzkaller.appspot.com/bug?extid=b8c672b0e22615c80fe0
title: 'KASAN: use-after-free Read in nilfs_segctor_confirm'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: b1f44cdabad8c50cd72d6b6731e9fdf3730a8f4f
fix_commit: d325dc6eb763c10f591c239550b8c7e5466a5d09
datetime: '2022-10-11T19:05:44-07:00'
fix_commit_message: 'nilfs2: fix use-after-free bug of struct nilfs_root


  If the beginning of the inode bitmap area is corrupted on disk, an inode

  with the same inode number as the root inode can be allocated and fail

  soon after.  In this case, the subsequent call to nilfs_clear_inode() on

  that bogus root inode will wrongly decrement the reference counter of

  struct nilfs_root, and this will erroneously free struct nilfs_root,

  causing kernel oopses.


  This fixes the problem by changing nilfs_new_inode() to skip reserved

  inode numbers while repairing the inode bitmap.


  Link: https://lkml.kernel.org/r/20221003150519.39789-1-konishi.ryusuke@gmail.com

  Signed-off-by: Ryusuke Konishi <konishi.ryusuke@gmail.com>

  Reported-by: syzbot+b8c672b0e22615c80fe0@syzkaller.appspotmail.com

  Reported-by: Khalid Masum <khalid.masum.92@gmail.com>

  Tested-by: Ryusuke Konishi <konishi.ryusuke@gmail.com>

  Cc: <stable@vger.kernel.org>

  Signed-off-by: Andrew Morton <akpm@linux-foundation.org>

  '
submodule:
- fs/nilfs2
hunk_count: 2
covered_count: 0
