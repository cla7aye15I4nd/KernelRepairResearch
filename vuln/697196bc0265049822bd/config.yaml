id: 697196bc0265049822bd
bug_link: https://syzkaller.appspot.com/bug?extid=697196bc0265049822bd
title: WARNING in put_pmu_ctx
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 6d796c50f84ca79f1722bb131799e5a5710c4700
fix_commit: 4f64a6c9f6f11e8b7314f8e27e2c4568706009e6
datetime: '2023-01-31T20:37:18+01:00'
fix_commit_message: "perf: Fix perf_event_pmu_context serialization\n\nSyzkaller triggered\
  \ a WARN in put_pmu_ctx().\n\n  WARNING: CPU: 1 PID: 2245 at kernel/events/core.c:4925\
  \ put_pmu_ctx+0x1f0/0x278\n\nThis is because there is no locking around the access\
  \ of \"if\n(!epc->ctx)\" in find_get_pmu_context() and when it is set to NULL in\n\
  put_pmu_ctx().\n\nThe decrement of the reference count in put_pmu_ctx() also happens\n\
  outside of the spinlock, leading to the possibility of this order of\nevents, and\
  \ the context being cleared in put_pmu_ctx(), after its\nrefcount is non zero:\n\
  \n CPU0                                   CPU1\n find_get_pmu_context()\n   if (!epc->ctx)\
  \ == false\n                                        put_pmu_ctx()\n            \
  \                            atomic_dec_and_test(&epc->refcount) == true\n     \
  \                                   epc->refcount == 0\n     atomic_inc(&epc->refcount);\n\
  \     epc->refcount == 1\n                                        list_del_init(&epc->pmu_ctx_entry);\n\
  \t                                      epc->ctx = NULL;\n\nAnother issue is that\
  \ WARN_ON for no active PMU events in put_pmu_ctx()\nis outside of the lock. If\
  \ the perf_event_pmu_context is an embedded\none, even after clearing it, it won't\
  \ be deleted and can be re-used. So\nthe warning can trigger. For this reason it\
  \ also needs to be moved\ninside the lock.\n\nThe above warning is very quick to\
  \ trigger on Arm by running these two\ncommands at the same time:\n\n  while true;\
  \ do perf record -- ls; done\n  while true; do perf record -- ls; done\n\n[peterz:\
  \ atomic_dec_and_raw_lock*()]\nFixes: bd2756811766 (\"perf: Rewrite core context\
  \ handling\")\nReported-by: syzbot+697196bc0265049822bd@syzkaller.appspotmail.com\n\
  Signed-off-by: James Clark <james.clark@arm.com>\nSigned-off-by: Peter Zijlstra\
  \ (Intel) <peterz@infradead.org>\nReviewed-by: Ravi Bangoria <ravi.bangoria@amd.com>\n\
  Link: https://lore.kernel.org/r/20230127143141.1782804-2-james.clark@arm.com\n"
submodule:
- include/linux
- kernel/events
- lib
hunk_count: 4
covered_count: 1
