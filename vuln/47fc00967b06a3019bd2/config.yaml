id: 47fc00967b06a3019bd2
bug_link: https://syzkaller.appspot.com/bug?extid=47fc00967b06a3019bd2
title: 'INFO: task hung in __io_uring_cancel'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 615cee49b3ca55f54d527f7a6a7d0fd4fd6fef6b
fix_commit: 28090c133869b461c5366195a856d73469ab87d9
datetime: '2021-04-26T06:59:25-06:00'
fix_commit_message: 'io_uring: fix work_exit sqpoll cancellations


  After closing an SQPOLL ring, io_ring_exit_work() kicks in and starts

  doing cancellations via io_uring_try_cancel_requests(). It will go

  through io_uring_try_cancel_iowq(), which uses ctx->tctx_list, but as

  SQPOLL task don''t have a ctx note, its io-wq won''t be reachable and so

  is left not cancelled.


  It will eventually cancelled when one of the tasks dies, but if a thread

  group survives for long and changes rings, it will spawn lots of

  unreclaimed resources and live locked works.


  Cancel SQPOLL task''s io-wq separately in io_ring_exit_work().


  Cc: stable@vger.kernel.org

  Signed-off-by: Pavel Begunkov <asml.silence@gmail.com>

  Link: https://lore.kernel.org/r/a71a7fe345135d684025bb529d5cb1d8d6b46e10.1619389911.git.asml.silence@gmail.com

  Signed-off-by: Jens Axboe <axboe@kernel.dk>

  '
submodule:
- fs
hunk_count: 3
covered_count: 0
