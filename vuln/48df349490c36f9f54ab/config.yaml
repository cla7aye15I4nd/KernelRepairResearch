id: 48df349490c36f9f54ab
bug_link: https://syzkaller.appspot.com/bug?extid=48df349490c36f9f54ab
title: 'KASAN: use-after-free Read in snd_info_free_entry'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 8c2f870890fd28e023b0fcf49dcee333f2c8bad7
fix_commit: 2a3f7221acddfe1caa9ff09b3a8158c39b2fdeac
datetime: '2019-04-16T17:06:33+02:00'
fix_commit_message: 'ALSA: core: Fix card races between register and disconnect


  There is a small race window in the card disconnection code that

  allows the registration of another card with the very same card id.

  This leads to a warning in procfs creation as caught by syzkaller.


  The problem is that we delete snd_cards and snd_cards_lock entries at

  the very beginning of the disconnection procedure.  This makes the

  slot available to be assigned for another card object while the

  disconnection procedure is being processed.  Then it becomes possible

  to issue a procfs registration with the existing file name although we

  check the conflict beforehand.


  The fix is simply to move the snd_cards and snd_cards_lock clearances

  at the end of the disconnection procedure.  The references to these

  entries are merely either from the global proc files like

  /proc/asound/cards or from the card registration / disconnection, so

  it should be fine to shift at the very end.


  Reported-by: syzbot+48df349490c36f9f54ab@syzkaller.appspotmail.com

  Cc: <stable@vger.kernel.org>

  Signed-off-by: Takashi Iwai <tiwai@suse.de>

  '
submodule:
- sound/core
hunk_count: 3
covered_count: 1
