id: 3694e283cf5c40df6d14
bug_link: https://syzkaller.appspot.com/bug?extid=3694e283cf5c40df6d14
title: 'KASAN: slab-out-of-bounds Read in f2fs_get_node_info'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: a320b2f08b3b26fff0a71777f018553fc1e6873e
fix_commit: 20faaf30e55522bba2b56d9c46689233205d7717
datetime: '2024-04-29T17:41:17+00:00'
fix_commit_message: "f2fs: fix to do sanity check on i_xattr_nid in sanity_check_inode()\n\
  \nsyzbot reports a kernel bug as below:\n\nF2FS-fs (loop0): Mounted with checkpoint\
  \ version = 48b305e4\n==================================================================\n\
  BUG: KASAN: slab-out-of-bounds in f2fs_test_bit fs/f2fs/f2fs.h:2933 [inline]\nBUG:\
  \ KASAN: slab-out-of-bounds in current_nat_addr fs/f2fs/node.h:213 [inline]\nBUG:\
  \ KASAN: slab-out-of-bounds in f2fs_get_node_info+0xece/0x1200 fs/f2fs/node.c:600\n\
  Read of size 1 at addr ffff88807a58c76c by task syz-executor280/5076\n\nCPU: 1 PID:\
  \ 5076 Comm: syz-executor280 Not tainted 6.9.0-rc5-syzkaller #0\nHardware name:\
  \ Google Google Compute Engine/Google Compute Engine, BIOS Google 03/27/2024\nCall\
  \ Trace:\n <TASK>\n __dump_stack lib/dump_stack.c:88 [inline]\n dump_stack_lvl+0x241/0x360\
  \ lib/dump_stack.c:114\n print_address_description mm/kasan/report.c:377 [inline]\n\
  \ print_report+0x169/0x550 mm/kasan/report.c:488\n kasan_report+0x143/0x180 mm/kasan/report.c:601\n\
  \ f2fs_test_bit fs/f2fs/f2fs.h:2933 [inline]\n current_nat_addr fs/f2fs/node.h:213\
  \ [inline]\n f2fs_get_node_info+0xece/0x1200 fs/f2fs/node.c:600\n f2fs_xattr_fiemap\
  \ fs/f2fs/data.c:1848 [inline]\n f2fs_fiemap+0x55d/0x1ee0 fs/f2fs/data.c:1925\n\
  \ ioctl_fiemap fs/ioctl.c:220 [inline]\n do_vfs_ioctl+0x1c07/0x2e50 fs/ioctl.c:838\n\
  \ __do_sys_ioctl fs/ioctl.c:902 [inline]\n __se_sys_ioctl+0x81/0x170 fs/ioctl.c:890\n\
  \ do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n do_syscall_64+0xf5/0x240\
  \ arch/x86/entry/common.c:83\n entry_SYSCALL_64_after_hwframe+0x77/0x7f\n\nThe root\
  \ cause is we missed to do sanity check on i_xattr_nid during\nf2fs_iget(), so that\
  \ in fiemap() path, current_nat_addr() will access\nnat_bitmap w/ offset from invalid\
  \ i_xattr_nid, result in triggering\nkasan bug report, fix it.\n\nReported-and-tested-by:\
  \ syzbot+3694e283cf5c40df6d14@syzkaller.appspotmail.com\nCloses: https://lore.kernel.org/linux-f2fs-devel/00000000000094036c0616e72a1d@google.com\n\
  Signed-off-by: Chao Yu <chao@kernel.org>\nSigned-off-by: Jaegeuk Kim <jaegeuk@kernel.org>\n"
submodule:
- fs/f2fs
hunk_count: 1
covered_count: 0
