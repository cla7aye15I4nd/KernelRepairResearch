id: adec8406ad17413d4c06
bug_link: https://syzkaller.appspot.com/bug?extid=adec8406ad17413d4c06
title: WARNING in btrfs_free_reserved_data_space_noquota
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: f63e1164b90b385cd832ff0fdfcfa76c3cc15436
fix_commit: 9e65bfca24cf1d77e4a5c7a170db5867377b3fe7
datetime: '2023-12-06T22:32:46+01:00'
fix_commit_message: 'btrfs: fix qgroup_free_reserved_data int overflow


  The reserved data counter and input parameter is a u64, but we

  inadvertently accumulate it in an int. Overflowing that int results in

  freeing the wrong amount of data and breaking reserve accounting.


  Unfortunately, this overflow rot spreads from there, as the qgroup

  release/free functions rely on returning an int to take advantage of

  negative values for error codes.


  Therefore, the full fix is to return the "released" or "freed" amount by

  a u64 argument and to return 0 or negative error code via the return

  value.


  Most of the call sites simply ignore the return value, though some

  of them handle the error and count the returned bytes. Change all of

  them accordingly.


  CC: stable@vger.kernel.org # 6.1+

  Reviewed-by: Qu Wenruo <wqu@suse.com>

  Signed-off-by: Boris Burkov <boris@bur.io>

  Reviewed-by: David Sterba <dsterba@suse.com>

  Signed-off-by: David Sterba <dsterba@suse.com>

  '
submodule:
- fs/btrfs
hunk_count: 19
covered_count: 1
