id: 5af9a90dad568aa9f611
bug_link: https://syzkaller.appspot.com/bug?extid=5af9a90dad568aa9f611
title: 'KASAN: slab-out-of-bounds Read in __nla_put_nohdr'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 42c9bdae2366072aa7c4d680c429fcdec22b44f2
fix_commit: 61678d28d4a45ef376f5d02a839cc37509ae9281
datetime: '2020-01-23T21:34:42+01:00'
fix_commit_message: 'net_sched: fix datalen for ematch


  syzbot reported an out-of-bound access in em_nbyte. As initially

  analyzed by Eric, this is because em_nbyte sets its own em->datalen

  in em_nbyte_change() other than the one specified by user, but this

  value gets overwritten later by its caller tcf_em_validate().

  We should leave em->datalen untouched to respect their choices.


  I audit all the in-tree ematch users, all of those implement

  ->change() set em->datalen, so we can just avoid setting it twice

  in this case.


  Reported-and-tested-by: syzbot+5af9a90dad568aa9f611@syzkaller.appspotmail.com

  Reported-by: syzbot+2f07903a5b05e7f36410@syzkaller.appspotmail.com

  Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")

  Cc: Eric Dumazet <eric.dumazet@gmail.com>

  Signed-off-by: Cong Wang <xiyou.wangcong@gmail.com>

  Reviewed-by: Eric Dumazet <edumazet@google.com>

  Signed-off-by: David S. Miller <davem@davemloft.net>

  '
submodule:
- net/sched
hunk_count: 1
covered_count: 1
