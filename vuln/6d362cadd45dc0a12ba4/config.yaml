id: 6d362cadd45dc0a12ba4
bug_link: https://syzkaller.appspot.com/bug?extid=6d362cadd45dc0a12ba4
title: WARNING in adjust_ptr_min_max_vals
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: f37a8cb84cce18762e8f86a70bd6a49a66ab964c
fix_commit: 6f16101e6a8b4324c36e58a29d9e0dbb287cdedb
datetime: '2018-01-17T16:23:17-08:00'
fix_commit_message: "bpf: mark dst unknown on inconsistent {s, u}bounds adjustments\n\
  \nsyzkaller generated a BPF proglet and triggered a warning with\nthe following:\n\
  \n  0: (b7) r0 = 0\n  1: (d5) if r0 s<= 0x0 goto pc+0\n   R0=inv0 R1=ctx(id=0,off=0,imm=0)\
  \ R10=fp0\n  2: (1f) r0 -= r1\n   R0=inv0 R1=ctx(id=0,off=0,imm=0) R10=fp0\n  verifier\
  \ internal error: known but bad sbounds\n\nWhat happens is that in the first insn,\
  \ r0's min/max value\nare both 0 due to the immediate assignment, later in the jsle\n\
  test the bounds are updated for the min value in the false\npath, meaning, they\
  \ yield smin_val = 1, smax_val = 0, and when\nctx pointer is subtracted from r0,\
  \ verifier bails out with the\ninternal error and throwing a WARN since smin_val\
  \ != smax_val\nfor the known constant.\n\nFor min_val > max_val scenario it means\
  \ that reg_set_min_max()\nand reg_set_min_max_inv() (which both refine existing\
  \ bounds)\ndemonstrated that such branch cannot be taken at runtime.\n\nIn above\
  \ scenario for the case where it will be taken, the\nexisting [0, 0] bounds are\
  \ kept intact. Meaning, the rejection\nis not due to a verifier internal error,\
  \ and therefore the\nWARN() is not necessary either.\n\nWe could just reject such\
  \ cases in adjust_{ptr,scalar}_min_max_vals()\nwhen either known scalars have smin_val\
  \ != smax_val or\numin_val != umax_val or any scalar reg with bounds\nsmin_val >\
  \ smax_val or umin_val > umax_val. However, there\nmay be a small risk of breakage\
  \ of buggy programs, so handle\nthis more gracefully and in adjust_{ptr,scalar}_min_max_vals()\n\
  just taint the dst reg as unknown scalar when we see ops with\nsuch kind of src\
  \ reg.\n\nReported-by: syzbot+6d362cadd45dc0a12ba4@syzkaller.appspotmail.com\nSigned-off-by:\
  \ Daniel Borkmann <daniel@iogearbox.net>\nSigned-off-by: Alexei Starovoitov <ast@kernel.org>\n"
submodule:
- kernel/bpf
- tools/testing/selftests/bpf
hunk_count: 4
covered_count: 1
