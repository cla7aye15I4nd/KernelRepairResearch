id: c6aadfbde93979999512
bug_link: https://syzkaller.appspot.com/bug?extid=c6aadfbde93979999512
title: 'INFO: task hung in walk_component (2)'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: fe07bfda2fb9cdef8a4d4008a409bb02f35f1bd8
fix_commit: 775c5033a0d164622d9d10dd0f0a5531639ed3ed
datetime: '2021-03-04T13:36:46+01:00'
fix_commit_message: 'fuse: fix live lock in fuse_iget()


  Commit 5d069dbe8aaf ("fuse: fix bad inode") replaced make_bad_inode()

  in fuse_iget() with a private implementation fuse_make_bad().


  The private implementation fails to remove the bad inode from inode

  cache, so the retry loop with iget5_locked() finds the same bad inode

  and marks it bad forever.


  kmsg snip:


  [ ] rcu: INFO: rcu_sched self-detected stall on CPU

  ...

  [ ]  ? bit_wait_io+0x50/0x50

  [ ]  ? fuse_init_file_inode+0x70/0x70

  [ ]  ? find_inode.isra.32+0x60/0xb0

  [ ]  ? fuse_init_file_inode+0x70/0x70

  [ ]  ilookup5_nowait+0x65/0x90

  [ ]  ? fuse_init_file_inode+0x70/0x70

  [ ]  ilookup5.part.36+0x2e/0x80

  [ ]  ? fuse_init_file_inode+0x70/0x70

  [ ]  ? fuse_inode_eq+0x20/0x20

  [ ]  iget5_locked+0x21/0x80

  [ ]  ? fuse_inode_eq+0x20/0x20

  [ ]  fuse_iget+0x96/0x1b0


  Fixes: 5d069dbe8aaf ("fuse: fix bad inode")

  Cc: stable@vger.kernel.org # 5.10+

  Signed-off-by: Amir Goldstein <amir73il@gmail.com>

  Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>

  '
submodule:
- fs/fuse
hunk_count: 1
covered_count: 0
