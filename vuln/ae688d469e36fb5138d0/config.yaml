id: ae688d469e36fb5138d0
bug_link: https://syzkaller.appspot.com/bug?extid=ae688d469e36fb5138d0
title: 'BUG: unable to handle kernel paging request in do_split'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 83f4414b8f84249d538905825b088ff3ae555652
fix_commit: 50ea741def587a64e08879ce6c6a30131f7111e7
datetime: '2024-07-10T23:25:12-04:00'
fix_commit_message: "ext4: check dot and dotdot of dx_root before making dir indexed\n\
  \nSyzbot reports a issue as follows:\n============================================\n\
  BUG: unable to handle page fault for address: ffffed11022e24fe\nPGD 23ffee067 P4D\
  \ 23ffee067 PUD 0\nOops: Oops: 0000 [#1] PREEMPT SMP KASAN PTI\nCPU: 0 PID: 5079\
  \ Comm: syz-executor306 Not tainted 6.10.0-rc5-g55027e689933 #0\nCall Trace:\n <TASK>\n\
  \ make_indexed_dir+0xdaf/0x13c0 fs/ext4/namei.c:2341\n ext4_add_entry+0x222a/0x25d0\
  \ fs/ext4/namei.c:2451\n ext4_rename fs/ext4/namei.c:3936 [inline]\n ext4_rename2+0x26e5/0x4370\
  \ fs/ext4/namei.c:4214\n[...]\n============================================\n\n\
  The immediate cause of this problem is that there is only one valid dentry\nfor\
  \ the block to be split during do_split, so split==0 results in out of\nbounds accesses\
  \ to the map triggering the issue.\n\n    do_split\n      unsigned split\n     \
  \ dx_make_map\n       count = 1\n      split = count/2 = 0;\n      continued = hash2\
  \ == map[split - 1].hash;\n       ---> map[4294967295]\n\nThe maximum length of\
  \ a filename is 255 and the minimum block size is 1024,\nso it is always guaranteed\
  \ that the number of entries is greater than or\nequal to 2 when do_split() is called.\n\
  \nBut syzbot's crafted image has no dot and dotdot in dir, and the dentry\ndistribution\
  \ in dirblock is as follows:\n\n  bus     dentry1          hole           dentry2\
  \           free\n|xx--|xx-------------|...............|xx-------------|...............|\n\
  0   12 (8+248)=256  268     256     524 (8+256)=264 788     236     1024\n\nSo when\
  \ renaming dentry1 increases its name_len length by 1, neither hole\nnor free is\
  \ sufficient to hold the new dentry, and make_indexed_dir() is\ncalled.\n\nIn make_indexed_dir()\
  \ it is assumed that the first two entries of the\ndirblock must be dot and dotdot,\
  \ so bus and dentry1 are left in dx_root\nbecause they are treated as dot and dotdot,\
  \ and only dentry2 is moved\nto the new leaf block. That's why count is equal to\
  \ 1.\n\nTherefore add the ext4_check_dx_root() helper function to add more sanity\n\
  checks to dot and dotdot before starting the conversion to avoid the above\nissue.\n\
  \nReported-by: syzbot+ae688d469e36fb5138d0@syzkaller.appspotmail.com\nCloses: https://syzkaller.appspot.com/bug?extid=ae688d469e36fb5138d0\n\
  Fixes: ac27a0ec112a (\"[PATCH] ext4: initial copy of files from ext3\")\nCc: stable@kernel.org\n\
  Signed-off-by: Baokun Li <libaokun1@huawei.com>\nReviewed-by: Jan Kara <jack@suse.cz>\n\
  Link: https://patch.msgid.link/20240702132349.2600605-2-libaokun@huaweicloud.com\n\
  Signed-off-by: Theodore Ts'o <tytso@mit.edu>\n"
submodule:
- fs/ext4
hunk_count: 2
covered_count: 0
