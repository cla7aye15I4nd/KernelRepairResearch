id: 62cbf263225ae13ff153
bug_link: https://syzkaller.appspot.com/bug?extid=62cbf263225ae13ff153
title: WARNING in __ip6_append_data
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 5baa0433a15eadd729625004c37463acb982eca7
fix_commit: 9d4c75800f61e5d75c1659ba201b6c0c7ead3070
datetime: '2023-10-01T18:19:27+01:00'
fix_commit_message: "ipv4, ipv6: Fix handling of transhdrlen in __ip{,6}_append_data()\n\
  \nIncluding the transhdrlen in length is a problem when the packet is\npartially\
  \ filled (e.g. something like send(MSG_MORE) happened previously)\nwhen appending\
  \ to an IPv4 or IPv6 packet as we don't want to repeat the\ntransport header or\
  \ account for it twice.  This can happen under some\ncircumstances, such as splicing\
  \ into an L2TP socket.\n\nThe symptom observed is a warning in __ip6_append_data():\n\
  \n    WARNING: CPU: 1 PID: 5042 at net/ipv6/ip6_output.c:1800 __ip6_append_data.isra.0+0x1be8/0x47f0\
  \ net/ipv6/ip6_output.c:1800\n\nthat occurs when MSG_SPLICE_PAGES is used to append\
  \ more data to an already\npartially occupied skbuff.  The warning occurs when 'copy'\
  \ is larger than\nthe amount of data in the message iterator.  This is because the\
  \ requested\nlength includes the transport header length when it shouldn't.  This\
  \ can be\ntriggered by, for example:\n\n        sfd = socket(AF_INET6, SOCK_DGRAM,\
  \ IPPROTO_L2TP);\n        bind(sfd, ...); // ::1\n        connect(sfd, ...); //\
  \ ::1 port 7\n        send(sfd, buffer, 4100, MSG_MORE);\n        sendfile(sfd,\
  \ dfd, NULL, 1024);\n\nFix this by only adding transhdrlen into the length if the\
  \ write queue is\nempty in l2tp_ip6_sendmsg(), analogously to how UDP does things.\n\
  \nl2tp_ip_sendmsg() looks like it won't suffer from this problem as it builds\n\
  the UDP packet itself.\n\nFixes: a32e0eec7042 (\"l2tp: introduce L2TPv3 IP encapsulation\
  \ support for IPv6\")\nReported-by: syzbot+62cbf263225ae13ff153@syzkaller.appspotmail.com\n\
  Link: https://lore.kernel.org/r/0000000000001c12b30605378ce8@google.com/\nSuggested-by:\
  \ Willem de Bruijn <willemdebruijn.kernel@gmail.com>\nSigned-off-by: David Howells\
  \ <dhowells@redhat.com>\ncc: Eric Dumazet <edumazet@google.com>\ncc: Willem de Bruijn\
  \ <willemdebruijn.kernel@gmail.com>\ncc: \"David S. Miller\" <davem@davemloft.net>\n\
  cc: David Ahern <dsahern@kernel.org>\ncc: Paolo Abeni <pabeni@redhat.com>\ncc: Jakub\
  \ Kicinski <kuba@kernel.org>\ncc: netdev@vger.kernel.org\ncc: bpf@vger.kernel.org\n\
  cc: syzkaller-bugs@googlegroups.com\nReviewed-by: Eric Dumazet <edumazet@google.com>\n\
  Signed-off-by: David S. Miller <davem@davemloft.net>\n"
submodule:
- net/l2tp
hunk_count: 2
covered_count: 1
