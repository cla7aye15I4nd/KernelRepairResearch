id: 5ad567a418794b9b5983
bug_link: https://syzkaller.appspot.com/bug?extid=5ad567a418794b9b5983
title: 'KASAN: vmalloc-out-of-bounds Write in ringbuf_map_alloc'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: b7892f7d5cb2b8187c603dd8ea3a7c44059ccfc2
fix_commit: b293dcc473d22a62dc6d78de2b15e4f49515db56
datetime: '2022-02-02T23:15:24-08:00'
fix_commit_message: "bpf: Use VM_MAP instead of VM_ALLOC for ringbuf\n\nAfter commit\
  \ 2fd3fb0be1d1 (\"kasan, vmalloc: unpoison VM_ALLOC pages\nafter mapping\"), non-VM_ALLOC\
  \ mappings will be marked as accessible\nin __get_vm_area_node() when KASAN is enabled.\
  \ But now the flag for\nringbuf area is VM_ALLOC, so KASAN will complain out-of-bound\
  \ access\nafter vmap() returns. Because the ringbuf area is created by mapping\n\
  allocated pages, so use VM_MAP instead.\n\nAfter the change, info in /proc/vmallocinfo\
  \ also changes from\n  [start]-[end]   24576 ringbuf_map_alloc+0x171/0x290 vmalloc\
  \ user\nto\n  [start]-[end]   24576 ringbuf_map_alloc+0x171/0x290 vmap user\n\n\
  Fixes: 457f44363a88 (\"bpf: Implement BPF ring buffer and verifier support for it\"\
  )\nReported-by: syzbot+5ad567a418794b9b5983@syzkaller.appspotmail.com\nSigned-off-by:\
  \ Hou Tao <houtao1@huawei.com>\nSigned-off-by: Andrii Nakryiko <andrii@kernel.org>\n\
  Link: https://lore.kernel.org/bpf/20220202060158.6260-1-houtao1@huawei.com\n"
submodule:
- kernel/bpf
hunk_count: 1
covered_count: 1
