id: 82112403ace4cbd780d8
bug_link: https://syzkaller.appspot.com/bug?extid=82112403ace4cbd780d8
title: WARNING in vmx_queue_exception
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: bef9a701f3ebfb60da259b04778d24128505a96c
fix_commit: fc4fad79fc3d8841562e2a85808079da5b4835f6
datetime: '2022-01-19T12:12:25-05:00'
fix_commit_message: "KVM: VMX: Reject KVM_RUN if emulation is required with pending\
  \ exception\n\nReject KVM_RUN if emulation is required (because VMX is running without\n\
  unrestricted guest) and an exception is pending, as KVM doesn't support\nemulating\
  \ exceptions except when emulating real mode via vm86.  The vCPU\nis hosed either\
  \ way, but letting KVM_RUN proceed triggers a WARN due to\nthe impossible condition.\
  \  Alternatively, the WARN could be removed, but\nthen userspace and/or KVM bugs\
  \ would result in the vCPU silently running\nin a bad state, which isn't very friendly\
  \ to users.\n\nOriginally, the bug was hit by syzkaller with a nested guest as that\n\
  doesn't require kvm_intel.unrestricted_guest=0.  That particular flavor\nis likely\
  \ fixed by commit cd0e615c49e5 (\"KVM: nVMX: Synthesize\nTRIPLE_FAULT for L2 if\
  \ emulation is required\"), but it's trivial to\ntrigger the WARN with a non-nested\
  \ guest, and userspace can likely force\nbad state via ioctls() for a nested guest\
  \ as well.\n\nChecking for the impossible condition needs to be deferred until KVM_RUN\n\
  because KVM can't force specific ordering between ioctls.  E.g. clearing\nexception.pending\
  \ in KVM_SET_SREGS doesn't prevent userspace from setting\nit in KVM_SET_VCPU_EVENTS,\
  \ and disallowing KVM_SET_VCPU_EVENTS with\nemulation_required would prevent userspace\
  \ from queuing an exception and\nthen stuffing sregs.  Note, if KVM were to try\
  \ and detect/prevent the\ncondition prior to KVM_RUN, handle_invalid_guest_state()\
  \ and/or\nhandle_emulation_failure() would need to be modified to clear the pending\n\
  exception prior to exiting to userspace.\n\n ------------[ cut here ]------------\n\
  \ WARNING: CPU: 6 PID: 137812 at arch/x86/kvm/vmx/vmx.c:1623 vmx_queue_exception+0x14f/0x160\
  \ [kvm_intel]\n CPU: 6 PID: 137812 Comm: vmx_invalid_nes Not tainted 5.15.2-7cc36c3e14ae-pop\
  \ #279\n Hardware name: ASUS Q87M-E/Q87M-E, BIOS 1102 03/03/2014\n RIP: 0010:vmx_queue_exception+0x14f/0x160\
  \ [kvm_intel]\n Code: <0f> 0b e9 fd fe ff ff 66 2e 0f 1f 84 00 00 00 00 00 0f 1f\
  \ 44 00 00\n RSP: 0018:ffffa45c83577d38 EFLAGS: 00010202\n RAX: 0000000000000003\
  \ RBX: 0000000080000006 RCX: 0000000000000006\n RDX: 0000000000000000 RSI: 0000000000010002\
  \ RDI: ffff9916af734000\n RBP: ffff9916af734000 R08: 0000000000000000 R09: 0000000000000000\n\
  \ R10: 0000000000000000 R11: 0000000000000001 R12: 0000000000000006\n R13: 0000000000000000\
  \ R14: ffff9916af734038 R15: 0000000000000000\n FS:  00007f1e1a47c740(0000) GS:ffff99188fb80000(0000)\
  \ knlGS:0000000000000000\n CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n CR2:\
  \ 00007f1e1a6a8008 CR3: 000000026f83b005 CR4: 00000000001726e0\n Call Trace:\n \
  \ kvm_arch_vcpu_ioctl_run+0x13a2/0x1f20 [kvm]\n  kvm_vcpu_ioctl+0x279/0x690 [kvm]\n\
  \  __x64_sys_ioctl+0x83/0xb0\n  do_syscall_64+0x3b/0xc0\n  entry_SYSCALL_64_after_hwframe+0x44/0xae\n\
  \nReported-by: syzbot+82112403ace4cbd780d8@syzkaller.appspotmail.com\nSigned-off-by:\
  \ Sean Christopherson <seanjc@google.com>\nMessage-Id: <20211228232437.1875318-2-seanjc@google.com>\n\
  Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>\n"
submodule:
- arch/x86/include/asm
- arch/x86/kvm
- arch/x86/kvm/svm
- arch/x86/kvm/vmx
hunk_count: 9
covered_count: 0
