id: 74db8b3087f293d3a13a
bug_link: https://syzkaller.appspot.com/bug?extid=74db8b3087f293d3a13a
title: 'KASAN: slab-use-after-free Read in nilfs_load_inode_block (2)'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: fac2650276eced3c94bcdbc21d0e5be637c1e582
fix_commit: f8654743a0e6909dc634cbfad6db6816f10f3399
datetime: '2023-08-04T13:03:43-07:00'
fix_commit_message: "nilfs2: fix use-after-free of nilfs_root in dirtying inodes via\
  \ iput\n\nDuring unmount process of nilfs2, nothing holds nilfs_root structure after\n\
  nilfs2 detaches its writer in nilfs_detach_log_writer().  Previously,\nnilfs_evict_inode()\
  \ could cause use-after-free read for nilfs_root if\ninodes are left in \"garbage_list\"\
  \ and released by nilfs_dispose_list at\nthe end of nilfs_detach_log_writer(), and\
  \ this bug was fixed by commit\n9b5a04ac3ad9 (\"nilfs2: fix use-after-free bug of\
  \ nilfs_root in\nnilfs_evict_inode()\").\n\nHowever, it turned out that there is\
  \ another possibility of UAF in the\ncall path where mark_inode_dirty_sync() is\
  \ called from iput():\n\nnilfs_detach_log_writer()\n  nilfs_dispose_list()\n   \
  \ iput()\n      mark_inode_dirty_sync()\n        __mark_inode_dirty()\n        \
  \  nilfs_dirty_inode()\n            __nilfs_mark_inode_dirty()\n              nilfs_load_inode_block()\
  \ --> causes UAF of nilfs_root struct\n\nThis can happen after commit 0ae45f63d4ef\
  \ (\"vfs: add support for a\nlazytime mount option\"), which changed iput() to call\n\
  mark_inode_dirty_sync() on its final reference if i_state has I_DIRTY_TIME\nflag\
  \ and i_nlink is non-zero.\n\nThis issue appears after commit 28a65b49eb53 (\"nilfs2:\
  \ do not write dirty\ndata after degenerating to read-only\") when using the syzbot\
  \ reproducer,\nbut the issue has potentially existed before.\n\nFix this issue by\
  \ adding a \"purging flag\" to the nilfs structure, setting\nthat flag while disposing\
  \ the \"garbage_list\" and checking it in\n__nilfs_mark_inode_dirty().\n\nUnlike\
  \ commit 9b5a04ac3ad9 (\"nilfs2: fix use-after-free bug of nilfs_root\nin nilfs_evict_inode()\"\
  ), this patch does not rely on ns_writer to\ndetermine whether to skip operations,\
  \ so as not to break recovery on\nmount.  The nilfs_salvage_orphan_logs routine\
  \ dirties the buffer of\nsalvaged data before attaching the log writer, so changing\n\
  __nilfs_mark_inode_dirty() to skip the operation when ns_writer is NULL\nwill cause\
  \ recovery write to fail.  The purpose of using the cleanup-only\nflag is to allow\
  \ for narrowing of such conditions.\n\nLink: https://lkml.kernel.org/r/20230728191318.33047-1-konishi.ryusuke@gmail.com\n\
  Signed-off-by: Ryusuke Konishi <konishi.ryusuke@gmail.com>\nReported-by: syzbot+74db8b3087f293d3a13a@syzkaller.appspotmail.com\n\
  Closes: https://lkml.kernel.org/r/000000000000b4e906060113fd63@google.com\nFixes:\
  \ 0ae45f63d4ef (\"vfs: add support for a lazytime mount option\")\nTested-by: Ryusuke\
  \ Konishi <konishi.ryusuke@gmail.com>\nCc: <stable@vger.kernel.org> # 4.0+\nSigned-off-by:\
  \ Andrew Morton <akpm@linux-foundation.org>\n"
submodule:
- fs/nilfs2
hunk_count: 5
covered_count: 3
