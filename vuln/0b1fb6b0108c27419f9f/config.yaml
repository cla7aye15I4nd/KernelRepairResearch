id: 0b1fb6b0108c27419f9f
bug_link: https://syzkaller.appspot.com/bug?extid=0b1fb6b0108c27419f9f
title: kernel BUG in btrfs_drop_extents
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 1742e1c90c3da344f3bb9b1f1309b3f47482756a
fix_commit: 162d053e15fe985f754ef495a96eb3db970c43ed
datetime: '2022-12-05T18:00:59+01:00'
fix_commit_message: 'btrfs: do not BUG_ON() on ENOMEM when dropping extent items for
  a range


  If we get -ENOMEM while dropping file extent items in a given range, at

  btrfs_drop_extents(), due to failure to allocate memory when attempting to

  increment the reference count for an extent or drop the reference count,

  we handle it with a BUG_ON(). This is excessive, instead we can simply

  abort the transaction and return the error to the caller. In fact most

  callers of btrfs_drop_extents(), directly or indirectly, already abort

  the transaction if btrfs_drop_extents() returns any error.


  Also, we already have error paths at btrfs_drop_extents() that may return

  -ENOMEM and in those cases we abort the transaction, like for example

  anything that changes the b+tree may return -ENOMEM due to a failure to

  allocate a new extent buffer when COWing an existing extent buffer, such

  as a call to btrfs_duplicate_item() for example.


  So replace the BUG_ON() calls with proper logic to abort the transaction

  and return the error.


  Reported-by: syzbot+0b1fb6b0108c27419f9f@syzkaller.appspotmail.com

  Link: https://lore.kernel.org/linux-btrfs/00000000000089773e05ee4b9cb4@google.com/

  CC: stable@vger.kernel.org # 5.4+

  Reviewed-by: Josef Bacik <josef@toxicpanda.com>

  Signed-off-by: Filipe Manana <fdmanana@suse.com>

  Reviewed-by: David Sterba <dsterba@suse.com>

  Signed-off-by: David Sterba <dsterba@suse.com>

  '
submodule:
- fs/btrfs
hunk_count: 2
covered_count: 1
