id: ace60642828c074eb913
bug_link: https://syzkaller.appspot.com/bug?extid=ace60642828c074eb913
title: possible deadlock in lock_system_sleep
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 520a552f19d55825108ab83da093084c9afb50e9
fix_commit: 52323ed1444ea5c2a5f1754ea0a2d9c8c216ccdf
datetime: '2025-03-03T13:29:21+01:00'
fix_commit_message: "PM: hibernate: Avoid deadlock in hibernate_compressor_param_set()\n\
  \nsyzbot reported a deadlock in lock_system_sleep() (see below).\n\nThe write operation\
  \ to \"/sys/module/hibernate/parameters/compressor\"\nconflicts with the registration\
  \ of ieee80211 device, resulting in a deadlock\nwhen attempting to acquire system_transition_mutex\
  \ under param_lock.\n\nTo avoid this deadlock, change hibernate_compressor_param_set()\
  \ to use\nmutex_trylock() for attempting to acquire system_transition_mutex and\n\
  return -EBUSY when it fails.\n\nTask flags need not be saved or adjusted before\
  \ calling\nmutex_trylock(&system_transition_mutex) because the caller is not going\n\
  to end up waiting for this mutex and if it runs concurrently with system\nsuspend\
  \ in progress, it will be frozen properly when it returns to user\nspace.\n\nsyzbot\
  \ report:\n\nsyz-executor895/5833 is trying to acquire lock:\nffffffff8e0828c8 (system_transition_mutex){+.+.}-{4:4},\
  \ at: lock_system_sleep+0x87/0xa0 kernel/power/main.c:56\n\nbut task is already\
  \ holding lock:\nffffffff8e07dc68 (param_lock){+.+.}-{4:4}, at: kernel_param_lock\
  \ kernel/params.c:607 [inline]\nffffffff8e07dc68 (param_lock){+.+.}-{4:4}, at: param_attr_store+0xe6/0x300\
  \ kernel/params.c:586\n\nwhich lock already depends on the new lock.\n\nthe existing\
  \ dependency chain (in reverse order) is:\n\n-> #3 (param_lock){+.+.}-{4:4}:\n \
  \      __mutex_lock_common kernel/locking/mutex.c:585 [inline]\n       __mutex_lock+0x19b/0xb10\
  \ kernel/locking/mutex.c:730\n       ieee80211_rate_control_ops_get net/mac80211/rate.c:220\
  \ [inline]\n       rate_control_alloc net/mac80211/rate.c:266 [inline]\n       ieee80211_init_rate_ctrl_alg+0x18d/0x6b0\
  \ net/mac80211/rate.c:1015\n       ieee80211_register_hw+0x20cd/0x4060 net/mac80211/main.c:1531\n\
  \       mac80211_hwsim_new_radio+0x304e/0x54e0 drivers/net/wireless/virtual/mac80211_hwsim.c:5558\n\
  \       init_mac80211_hwsim+0x432/0x8c0 drivers/net/wireless/virtual/mac80211_hwsim.c:6910\n\
  \       do_one_initcall+0x128/0x700 init/main.c:1257\n       do_initcall_level init/main.c:1319\
  \ [inline]\n       do_initcalls init/main.c:1335 [inline]\n       do_basic_setup\
  \ init/main.c:1354 [inline]\n       kernel_init_freeable+0x5c7/0x900 init/main.c:1568\n\
  \       kernel_init+0x1c/0x2b0 init/main.c:1457\n       ret_from_fork+0x45/0x80\
  \ arch/x86/kernel/process.c:148\n       ret_from_fork_asm+0x1a/0x30 arch/x86/entry/entry_64.S:244\n\
  \n-> #2 (rtnl_mutex){+.+.}-{4:4}:\n       __mutex_lock_common kernel/locking/mutex.c:585\
  \ [inline]\n       __mutex_lock+0x19b/0xb10 kernel/locking/mutex.c:730\n       wg_pm_notification\
  \ drivers/net/wireguard/device.c:80 [inline]\n       wg_pm_notification+0x49/0x180\
  \ drivers/net/wireguard/device.c:64\n       notifier_call_chain+0xb7/0x410 kernel/notifier.c:85\n\
  \       notifier_call_chain_robust kernel/notifier.c:120 [inline]\n       blocking_notifier_call_chain_robust\
  \ kernel/notifier.c:345 [inline]\n       blocking_notifier_call_chain_robust+0xc9/0x170\
  \ kernel/notifier.c:333\n       pm_notifier_call_chain_robust+0x27/0x60 kernel/power/main.c:102\n\
  \       snapshot_open+0x189/0x2b0 kernel/power/user.c:77\n       misc_open+0x35a/0x420\
  \ drivers/char/misc.c:179\n       chrdev_open+0x237/0x6a0 fs/char_dev.c:414\n  \
  \     do_dentry_open+0x735/0x1c40 fs/open.c:956\n       vfs_open+0x82/0x3f0 fs/open.c:1086\n\
  \       do_open fs/namei.c:3830 [inline]\n       path_openat+0x1e88/0x2d80 fs/namei.c:3989\n\
  \       do_filp_open+0x20c/0x470 fs/namei.c:4016\n       do_sys_openat2+0x17a/0x1e0\
  \ fs/open.c:1428\n       do_sys_open fs/open.c:1443 [inline]\n       __do_sys_openat\
  \ fs/open.c:1459 [inline]\n       __se_sys_openat fs/open.c:1454 [inline]\n    \
  \   __x64_sys_openat+0x175/0x210 fs/open.c:1454\n       do_syscall_x64 arch/x86/entry/common.c:52\
  \ [inline]\n       do_syscall_64+0xcd/0x250 arch/x86/entry/common.c:83\n       entry_SYSCALL_64_after_hwframe+0x77/0x7f\n\
  \n-> #1 ((pm_chain_head).rwsem){++++}-{4:4}:\n       down_read+0x9a/0x330 kernel/locking/rwsem.c:1524\n\
  \       blocking_notifier_call_chain_robust kernel/notifier.c:344 [inline]\n   \
  \    blocking_notifier_call_chain_robust+0xa9/0x170 kernel/notifier.c:333\n    \
  \   pm_notifier_call_chain_robust+0x27/0x60 kernel/power/main.c:102\n       snapshot_open+0x189/0x2b0\
  \ kernel/power/user.c:77\n       misc_open+0x35a/0x420 drivers/char/misc.c:179\n\
  \       chrdev_open+0x237/0x6a0 fs/char_dev.c:414\n       do_dentry_open+0x735/0x1c40\
  \ fs/open.c:956\n       vfs_open+0x82/0x3f0 fs/open.c:1086\n       do_open fs/namei.c:3830\
  \ [inline]\n       path_openat+0x1e88/0x2d80 fs/namei.c:3989\n       do_filp_open+0x20c/0x470\
  \ fs/namei.c:4016\n       do_sys_openat2+0x17a/0x1e0 fs/open.c:1428\n       do_sys_open\
  \ fs/open.c:1443 [inline]\n       __do_sys_openat fs/open.c:1459 [inline]\n    \
  \   __se_sys_openat fs/open.c:1454 [inline]\n       __x64_sys_openat+0x175/0x210\
  \ fs/open.c:1454\n       do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n  \
  \     do_syscall_64+0xcd/0x250 arch/x86/entry/common.c:83\n       entry_SYSCALL_64_after_hwframe+0x77/0x7f\n\
  \n-> #0 (system_transition_mutex){+.+.}-{4:4}:\n       check_prev_add kernel/locking/lockdep.c:3163\
  \ [inline]\n       check_prevs_add kernel/locking/lockdep.c:3282 [inline]\n    \
  \   validate_chain kernel/locking/lockdep.c:3906 [inline]\n       __lock_acquire+0x249e/0x3c40\
  \ kernel/locking/lockdep.c:5228\n       lock_acquire.part.0+0x11b/0x380 kernel/locking/lockdep.c:5851\n\
  \       __mutex_lock_common kernel/locking/mutex.c:585 [inline]\n       __mutex_lock+0x19b/0xb10\
  \ kernel/locking/mutex.c:730\n       lock_system_sleep+0x87/0xa0 kernel/power/main.c:56\n\
  \       hibernate_compressor_param_set+0x1c/0x210 kernel/power/hibernate.c:1452\n\
  \       param_attr_store+0x18f/0x300 kernel/params.c:588\n       module_attr_store+0x55/0x80\
  \ kernel/params.c:924\n       sysfs_kf_write+0x117/0x170 fs/sysfs/file.c:139\n \
  \      kernfs_fop_write_iter+0x33d/0x500 fs/kernfs/file.c:334\n       new_sync_write\
  \ fs/read_write.c:586 [inline]\n       vfs_write+0x5ae/0x1150 fs/read_write.c:679\n\
  \       ksys_write+0x12b/0x250 fs/read_write.c:731\n       do_syscall_x64 arch/x86/entry/common.c:52\
  \ [inline]\n       do_syscall_64+0xcd/0x250 arch/x86/entry/common.c:83\n       entry_SYSCALL_64_after_hwframe+0x77/0x7f\n\
  \nother info that might help us debug this:\n\nChain exists of:\n  system_transition_mutex\
  \ --> rtnl_mutex --> param_lock\n\n Possible unsafe locking scenario:\n\n      \
  \ CPU0                    CPU1\n       ----                    ----\n  lock(param_lock);\n\
  \                               lock(rtnl_mutex);\n                            \
  \   lock(param_lock);\n  lock(system_transition_mutex);\n\n *** DEADLOCK ***\n\n\
  Reported-by: syzbot+ace60642828c074eb913@syzkaller.appspotmail.com\nCloses: https://syzkaller.appspot.com/bug?extid=ace60642828c074eb913\n\
  Signed-off-by: Lizhi Xu <lizhi.xu@windriver.com>\nLink: https://patch.msgid.link/20250224013139.3994500-1-lizhi.xu@windriver.com\n\
  [ rjw: New subject matching the code changes, changelog edits ]\nSigned-off-by:\
  \ Rafael J. Wysocki <rafael.j.wysocki@intel.com>\n"
submodule:
- kernel/power
hunk_count: 2
covered_count: 2
