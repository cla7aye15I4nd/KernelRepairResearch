id: 56f7cd1abe4b8e475180
bug_link: https://syzkaller.appspot.com/bug?extid=56f7cd1abe4b8e475180
title: 'UBSAN: shift-out-of-bounds in ocfs2_fill_super (2)'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 2026559a6c4ce34db117d2db8f710fe2a9420d5a
fix_commit: 23aab037106d46e6168ce1214a958ce9bf317f2e
datetime: '2024-11-11T17:20:23-08:00'
fix_commit_message: "ocfs2: fix UBSAN warning in ocfs2_verify_volume()\n\nSyzbot has\
  \ reported the following splat triggered by UBSAN:\n\nUBSAN: shift-out-of-bounds\
  \ in fs/ocfs2/super.c:2336:10\nshift exponent 32768 is too large for 32-bit type\
  \ 'int'\nCPU: 2 UID: 0 PID: 5255 Comm: repro Not tainted 6.12.0-rc4-syzkaller-00047-gc2ee9f594da8\
  \ #0\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.16.3-3.fc41\
  \ 04/01/2014\nCall Trace:\n <TASK>\n dump_stack_lvl+0x241/0x360\n ? __pfx_dump_stack_lvl+0x10/0x10\n\
  \ ? __pfx__printk+0x10/0x10\n ? __asan_memset+0x23/0x50\n ? lockdep_init_map_type+0xa1/0x910\n\
  \ __ubsan_handle_shift_out_of_bounds+0x3c8/0x420\n ocfs2_fill_super+0xf9c/0x5750\n\
  \ ? __pfx_ocfs2_fill_super+0x10/0x10\n ? __pfx_validate_chain+0x10/0x10\n ? __pfx_validate_chain+0x10/0x10\n\
  \ ? validate_chain+0x11e/0x5920\n ? __lock_acquire+0x1384/0x2050\n ? __pfx_validate_chain+0x10/0x10\n\
  \ ? string+0x26a/0x2b0\n ? widen_string+0x3a/0x310\n ? string+0x26a/0x2b0\n ? bdev_name+0x2b1/0x3c0\n\
  \ ? pointer+0x703/0x1210\n ? __pfx_pointer+0x10/0x10\n ? __pfx_format_decode+0x10/0x10\n\
  \ ? __lock_acquire+0x1384/0x2050\n ? vsnprintf+0x1ccd/0x1da0\n ? snprintf+0xda/0x120\n\
  \ ? __pfx_lock_release+0x10/0x10\n ? do_raw_spin_lock+0x14f/0x370\n ? __pfx_snprintf+0x10/0x10\n\
  \ ? set_blocksize+0x1f9/0x360\n ? sb_set_blocksize+0x98/0xf0\n ? setup_bdev_super+0x4e6/0x5d0\n\
  \ mount_bdev+0x20c/0x2d0\n ? __pfx_ocfs2_fill_super+0x10/0x10\n ? __pfx_mount_bdev+0x10/0x10\n\
  \ ? vfs_parse_fs_string+0x190/0x230\n ? __pfx_vfs_parse_fs_string+0x10/0x10\n legacy_get_tree+0xf0/0x190\n\
  \ ? __pfx_ocfs2_mount+0x10/0x10\n vfs_get_tree+0x92/0x2b0\n do_new_mount+0x2be/0xb40\n\
  \ ? __pfx_do_new_mount+0x10/0x10\n __se_sys_mount+0x2d6/0x3c0\n ? __pfx___se_sys_mount+0x10/0x10\n\
  \ ? do_syscall_64+0x100/0x230\n ? __x64_sys_mount+0x20/0xc0\n do_syscall_64+0xf3/0x230\n\
  \ entry_SYSCALL_64_after_hwframe+0x77/0x7f\nRIP: 0033:0x7f37cae96fda\nCode: 48 8b\
  \ 0d 51 ce 0c 00 f7 d8 64 89 01 48 83 c8 ff c3 66 2e 0f 1f 84 00 00 00 00 00 0f\
  \ 1f 44 00 00 49 89 ca b8 a5 00 00 00 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 8b 0d\
  \ 1e ce 0c 00 f7 d8 64 89 01 48\nRSP: 002b:00007fff6c1aa228 EFLAGS: 00000206 ORIG_RAX:\
  \ 00000000000000a5\nRAX: ffffffffffffffda RBX: 00007fff6c1aa240 RCX: 00007f37cae96fda\n\
  RDX: 00000000200002c0 RSI: 0000000020000040 RDI: 00007fff6c1aa240\nRBP: 0000000000000004\
  \ R08: 00007fff6c1aa280 R09: 0000000000000000\nR10: 00000000000008c0 R11: 0000000000000206\
  \ R12: 00000000000008c0\nR13: 00007fff6c1aa280 R14: 0000000000000003 R15: 0000000001000000\n\
  \ </TASK>\n\nFor a really damaged superblock, the value of 'i_super.s_blocksize_bits'\n\
  may exceed the maximum possible shift for an underlying 'int'.  So add an\nextra\
  \ check whether the aforementioned field represents the valid block\nsize, which\
  \ is 512 bytes, 1K, 2K, or 4K.\n\nLink: https://lkml.kernel.org/r/20241106092100.2661330-1-dmantipov@yandex.ru\n\
  Fixes: ccd979bdbce9 (\"[PATCH] OCFS2: The Second Oracle Cluster Filesystem\")\n\
  Signed-off-by: Dmitry Antipov <dmantipov@yandex.ru>\nReported-by: syzbot+56f7cd1abe4b8e475180@syzkaller.appspotmail.com\n\
  Closes: https://syzkaller.appspot.com/bug?extid=56f7cd1abe4b8e475180\nReviewed-by:\
  \ Joseph Qi <joseph.qi@linux.alibaba.com>\nCc: Mark Fasheh <mark@fasheh.com>\nCc:\
  \ Joel Becker <jlbec@evilplan.org>\nCc: Junxiao Bi <junxiao.bi@oracle.com>\nCc:\
  \ Changwei Ge <gechangwei@live.cn>\nCc: Jun Piao <piaojun@huawei.com>\nCc: <stable@vger.kernel.org>\n\
  Signed-off-by: Andrew Morton <akpm@linux-foundation.org>\n"
submodule:
- fs/ocfs2
hunk_count: 2
covered_count: 2
