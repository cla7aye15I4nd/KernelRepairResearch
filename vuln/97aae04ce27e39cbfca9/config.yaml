id: 97aae04ce27e39cbfca9
bug_link: https://syzkaller.appspot.com/bug?extid=97aae04ce27e39cbfca9
title: 'INFO: rcu detected stall in snd_seq_write'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 4b4e0e32e4b09274dbc9d173016c1a026f44608c
fix_commit: ede34f397ddb063b145b9e7d79c6026f819ded13
datetime: '2019-07-16T09:41:41+02:00'
fix_commit_message: 'ALSA: seq: Break too long mutex context in the write loop


  The fix for the racy writes and ioctls to sequencer widened the

  application of client->ioctl_mutex to the whole write loop.  Although

  it does unlock/relock for the lengthy operation like the event dup,

  the loop keeps the ioctl_mutex for the whole time in other

  situations.  This may take quite long time if the user-space would

  give a huge buffer, and this is a likely cause of some weird behavior

  spotted by syzcaller fuzzer.


  This patch puts a simple workaround, just adding a mutex break in the

  loop when a large number of events have been processed.  This

  shouldn''t hit any performance drop because the threshold is set high

  enough for usual operations.


  Fixes: 7bd800915677 ("ALSA: seq: More protection for concurrent write and ioctl
  races")

  Reported-by: syzbot+97aae04ce27e39cbfca9@syzkaller.appspotmail.com

  Reported-by: syzbot+4c595632b98bb8ffcc66@syzkaller.appspotmail.com

  Cc: <stable@vger.kernel.org>

  Signed-off-by: Takashi Iwai <tiwai@suse.de>

  '
submodule:
- sound/core/seq
hunk_count: 3
covered_count: 2
