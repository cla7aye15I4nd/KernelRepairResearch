id: 82650a4e0ed38f218363
bug_link: https://syzkaller.appspot.com/bug?extid=82650a4e0ed38f218363
title: 'KASAN: use-after-free Read in btrfs_scan_one_device (2)'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: bf7bd725b022cca0195aa81a378a82b1e731a4a3
fix_commit: 79c9234ba596e903907de20573fd4bcc85315b06
datetime: '2022-03-14T13:13:54+01:00'
fix_commit_message: "btrfs: don't access possibly stale fs_info data in device_list_add\n\
  \nSyzbot reported a possible use-after-free in printing information\nin device_list_add.\n\
  \nVery similar with the bug fixed by commit 0697d9a61099 (\"btrfs: don't\naccess\
  \ possibly stale fs_info data for printing duplicate device\"),\nbut this time the\
  \ use occurs in btrfs_info_in_rcu.\n\n  Call Trace:\n   kasan_report.cold+0x83/0xdf\
  \ mm/kasan/report.c:459\n   btrfs_printk+0x395/0x425 fs/btrfs/super.c:244\n   device_list_add.cold+0xd7/0x2ed\
  \ fs/btrfs/volumes.c:957\n   btrfs_scan_one_device+0x4c7/0x5c0 fs/btrfs/volumes.c:1387\n\
  \   btrfs_control_ioctl+0x12a/0x2d0 fs/btrfs/super.c:2409\n   vfs_ioctl fs/ioctl.c:51\
  \ [inline]\n   __do_sys_ioctl fs/ioctl.c:874 [inline]\n   __se_sys_ioctl fs/ioctl.c:860\
  \ [inline]\n   __x64_sys_ioctl+0x193/0x200 fs/ioctl.c:860\n   do_syscall_x64 arch/x86/entry/common.c:50\
  \ [inline]\n   do_syscall_64+0x35/0xb0 arch/x86/entry/common.c:80\n   entry_SYSCALL_64_after_hwframe+0x44/0xae\n\
  \nFix this by modifying device->fs_info to NULL too.\n\nReported-and-tested-by:\
  \ syzbot+82650a4e0ed38f218363@syzkaller.appspotmail.com\nCC: stable@vger.kernel.org\
  \ # 4.19+\nSigned-off-by: Dongliang Mu <mudongliangabcd@gmail.com>\nReviewed-by:\
  \ David Sterba <dsterba@suse.com>\nSigned-off-by: David Sterba <dsterba@suse.com>\n"
submodule:
- fs/btrfs
hunk_count: 2
covered_count: 2
