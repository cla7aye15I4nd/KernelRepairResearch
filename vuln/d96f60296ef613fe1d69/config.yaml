id: d96f60296ef613fe1d69
bug_link: https://syzkaller.appspot.com/bug?extid=d96f60296ef613fe1d69
title: kernel BUG at include/linux/mm.h:LINE!
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: ccda3c4b77777f66aeb3c531352bb40d59501c59
fix_commit: a466ef76b815b86748d9870ef2a430af7b39c710
datetime: '2018-05-13T19:50:06+02:00'
fix_commit_message: 'x86/kexec: Avoid double free_page() upon do_kexec_load() failure


  >From ff82bedd3e12f0d3353282054ae48c3bd8c72012 Mon Sep 17 00:00:00 2001

  From: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>

  Date: Wed, 9 May 2018 12:12:39 +0900

  Subject: [PATCH v3] x86/kexec: avoid double free_page() upon do_kexec_load() failure.


  syzbot is reporting crashes after memory allocation failure inside

  do_kexec_load() [1]. This is because free_transition_pgtable() is called

  by both init_transition_pgtable() and machine_kexec_cleanup() when memory

  allocation failed inside init_transition_pgtable().


  Regarding 32bit code, machine_kexec_free_page_tables() is called by both

  machine_kexec_alloc_page_tables() and machine_kexec_cleanup() when memory

  allocation failed inside machine_kexec_alloc_page_tables().


  Fix this by leaving the error handling to machine_kexec_cleanup()

  (and optionally setting NULL after free_page()).


  [1] https://syzkaller.appspot.com/bug?id=91e52396168cf2bdd572fe1e1bc0bc645c1c6b40


  Fixes: f5deb79679af6eb4 ("x86: kexec: Use one page table in x86_64 machine_kexec")

  Fixes: 92be3d6bdf2cb349 ("kexec/i386: allocate page table pages dynamically")

  Reported-by: syzbot <syzbot+d96f60296ef613fe1d69@syzkaller.appspotmail.com>

  Signed-off-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>

  Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

  Acked-by: Baoquan He <bhe@redhat.com>

  Cc: thomas.lendacky@amd.com

  Cc: prudo@linux.vnet.ibm.com

  Cc: Huang Ying <ying.huang@intel.com>

  Cc: syzkaller-bugs@googlegroups.com

  Cc: takahiro.akashi@linaro.org

  Cc: H. Peter Anvin <hpa@zytor.com>

  Cc: akpm@linux-foundation.org

  Cc: dyoung@redhat.com

  Cc: kirill.shutemov@linux.intel.com

  Link: https://lkml.kernel.org/r/201805091942.DGG12448.tMFVFSJFQOOLHO@I-love.SAKURA.ne.jp


  '
submodule:
- arch/x86/kernel
hunk_count: 4
covered_count: 2
