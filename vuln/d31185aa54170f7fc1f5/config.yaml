id: d31185aa54170f7fc1f5
bug_link: https://syzkaller.appspot.com/bug?extid=d31185aa54170f7fc1f5
title: 'KMSAN: uninit-value in udf_update_tag'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 8832fc1e502687869606bb0a7b79848ed3bf036f
fix_commit: 27ab33854873e6fb958cb074681a0107cc2ecc4c
datetime: '2024-06-20T15:07:27+02:00'
fix_commit_message: 'udf: Fix bogus checksum computation in udf_rename()


  Syzbot reports uninitialized memory access in udf_rename() when updating

  checksum of ''..'' directory entry of a moved directory. This is indeed

  true as we pass on-stack diriter.fi to the udf_update_tag() and because

  that has only struct fileIdentDesc included in it and not the impUse or

  name fields, the checksumming function is going to checksum random stack

  contents beyond the end of the structure. This is actually harmless

  because the following udf_fiiter_write_fi() will recompute the checksum

  from on-disk buffers where everything is properly included. So all that

  is needed is just removing the bogus calculation.


  Fixes: e9109a92d2a9 ("udf: Convert udf_rename() to new directory iteration code")

  Link: https://lore.kernel.org/all/000000000000cf405f060d8f75a9@google.com/T/

  Link: https://patch.msgid.link/20240617154201.29512-1-jack@suse.cz

  Reported-by: syzbot+d31185aa54170f7fc1f5@syzkaller.appspotmail.com

  Signed-off-by: Jan Kara <jack@suse.cz>

  '
submodule:
- fs/udf
hunk_count: 1
covered_count: 1
