id: 746a4eece09f86bc39d7
bug_link: https://syzkaller.appspot.com/bug?extid=746a4eece09f86bc39d7
title: general protection fault in blk_mq_update_nr_hw_queues
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 8692814b77ca4228a99da8a005de0acf40af6132
fix_commit: 90b0296ece4bd8f70419f0addc1171be6feee195
datetime: '2022-11-24T06:58:11-07:00'
fix_commit_message: "block: fix crash in 'blk_mq_elv_switch_none'\n\nSyzbot found\
  \ the following issue:\ngeneral protection fault, probably for non-canonical address\
  \ 0xdffffc000000001d: 0000 [#1] PREEMPT SMP KASAN\nKASAN: null-ptr-deref in range\
  \ [0x00000000000000e8-0x00000000000000ef]\nCPU: 0 PID: 5234 Comm: syz-executor931\
  \ Not tainted 6.1.0-rc3-next-20221102-syzkaller #0\nHardware name: Google Google\
  \ Compute Engine/Google Compute Engine, BIOS Google 10/11/2022\nRIP: 0010:__elevator_get\
  \ block/elevator.h:94 [inline]\nRIP: 0010:blk_mq_elv_switch_none block/blk-mq.c:4593\
  \ [inline]\nRIP: 0010:__blk_mq_update_nr_hw_queues block/blk-mq.c:4658 [inline]\n\
  RIP: 0010:blk_mq_update_nr_hw_queues+0x304/0xe40 block/blk-mq.c:4709\nRSP: 0018:ffffc90003cdfc08\
  \ EFLAGS: 00010206\nRAX: 0000000000000000 RBX: dffffc0000000000 RCX: 0000000000000000\n\
  RDX: 000000000000001d RSI: 0000000000000002 RDI: 00000000000000e8\nRBP: ffff88801dbd0000\
  \ R08: ffff888027c89398 R09: ffffffff8de2e517\nR10: fffffbfff1bc5ca2 R11: 0000000000000000\
  \ R12: ffffc90003cdfc70\nR13: ffff88801dbd0008 R14: ffff88801dbd03f8 R15: ffff888027c89380\n\
  FS:  0000555557259300(0000) GS:ffff8880b9a00000(0000) knlGS:0000000000000000\nCS:\
  \  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00000000005d84c8 CR3: 000000007a7cb000\
  \ CR4: 00000000003506f0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n\
  DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n\
  \ <TASK>\n nbd_start_device+0x153/0xc30 drivers/block/nbd.c:1355\n nbd_start_device_ioctl\
  \ drivers/block/nbd.c:1405 [inline]\n __nbd_ioctl drivers/block/nbd.c:1481 [inline]\n\
  \ nbd_ioctl+0x5a1/0xbd0 drivers/block/nbd.c:1521\n blkdev_ioctl+0x36e/0x800 block/ioctl.c:614\n\
  \ vfs_ioctl fs/ioctl.c:51 [inline]\n __do_sys_ioctl fs/ioctl.c:870 [inline]\n __se_sys_ioctl\
  \ fs/ioctl.c:856 [inline]\n __x64_sys_ioctl+0x193/0x200 fs/ioctl.c:856\n do_syscall_x64\
  \ arch/x86/entry/common.c:50 [inline]\n do_syscall_64+0x35/0xb0 arch/x86/entry/common.c:80\n\
  \ entry_SYSCALL_64_after_hwframe+0x63/0xcd\n\nAs after dd6f7f17bf58 commit move\
  \ '__elevator_get(qe->type)' before set\n'qe->type', so will lead to access wild\
  \ pointer.\nTo solve above issue get 'qe->type' after set 'qe->type'.\n\nReported-by:\
  \ syzbot+746a4eece09f86bc39d7@syzkaller.appspotmail.com\nFixes:dd6f7f17bf58(\"block:\
  \ add proper helpers for elevator_type module refcount management\")\nSigned-off-by:\
  \ Ye Bin <yebin10@huawei.com>\nReviewed-by: Christoph Hellwig <hch@lst.de>\nLink:\
  \ https://lore.kernel.org/r/20221107033956.3276891-1-yebin@huaweicloud.com\nSigned-off-by:\
  \ Jens Axboe <axboe@kernel.dk>\n"
submodule:
- block
hunk_count: 1
covered_count: 1
