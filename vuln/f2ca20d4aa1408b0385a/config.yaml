id: f2ca20d4aa1408b0385a
bug_link: https://syzkaller.appspot.com/bug?extid=f2ca20d4aa1408b0385a
title: WARNING in switch_fpu_return
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: a7baead7e312f5a05381d68585fb6dc68e19e90f
fix_commit: 2620fe268e80d667a94553cd37a94ccaa2cb8c83
datetime: '2020-01-27T19:59:48+01:00'
fix_commit_message: "KVM: x86: Revert \"KVM: X86: Fix fpu state crash in kvm guest\"\
  \n\nReload the current thread's FPU state, which contains the guest's FPU\nstate,\
  \ to the CPU registers if necessary during vcpu_enter_guest().\nTIF_NEED_FPU_LOAD\
  \ can be set any time control is transferred out of KVM,\ne.g. if I/O is triggered\
  \ during a KVM call to get_user_pages() or if a\nsoftirq occurs while KVM is scheduled\
  \ in.\n\nMoving the handling of TIF_NEED_FPU_LOAD from vcpu_enter_guest() to\nkvm_arch_vcpu_load(),\
  \ effectively kvm_sched_in(), papered over a bug\nwhere kvm_put_guest_fpu() failed\
  \ to account for TIF_NEED_FPU_LOAD.  The\neasiest way to the kvm_put_guest_fpu()\
  \ bug was to run with involuntary\npreemption enable, thus handling TIF_NEED_FPU_LOAD\
  \ during kvm_sched_in()\nmade the bug go away.  But, removing the handling in vcpu_enter_guest()\n\
  exposed KVM to the rare case of a softirq triggering kernel_fpu_begin()\nbetween\
  \ vcpu_load() and vcpu_enter_guest().\n\nNow that kvm_{load,put}_guest_fpu() correctly\
  \ handle TIF_NEED_FPU_LOAD,\nrevert the commit to both restore the vcpu_enter_guest()\
  \ behavior and\neliminate the superfluous switch_fpu_return() in kvm_arch_vcpu_load().\n\
  \nNote, leaving the handling in kvm_arch_vcpu_load() isn't wrong per se,\nbut it\
  \ is unnecessary, and most critically, makes it extremely difficult\nto find bugs\
  \ such as the kvm_put_guest_fpu() issue due to shrinking the\nwindow where a softirq\
  \ can corrupt state.\n\nA sample trace triggered by warning if TIF_NEED_FPU_LOAD\
  \ is set while\nvcpu state is loaded:\n\n <IRQ>\n  gcmaes_crypt_by_sg.constprop.12+0x26e/0x660\n\
  \  ? 0xffffffffc024547d\n  ? __qdisc_run+0x83/0x510\n  ? __dev_queue_xmit+0x45e/0x990\n\
  \  ? ip_finish_output2+0x1a8/0x570\n  ? fib4_rule_action+0x61/0x70\n  ? fib4_rule_action+0x70/0x70\n\
  \  ? fib_rules_lookup+0x13f/0x1c0\n  ? helper_rfc4106_decrypt+0x82/0xa0\n  ? crypto_aead_decrypt+0x40/0x70\n\
  \  ? crypto_aead_decrypt+0x40/0x70\n  ? crypto_aead_decrypt+0x40/0x70\n  ? esp_output_tail+0x8f4/0xa5a\
  \ [esp4]\n  ? skb_ext_add+0xd3/0x170\n  ? xfrm_input+0x7a6/0x12c0\n  ? xfrm4_rcv_encap+0xae/0xd0\n\
  \  ? xfrm4_transport_finish+0x200/0x200\n  ? udp_queue_rcv_one_skb+0x1ba/0x460\n\
  \  ? udp_unicast_rcv_skb.isra.63+0x72/0x90\n  ? __udp4_lib_rcv+0x51b/0xb00\n  ?\
  \ ip_protocol_deliver_rcu+0xd2/0x1c0\n  ? ip_local_deliver_finish+0x44/0x50\n  ?\
  \ ip_local_deliver+0xe0/0xf0\n  ? ip_protocol_deliver_rcu+0x1c0/0x1c0\n  ? ip_rcv+0xbc/0xd0\n\
  \  ? ip_rcv_finish_core.isra.19+0x380/0x380\n  ? __netif_receive_skb_one_core+0x7e/0x90\n\
  \  ? netif_receive_skb_internal+0x3d/0xb0\n  ? napi_gro_receive+0xed/0x150\n  ?\
  \ 0xffffffffc0243c77\n  ? net_rx_action+0x149/0x3b0\n  ? __do_softirq+0xe4/0x2f8\n\
  \  ? handle_irq_event_percpu+0x6a/0x80\n  ? irq_exit+0xe6/0xf0\n  ? do_IRQ+0x7f/0xd0\n\
  \  ? common_interrupt+0xf/0xf\n  </IRQ>\n  ? irq_entries_start+0x20/0x660\n  ? vmx_get_interrupt_shadow+0x2f0/0x710\
  \ [kvm_intel]\n  ? kvm_set_msr_common+0xfc7/0x2380 [kvm]\n  ? recalibrate_cpu_khz+0x10/0x10\n\
  \  ? ktime_get+0x3a/0xa0\n  ? kvm_arch_vcpu_ioctl_run+0x107/0x560 [kvm]\n  ? kvm_init+0x6bf/0xd00\
  \ [kvm]\n  ? __seccomp_filter+0x7a/0x680\n  ? do_vfs_ioctl+0xa4/0x630\n  ? security_file_ioctl+0x32/0x50\n\
  \  ? ksys_ioctl+0x60/0x90\n  ? __x64_sys_ioctl+0x16/0x20\n  ? do_syscall_64+0x5f/0x1a0\n\
  \  ? entry_SYSCALL_64_after_hwframe+0x44/0xa9\n---[ end trace 9564a1ccad733a90 ]---\n\
  \nThis reverts commit e751732486eb3f159089a64d1901992b1357e7cc.\n\nFixes: e751732486eb3\
  \ (\"KVM: X86: Fix fpu state crash in kvm guest\")\nReported-by: Derek Yerger <derek@djy.llc>\n\
  Reported-by: kernel@najdan.com\nCc: Wanpeng Li <wanpengli@tencent.com>\nCc: Thomas\
  \ Lambertz <mail@thomaslambertz.de>\nCc: Rik van Riel <riel@surriel.com>\nCc: Sebastian\
  \ Andrzej Siewior <bigeasy@linutronix.de>\nCc: Borislav Petkov <bp@suse.de>\nCc:\
  \ Dave Hansen <dave.hansen@intel.com>\nCc: Thomas Gleixner <tglx@linutronix.de>\n\
  Cc: stable@vger.kernel.org\nSigned-off-by: Sean Christopherson <sean.j.christopherson@intel.com>\n\
  Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>\n"
submodule:
- arch/x86/kvm
hunk_count: 2
covered_count: 0
