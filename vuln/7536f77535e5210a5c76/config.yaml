id: 7536f77535e5210a5c76
bug_link: https://syzkaller.appspot.com/bug?extid=7536f77535e5210a5c76
title: WARNING in tomoyo_write_control
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 78d4f34e2115b517bcbfe7ec0d018bbbb6f9b0b8
fix_commit: 3df7546fc03b8f004eee0b9e3256369f7d096685
datetime: '2024-12-16T19:41:29+09:00'
fix_commit_message: 'tomoyo: don''t emit warning in tomoyo_write_control()


  syzbot is reporting too large allocation warning at tomoyo_write_control(),

  for one can write a very very long line without new line character. To fix

  this warning, I use __GFP_NOWARN rather than checking for KMALLOC_MAX_SIZE,

  for practically a valid line should be always shorter than 32KB where the

  "too small to fail" memory-allocation rule applies.


  One might try to write a valid line that is longer than 32KB, but such

  request will likely fail with -ENOMEM. Therefore, I feel that separately

  returning -EINVAL when a line is longer than KMALLOC_MAX_SIZE is redundant.

  There is no need to distinguish over-32KB and over-KMALLOC_MAX_SIZE.


  Reported-by: syzbot+7536f77535e5210a5c76@syzkaller.appspotmail.com

  Closes: https://syzkaller.appspot.com/bug?extid=7536f77535e5210a5c76

  Reported-by: Leo Stone <leocstone@gmail.com>

  Closes: https://lkml.kernel.org/r/20241216021459.178759-2-leocstone@gmail.com

  Signed-off-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>

  '
submodule:
- security/tomoyo
hunk_count: 1
covered_count: 1
