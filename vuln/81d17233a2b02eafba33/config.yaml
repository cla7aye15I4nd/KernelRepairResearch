id: 81d17233a2b02eafba33
bug_link: https://syzkaller.appspot.com/bug?extid=81d17233a2b02eafba33
title: inconsistent lock state in io_dismantle_req
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 13770a71ed35512cc73c6b350297a797f0b27880
fix_commit: 9ae1f8dd372e0e4c020b345cf9e09f519265e981
datetime: '2021-02-01T13:09:21-07:00'
fix_commit_message: "io_uring: fix inconsistent lock state\n\nWARNING: inconsistent\
  \ lock state\n\ninconsistent {HARDIRQ-ON-W} -> {IN-HARDIRQ-W} usage.\nsyz-executor217/8450\
  \ [HC1[1]:SC0[0]:HE0:SE1] takes:\nffff888023d6e620 (&fs->lock){?.+.}-{2:2}, at:\
  \ spin_lock include/linux/spinlock.h:354 [inline]\nffff888023d6e620 (&fs->lock){?.+.}-{2:2},\
  \ at: io_req_clean_work fs/io_uring.c:1398 [inline]\nffff888023d6e620 (&fs->lock){?.+.}-{2:2},\
  \ at: io_dismantle_req+0x66f/0xf60 fs/io_uring.c:2029\n\nother info that might help\
  \ us debug this:\n Possible unsafe locking scenario:\n\n       CPU0\n       ----\n\
  \  lock(&fs->lock);\n  <Interrupt>\n    lock(&fs->lock);\n\n *** DEADLOCK ***\n\n\
  1 lock held by syz-executor217/8450:\n #0: ffff88802417c3e8 (&ctx->uring_lock){+.+.}-{3:3},\
  \ at: __do_sys_io_uring_enter+0x1071/0x1f30 fs/io_uring.c:9442\n\nstack backtrace:\n\
  CPU: 1 PID: 8450 Comm: syz-executor217 Not tainted 5.11.0-rc5-next-20210129-syzkaller\
  \ #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google\
  \ 01/01/2011\nCall Trace:\n <IRQ>\n[...]\n _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151\n\
  \ spin_lock include/linux/spinlock.h:354 [inline]\n io_req_clean_work fs/io_uring.c:1398\
  \ [inline]\n io_dismantle_req+0x66f/0xf60 fs/io_uring.c:2029\n __io_free_req+0x3d/0x2e0\
  \ fs/io_uring.c:2046\n io_free_req fs/io_uring.c:2269 [inline]\n io_double_put_req\
  \ fs/io_uring.c:2392 [inline]\n io_put_req+0xf9/0x570 fs/io_uring.c:2388\n io_link_timeout_fn+0x30c/0x480\
  \ fs/io_uring.c:6497\n __run_hrtimer kernel/time/hrtimer.c:1519 [inline]\n __hrtimer_run_queues+0x609/0xe40\
  \ kernel/time/hrtimer.c:1583\n hrtimer_interrupt+0x334/0x940 kernel/time/hrtimer.c:1645\n\
  \ local_apic_timer_interrupt arch/x86/kernel/apic/apic.c:1085 [inline]\n __sysvec_apic_timer_interrupt+0x146/0x540\
  \ arch/x86/kernel/apic/apic.c:1102\n asm_call_irq_on_stack+0xf/0x20\n </IRQ>\n __run_sysvec_on_irqstack\
  \ arch/x86/include/asm/irq_stack.h:37 [inline]\n run_sysvec_on_irqstack_cond arch/x86/include/asm/irq_stack.h:89\
  \ [inline]\n sysvec_apic_timer_interrupt+0xbd/0x100 arch/x86/kernel/apic/apic.c:1096\n\
  \ asm_sysvec_apic_timer_interrupt+0x12/0x20 arch/x86/include/asm/idtentry.h:629\n\
  RIP: 0010:__raw_spin_unlock_irq include/linux/spinlock_api_smp.h:169 [inline]\n\
  RIP: 0010:_raw_spin_unlock_irq+0x25/0x40 kernel/locking/spinlock.c:199\n spin_unlock_irq\
  \ include/linux/spinlock.h:404 [inline]\n io_queue_linked_timeout+0x194/0x1f0 fs/io_uring.c:6525\n\
  \ __io_queue_sqe+0x328/0x1290 fs/io_uring.c:6594\n io_queue_sqe+0x631/0x10d0 fs/io_uring.c:6639\n\
  \ io_queue_link_head fs/io_uring.c:6650 [inline]\n io_submit_sqe fs/io_uring.c:6697\
  \ [inline]\n io_submit_sqes+0x19b5/0x2720 fs/io_uring.c:6960\n __do_sys_io_uring_enter+0x107d/0x1f30\
  \ fs/io_uring.c:9443\n do_syscall_64+0x2d/0x70 arch/x86/entry/common.c:46\n entry_SYSCALL_64_after_hwframe+0x44/0xa9\n\
  \nDon't free requests from under hrtimer context (softirq) as it may sleep\nor take\
  \ spinlocks improperly (e.g. non-irq versions).\n\nCc: stable@vger.kernel.org #\
  \ 5.6+\nReported-by: syzbot+81d17233a2b02eafba33@syzkaller.appspotmail.com\nSigned-off-by:\
  \ Pavel Begunkov <asml.silence@gmail.com>\nSigned-off-by: Jens Axboe <axboe@kernel.dk>\n"
submodule:
- fs
hunk_count: 3
covered_count: 1
