id: 83e8cbe702263932d9d4
bug_link: https://syzkaller.appspot.com/bug?extid=83e8cbe702263932d9d4
title: 'BUG: unable to handle kernel NULL pointer dereference in blk_mq_map_swqueue'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 34d11ffac1f56c3895dad32153abd6814452dc77
fix_commit: e01ad46d53b59720c6ae69963ee1756506954c85
datetime: '2018-10-13T15:42:04-06:00'
fix_commit_message: 'blk-mq: fallback to previous nr_hw_queues when updating fails


  When we try to increate the nr_hw_queues, we may fail due to

  shortage of memory or other reason, then blk_mq_realloc_hw_ctxs stops

  and some entries in q->queue_hw_ctx are left with NULL. However,

  because queue map has been updated with new nr_hw_queues, some cpus

  have been mapped to hw queue which just encounters allocation failure,

  thus blk_mq_map_queue could return NULL. This will cause panic in

  following blk_mq_map_swqueue.


  To fix it, when increase nr_hw_queues fails, fallback to previous

  nr_hw_queues and post warning. At the same time, driver''s .map_queues

  usually use completion irq affinity to map hw and cpu, fallback

  nr_hw_queues will cause lack of some cpu''s map to hw, so use default

  blk_mq_map_queues to do that.


  Reported-by: syzbot+83e8cbe702263932d9d4@syzkaller.appspotmail.com

  Signed-off-by: Jianchao Wang <jianchao.w.wang@oracle.com>

  Signed-off-by: Jens Axboe <axboe@kernel.dk>

  '
submodule:
- block
hunk_count: 5
covered_count: 2
