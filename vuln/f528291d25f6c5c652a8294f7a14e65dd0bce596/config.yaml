id: f528291d25f6c5c652a8294f7a14e65dd0bce596
bug_link: https://syzkaller.appspot.com/bug?extid=f528291d25f6c5c652a8294f7a14e65dd0bce596
title: WARNING in register_lock_class
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 16ae30ea17cdd2b67f486c3518592067c8f9cc62
fix_commit: f5cb779ba16334b45ba8946d6bfa6d9834d1527f
datetime: '2018-01-09T17:54:01+01:00'
fix_commit_message: 'ANDROID: binder: remove waitqueue when thread exits.


  binder_poll() passes the thread->wait waitqueue that

  can be slept on for work. When a thread that uses

  epoll explicitly exits using BINDER_THREAD_EXIT,

  the waitqueue is freed, but it is never removed

  from the corresponding epoll data structure. When

  the process subsequently exits, the epoll cleanup

  code tries to access the waitlist, which results in

  a use-after-free.


  Prevent this by using POLLFREE when the thread exits.


  Signed-off-by: Martijn Coenen <maco@android.com>

  Reported-by: syzbot <syzkaller@googlegroups.com>

  Cc: stable <stable@vger.kernel.org> # 4.14

  Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

  '
submodule:
- drivers/android
hunk_count: 1
covered_count: 0
