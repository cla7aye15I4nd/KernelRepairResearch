id: 8f819e36e01022991cfa
bug_link: https://syzkaller.appspot.com/bug?extid=8f819e36e01022991cfa
title: memory leak in vhci_write
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 0d0e2d032811280b927650ff3c15fe5020e82533
fix_commit: 7c9524d929648935bac2bbb4c20437df8f9c3f42
datetime: '2022-11-02T14:16:00-07:00'
fix_commit_message: "Bluetooth: L2CAP: Fix memory leak in vhci_write\n\nSyzkaller\
  \ reports a memory leak as follows:\n====================================\nBUG:\
  \ memory leak\nunreferenced object 0xffff88810d81ac00 (size 240):\n  [...]\n  hex\
  \ dump (first 32 bytes):\n    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n\
  \    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n  backtrace:\n\
  \    [<ffffffff838733d9>] __alloc_skb+0x1f9/0x270 net/core/skbuff.c:418\n    [<ffffffff833f742f>]\
  \ alloc_skb include/linux/skbuff.h:1257 [inline]\n    [<ffffffff833f742f>] bt_skb_alloc\
  \ include/net/bluetooth/bluetooth.h:469 [inline]\n    [<ffffffff833f742f>] vhci_get_user\
  \ drivers/bluetooth/hci_vhci.c:391 [inline]\n    [<ffffffff833f742f>] vhci_write+0x5f/0x230\
  \ drivers/bluetooth/hci_vhci.c:511\n    [<ffffffff815e398d>] call_write_iter include/linux/fs.h:2192\
  \ [inline]\n    [<ffffffff815e398d>] new_sync_write fs/read_write.c:491 [inline]\n\
  \    [<ffffffff815e398d>] vfs_write+0x42d/0x540 fs/read_write.c:578\n    [<ffffffff815e3cdd>]\
  \ ksys_write+0x9d/0x160 fs/read_write.c:631\n    [<ffffffff845e0645>] do_syscall_x64\
  \ arch/x86/entry/common.c:50 [inline]\n    [<ffffffff845e0645>] do_syscall_64+0x35/0xb0\
  \ arch/x86/entry/common.c:80\n    [<ffffffff84600087>] entry_SYSCALL_64_after_hwframe+0x63/0xcd\n\
  ====================================\n\nHCI core will uses hci_rx_work() to process\
  \ frame, which is queued to\nthe hdev->rx_q tail in hci_recv_frame() by HCI driver.\n\
  \nYet the problem is that, HCI core may not free the skb after handling\nACL data\
  \ packets. To be more specific, when start fragment does not\ncontain the L2CAP\
  \ length, HCI core just copies skb into conn->rx_skb and\nfinishes frame process\
  \ in l2cap_recv_acldata(), without freeing the skb,\nwhich triggers the above memory\
  \ leak.\n\nThis patch solves it by releasing the relative skb, after processing\n\
  the above case in l2cap_recv_acldata().\n\nFixes: 4d7ea8ee90e4 (\"Bluetooth: L2CAP:\
  \ Fix handling fragmented length\")\nLink: https://lore.kernel.org/all/0000000000000d0b1905e6aaef64@google.com/\n\
  Reported-and-tested-by: syzbot+8f819e36e01022991cfa@syzkaller.appspotmail.com\n\
  Signed-off-by: Hawkins Jiawei <yin31149@gmail.com>\nSigned-off-by: Luiz Augusto\
  \ von Dentz <luiz.von.dentz@intel.com>\n"
submodule:
- net/bluetooth
hunk_count: 2
covered_count: 0
