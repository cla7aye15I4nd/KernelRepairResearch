id: 8bee3285b9e190f1509e
bug_link: https://syzkaller.appspot.com/bug?extid=8bee3285b9e190f1509e
title: 'KASAN: use-after-free Read in __kernfs_remove'
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: ec9c88070debd8d87335f2468481a41d6bc2d0c6
fix_commit: 4abc99652812a2ddf932f137515d5c5a04723538
datetime: '2022-09-24T13:52:27+02:00'
fix_commit_message: "kernfs: fix use-after-free in __kernfs_remove\n\nSyzkaller managed\
  \ to trigger concurrent calls to\nkernfs_remove_by_name_ns() for the same file resulting\
  \ in\na KASAN detected use-after-free. The race occurs when the root\nnode is freed\
  \ during kernfs_drain().\n\nTo prevent this acquire an additional reference for\
  \ the root\nof the tree that is removed before calling __kernfs_remove().\n\nFound\
  \ by syzkaller with the following reproducer (slab_nomerge is\nrequired):\n\nsyz_mount_image$ext4(0x0,\
  \ &(0x7f0000000100)='./file0\\x00', 0x100000, 0x0, 0x0, 0x0, 0x0)\nr0 = openat(0xffffffffffffff9c,\
  \ &(0x7f0000000080)='/proc/self/exe\\x00', 0x0, 0x0)\nclose(r0)\npipe2(&(0x7f0000000140)={0xffffffffffffffff,\
  \ <r1=>0xffffffffffffffff}, 0x800)\nmount$9p_fd(0x0, &(0x7f0000000040)='./file0\\\
  x00', &(0x7f00000000c0), 0x408, &(0x7f0000000280)={'trans=fd,', {'rfdno', 0x3d,\
  \ r0}, 0x2c, {'wfdno', 0x3d, r1}, 0x2c, {[{@cache_loose}, {@mmap}, {@loose}, {@loose},\
  \ {@mmap}], [{@mask={'mask', 0x3d, '^MAY_EXEC'}}, {@fsmagic={'fsmagic', 0x3d, 0x10001}},\
  \ {@dont_hash}]}})\n\nSample report:\n\n==================================================================\n\
  BUG: KASAN: use-after-free in kernfs_type include/linux/kernfs.h:335 [inline]\n\
  BUG: KASAN: use-after-free in kernfs_leftmost_descendant fs/kernfs/dir.c:1261 [inline]\n\
  BUG: KASAN: use-after-free in __kernfs_remove.part.0+0x843/0x960 fs/kernfs/dir.c:1369\n\
  Read of size 2 at addr ffff8880088807f0 by task syz-executor.2/857\n\nCPU: 0 PID:\
  \ 857 Comm: syz-executor.2 Not tainted 6.0.0-rc3-00363-g7726d4c3e60b #5\nHardware\
  \ name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.15.0-1 04/01/2014\nCall Trace:\n\
  \ <TASK>\n __dump_stack lib/dump_stack.c:88 [inline]\n dump_stack_lvl+0x6e/0x91\
  \ lib/dump_stack.c:106\n print_address_description mm/kasan/report.c:317 [inline]\n\
  \ print_report.cold+0x5e/0x5e5 mm/kasan/report.c:433\n kasan_report+0xa3/0x130 mm/kasan/report.c:495\n\
  \ kernfs_type include/linux/kernfs.h:335 [inline]\n kernfs_leftmost_descendant fs/kernfs/dir.c:1261\
  \ [inline]\n __kernfs_remove.part.0+0x843/0x960 fs/kernfs/dir.c:1369\n __kernfs_remove\
  \ fs/kernfs/dir.c:1356 [inline]\n kernfs_remove_by_name_ns+0x108/0x190 fs/kernfs/dir.c:1589\n\
  \ sysfs_slab_add+0x133/0x1e0 mm/slub.c:5943\n __kmem_cache_create+0x3e0/0x550 mm/slub.c:4899\n\
  \ create_cache mm/slab_common.c:229 [inline]\n kmem_cache_create_usercopy+0x167/0x2a0\
  \ mm/slab_common.c:335\n p9_client_create+0xd4d/0x1190 net/9p/client.c:993\n v9fs_session_init+0x1e6/0x13c0\
  \ fs/9p/v9fs.c:408\n v9fs_mount+0xb9/0xbd0 fs/9p/vfs_super.c:126\n legacy_get_tree+0xf1/0x200\
  \ fs/fs_context.c:610\n vfs_get_tree+0x85/0x2e0 fs/super.c:1530\n do_new_mount fs/namespace.c:3040\
  \ [inline]\n path_mount+0x675/0x1d00 fs/namespace.c:3370\n do_mount fs/namespace.c:3383\
  \ [inline]\n __do_sys_mount fs/namespace.c:3591 [inline]\n __se_sys_mount fs/namespace.c:3568\
  \ [inline]\n __x64_sys_mount+0x282/0x300 fs/namespace.c:3568\n do_syscall_x64 arch/x86/entry/common.c:50\
  \ [inline]\n do_syscall_64+0x38/0x90 arch/x86/entry/common.c:80\n entry_SYSCALL_64_after_hwframe+0x63/0xcd\n\
  RIP: 0033:0x7f725f983aed\nCode: 02 b8 ff ff ff ff c3 66 0f 1f 44 00 00 f3 0f 1e\
  \ fa 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05\
  \ <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 b0 ff ff ff f7 d8 64 89 01 48\nRSP: 002b:00007f725f0f7028\
  \ EFLAGS: 00000246 ORIG_RAX: 00000000000000a5\nRAX: ffffffffffffffda RBX: 00007f725faa3f80\
  \ RCX: 00007f725f983aed\nRDX: 00000000200000c0 RSI: 0000000020000040 RDI: 0000000000000000\n\
  RBP: 00007f725f9f419c R08: 0000000020000280 R09: 0000000000000000\nR10: 0000000000000408\
  \ R11: 0000000000000246 R12: 0000000000000000\nR13: 0000000000000006 R14: 00007f725faa3f80\
  \ R15: 00007f725f0d7000\n </TASK>\n\nAllocated by task 855:\n kasan_save_stack+0x1e/0x40\
  \ mm/kasan/common.c:38\n kasan_set_track mm/kasan/common.c:45 [inline]\n set_alloc_info\
  \ mm/kasan/common.c:437 [inline]\n __kasan_slab_alloc+0x66/0x80 mm/kasan/common.c:470\n\
  \ kasan_slab_alloc include/linux/kasan.h:224 [inline]\n slab_post_alloc_hook mm/slab.h:727\
  \ [inline]\n slab_alloc_node mm/slub.c:3243 [inline]\n slab_alloc mm/slub.c:3251\
  \ [inline]\n __kmem_cache_alloc_lru mm/slub.c:3258 [inline]\n kmem_cache_alloc+0xbf/0x200\
  \ mm/slub.c:3268\n kmem_cache_zalloc include/linux/slab.h:723 [inline]\n __kernfs_new_node+0xd4/0x680\
  \ fs/kernfs/dir.c:593\n kernfs_new_node fs/kernfs/dir.c:655 [inline]\n kernfs_create_dir_ns+0x9c/0x220\
  \ fs/kernfs/dir.c:1010\n sysfs_create_dir_ns+0x127/0x290 fs/sysfs/dir.c:59\n create_dir\
  \ lib/kobject.c:63 [inline]\n kobject_add_internal+0x24a/0x8d0 lib/kobject.c:223\n\
  \ kobject_add_varg lib/kobject.c:358 [inline]\n kobject_init_and_add+0x101/0x160\
  \ lib/kobject.c:441\n sysfs_slab_add+0x156/0x1e0 mm/slub.c:5954\n __kmem_cache_create+0x3e0/0x550\
  \ mm/slub.c:4899\n create_cache mm/slab_common.c:229 [inline]\n kmem_cache_create_usercopy+0x167/0x2a0\
  \ mm/slab_common.c:335\n p9_client_create+0xd4d/0x1190 net/9p/client.c:993\n v9fs_session_init+0x1e6/0x13c0\
  \ fs/9p/v9fs.c:408\n v9fs_mount+0xb9/0xbd0 fs/9p/vfs_super.c:126\n legacy_get_tree+0xf1/0x200\
  \ fs/fs_context.c:610\n vfs_get_tree+0x85/0x2e0 fs/super.c:1530\n do_new_mount fs/namespace.c:3040\
  \ [inline]\n path_mount+0x675/0x1d00 fs/namespace.c:3370\n do_mount fs/namespace.c:3383\
  \ [inline]\n __do_sys_mount fs/namespace.c:3591 [inline]\n __se_sys_mount fs/namespace.c:3568\
  \ [inline]\n __x64_sys_mount+0x282/0x300 fs/namespace.c:3568\n do_syscall_x64 arch/x86/entry/common.c:50\
  \ [inline]\n do_syscall_64+0x38/0x90 arch/x86/entry/common.c:80\n entry_SYSCALL_64_after_hwframe+0x63/0xcd\n\
  \nFreed by task 857:\n kasan_save_stack+0x1e/0x40 mm/kasan/common.c:38\n kasan_set_track+0x21/0x30\
  \ mm/kasan/common.c:45\n kasan_set_free_info+0x20/0x40 mm/kasan/generic.c:370\n\
  \ ____kasan_slab_free mm/kasan/common.c:367 [inline]\n ____kasan_slab_free mm/kasan/common.c:329\
  \ [inline]\n __kasan_slab_free+0x108/0x190 mm/kasan/common.c:375\n kasan_slab_free\
  \ include/linux/kasan.h:200 [inline]\n slab_free_hook mm/slub.c:1754 [inline]\n\
  \ slab_free_freelist_hook mm/slub.c:1780 [inline]\n slab_free mm/slub.c:3534 [inline]\n\
  \ kmem_cache_free+0x9c/0x340 mm/slub.c:3551\n kernfs_put.part.0+0x2b2/0x520 fs/kernfs/dir.c:547\n\
  \ kernfs_put+0x42/0x50 fs/kernfs/dir.c:521\n __kernfs_remove.part.0+0x72d/0x960\
  \ fs/kernfs/dir.c:1407\n __kernfs_remove fs/kernfs/dir.c:1356 [inline]\n kernfs_remove_by_name_ns+0x108/0x190\
  \ fs/kernfs/dir.c:1589\n sysfs_slab_add+0x133/0x1e0 mm/slub.c:5943\n __kmem_cache_create+0x3e0/0x550\
  \ mm/slub.c:4899\n create_cache mm/slab_common.c:229 [inline]\n kmem_cache_create_usercopy+0x167/0x2a0\
  \ mm/slab_common.c:335\n p9_client_create+0xd4d/0x1190 net/9p/client.c:993\n v9fs_session_init+0x1e6/0x13c0\
  \ fs/9p/v9fs.c:408\n v9fs_mount+0xb9/0xbd0 fs/9p/vfs_super.c:126\n legacy_get_tree+0xf1/0x200\
  \ fs/fs_context.c:610\n vfs_get_tree+0x85/0x2e0 fs/super.c:1530\n do_new_mount fs/namespace.c:3040\
  \ [inline]\n path_mount+0x675/0x1d00 fs/namespace.c:3370\n do_mount fs/namespace.c:3383\
  \ [inline]\n __do_sys_mount fs/namespace.c:3591 [inline]\n __se_sys_mount fs/namespace.c:3568\
  \ [inline]\n __x64_sys_mount+0x282/0x300 fs/namespace.c:3568\n do_syscall_x64 arch/x86/entry/common.c:50\
  \ [inline]\n do_syscall_64+0x38/0x90 arch/x86/entry/common.c:80\n entry_SYSCALL_64_after_hwframe+0x63/0xcd\n\
  \nThe buggy address belongs to the object at ffff888008880780\n which belongs to\
  \ the cache kernfs_node_cache of size 128\nThe buggy address is located 112 bytes\
  \ inside of\n 128-byte region [ffff888008880780, ffff888008880800)\n\nThe buggy\
  \ address belongs to the physical page:\npage:00000000732833f8 refcount:1 mapcount:0\
  \ mapping:0000000000000000 index:0x0 pfn:0x8880\nflags: 0x100000000000200(slab|node=0|zone=1)\n\
  raw: 0100000000000200 0000000000000000 dead000000000122 ffff888001147280\nraw: 0000000000000000\
  \ 0000000000150015 00000001ffffffff 0000000000000000\npage dumped because: kasan:\
  \ bad access detected\n\nMemory state around the buggy address:\n ffff888008880680:\
  \ fc fc fc fc fc fc fc fc fa fb fb fb fb fb fb fb\n ffff888008880700: fb fb fb fb\
  \ fb fb fb fb fc fc fc fc fc fc fc fc\n>ffff888008880780: fa fb fb fb fb fb fb fb\
  \ fb fb fb fb fb fb fb fb\n                                                    \
  \         ^\n ffff888008880800: fc fc fc fc fc fc fc fc fa fb fb fb fb fb fb fb\n\
  \ ffff888008880880: fb fb fb fb fb fb fb fb fc fc fc fc fc fc fc fc\n==================================================================\n\
  \nAcked-by: Tejun Heo <tj@kernel.org>\nCc: stable <stable@kernel.org> # -rc3\nSigned-off-by:\
  \ Christian A. Ehrhardt <lk@c--e.de>\nLink: https://lore.kernel.org/r/20220913121723.691454-1-lk@c--e.de\n\
  Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>\n"
submodule:
- fs/kernfs
hunk_count: 1
covered_count: 1
