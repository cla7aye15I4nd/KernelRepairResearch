id: 1f52b3a18d5633fa7f82
bug_link: https://syzkaller.appspot.com/bug?extid=1f52b3a18d5633fa7f82
title: kernel BUG in __page_mapcount
source_page: https://syzkaller.appspot.com/upstream/fixed
trigger_commit: 925346c129da1171222a9cdb11fa2b734d9955da
fix_commit: 24d7275ce2791829953ed4e72f68277ceb2571c6
datetime: '2022-02-11T17:55:00-08:00'
fix_commit_message: "fs/proc: task_mmu.c: don't read mapcount for migration entry\n\
  \nThe syzbot reported the below BUG:\n\n  kernel BUG at include/linux/page-flags.h:785!\n\
  \  invalid opcode: 0000 [#1] PREEMPT SMP KASAN\n  CPU: 1 PID: 4392 Comm: syz-executor560\
  \ Not tainted 5.16.0-rc6-syzkaller #0\n  Hardware name: Google Google Compute Engine/Google\
  \ Compute Engine, BIOS Google 01/01/2011\n  RIP: 0010:PageDoubleMap include/linux/page-flags.h:785\
  \ [inline]\n  RIP: 0010:__page_mapcount+0x2d2/0x350 mm/util.c:744\n  Call Trace:\n\
  \    page_mapcount include/linux/mm.h:837 [inline]\n    smaps_account+0x470/0xb10\
  \ fs/proc/task_mmu.c:466\n    smaps_pte_entry fs/proc/task_mmu.c:538 [inline]\n\
  \    smaps_pte_range+0x611/0x1250 fs/proc/task_mmu.c:601\n    walk_pmd_range mm/pagewalk.c:128\
  \ [inline]\n    walk_pud_range mm/pagewalk.c:205 [inline]\n    walk_p4d_range mm/pagewalk.c:240\
  \ [inline]\n    walk_pgd_range mm/pagewalk.c:277 [inline]\n    __walk_page_range+0xe23/0x1ea0\
  \ mm/pagewalk.c:379\n    walk_page_vma+0x277/0x350 mm/pagewalk.c:530\n    smap_gather_stats.part.0+0x148/0x260\
  \ fs/proc/task_mmu.c:768\n    smap_gather_stats fs/proc/task_mmu.c:741 [inline]\n\
  \    show_smap+0xc6/0x440 fs/proc/task_mmu.c:822\n    seq_read_iter+0xbb0/0x1240\
  \ fs/seq_file.c:272\n    seq_read+0x3e0/0x5b0 fs/seq_file.c:162\n    vfs_read+0x1b5/0x600\
  \ fs/read_write.c:479\n    ksys_read+0x12d/0x250 fs/read_write.c:619\n    do_syscall_x64\
  \ arch/x86/entry/common.c:50 [inline]\n    do_syscall_64+0x35/0xb0 arch/x86/entry/common.c:80\n\
  \    entry_SYSCALL_64_after_hwframe+0x44/0xae\n\nThe reproducer was trying to read\
  \ /proc/$PID/smaps when calling\nMADV_FREE at the mean time.  MADV_FREE may split\
  \ THPs if it is called\nfor partial THP.  It may trigger the below race:\n\n   \
  \        CPU A                         CPU B\n           -----                 \
  \        -----\n  smaps walk:                      MADV_FREE:\n  page_mapcount()\n\
  \    PageCompound()\n                                   split_huge_page()\n    page\
  \ = compound_head(page)\n    PageDoubleMap(page)\n\nWhen calling PageDoubleMap()\
  \ this page is not a tail page of THP anymore\nso the BUG is triggered.\n\nThis\
  \ could be fixed by elevated refcount of the page before calling\nmapcount, but\
  \ that would prevent it from counting migration entries, and\nit seems overkilling\
  \ because the race just could happen when PMD is\nsplit so all PTE entries of tail\
  \ pages are actually migration entries,\nand smaps_account() does treat migration\
  \ entries as mapcount == 1 as\nKirill pointed out.\n\nAdd a new parameter for smaps_account()\
  \ to tell this entry is migration\nentry then skip calling page_mapcount().  Don't\
  \ skip getting mapcount\nfor device private entries since they do track references\
  \ with mapcount.\n\nPagemap also has the similar issue although it was not reported.\
  \  Fixed\nit as well.\n\n[shy828301@gmail.com: v4]\n  Link: https://lkml.kernel.org/r/20220203182641.824731-1-shy828301@gmail.com\n\
  [nathan@kernel.org: avoid unused variable warning in pagemap_pmd_range()]\n  Link:\
  \ https://lkml.kernel.org/r/20220207171049.1102239-1-nathan@kernel.org\nLink: https://lkml.kernel.org/r/20220120202805.3369-1-shy828301@gmail.com\n\
  Fixes: e9b61f19858a (\"thp: reintroduce split_huge_page()\")\nSigned-off-by: Yang\
  \ Shi <shy828301@gmail.com>\nSigned-off-by: Nathan Chancellor <nathan@kernel.org>\n\
  Reported-by: syzbot+1f52b3a18d5633fa7f82@syzkaller.appspotmail.com\nAcked-by: David\
  \ Hildenbrand <david@redhat.com>\nCc: \"Kirill A. Shutemov\" <kirill.shutemov@linux.intel.com>\n\
  Cc: Jann Horn <jannh@google.com>\nCc: Matthew Wilcox <willy@infradead.org>\nCc:\
  \ Alexey Dobriyan <adobriyan@gmail.com>\nCc: <stable@vger.kernel.org>\nSigned-off-by:\
  \ Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\n"
submodule:
- fs/proc
hunk_count: 12
covered_count: 8
